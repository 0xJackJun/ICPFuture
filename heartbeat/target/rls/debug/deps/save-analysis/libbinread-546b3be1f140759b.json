{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0","program":"/Users/quanrong/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","binread","--edition=2018","/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"debug_template\"","--cfg","feature=\"default\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=546b3be1f140759b","-C","extra-filename=-546b3be1f140759b","--out-dir","/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps","-L","dependency=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps","--extern","binread_derive=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/libbinread_derive-c362d0bfdabf4934.dylib","--extern","lazy_static=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/liblazy_static-2745487a1a96fbec.rmeta","--extern","rustversion=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/librustversion-0241937bbab86909.dylib","--cap-lints","allow","--error-format=json","--sysroot","/Users/quanrong/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/libbinread-546b3be1f140759b.rmeta"},"prelude":{"crate_id":{"name":"binread","disambiguator":[2983505321132618258,0]},"crate_root":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src","external_crates":[{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7101137524639191865,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","num":2,"id":{"name":"core","disambiguator":[1887987468260230341,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11423829060327785168,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11467597086512816709,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11478090127832647137,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[16011649288231704614,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12732930576792739361,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11329576585081918948,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17189205392791100154,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2953602047458512213,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[4833631622402917298,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[2052285648718182991,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16253613530580249776,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[5745760535571076062,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[7876989589743503273,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[14488000063334320346,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[5084180220498965168,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binary_template.rs","num":18,"id":{"name":"lazy_static","disambiguator":[15251238100206206869,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","num":19,"id":{"name":"binread_derive","disambiguator":[9282606392196794066,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/mod.rs","num":20,"id":{"name":"rustversion","disambiguator":[16871001068848726566,0]}}],"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":0,"byte_end":10506,"line_start":1,"line_end":325,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":622},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/endian.rs","byte_start":43669,"byte_end":43672,"line_start":14,"line_end":14,"column_start":18,"column_end":21},"alias_span":null,"name":"BE","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":0,"index":623},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/endian.rs","byte_start":43669,"byte_end":43672,"line_start":14,"line_end":14,"column_start":18,"column_end":21},"alias_span":null,"name":"BE","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":0,"index":624},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/endian.rs","byte_start":43680,"byte_end":43686,"line_start":14,"line_end":14,"column_start":29,"column_end":35},"alias_span":null,"name":"LE","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":0,"index":625},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/endian.rs","byte_start":43680,"byte_end":43686,"line_start":14,"line_end":14,"column_start":29,"column_end":35},"alias_span":null,"name":"LE","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":0,"index":626},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/endian.rs","byte_start":43694,"byte_end":43700,"line_start":14,"line_end":14,"column_start":43,"column_end":49},"alias_span":null,"name":"NE","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":0,"index":627},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/endian.rs","byte_start":43694,"byte_end":43700,"line_start":14,"line_end":14,"column_start":43,"column_end":49},"alias_span":null,"name":"NE","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":1,"index":4331},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/prelude.rs","byte_start":62770,"byte_end":62774,"line_start":1,"line_end":1,"column_start":16,"column_end":20},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":239}},{"kind":"Use","ref_id":{"krate":1,"index":4410},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/prelude.rs","byte_start":62791,"byte_end":62795,"line_start":2,"line_end":2,"column_start":16,"column_end":20},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":239}},{"kind":"Use","ref_id":{"krate":1,"index":10469},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/mod.rs","byte_start":61121,"byte_end":61126,"line_start":17,"line_end":17,"column_start":19,"column_end":24},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":226}},{"kind":"Use","ref_id":{"krate":1,"index":10271},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/mod.rs","byte_start":61128,"byte_end":61134,"line_start":17,"line_end":17,"column_start":26,"column_end":32},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":226}},{"kind":"Use","ref_id":{"krate":1,"index":3793},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/mod.rs","byte_start":61136,"byte_end":61141,"line_start":17,"line_end":17,"column_start":34,"column_end":39},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":226}},{"kind":"Use","ref_id":{"krate":1,"index":10297},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/mod.rs","byte_start":61143,"byte_end":61152,"line_start":17,"line_end":17,"column_start":41,"column_end":50},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":226}},{"kind":"Use","ref_id":{"krate":1,"index":4331},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/mod.rs","byte_start":61154,"byte_end":61158,"line_start":17,"line_end":17,"column_start":52,"column_end":56},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":226}},{"kind":"Use","ref_id":{"krate":1,"index":3791},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/mod.rs","byte_start":61160,"byte_end":61166,"line_start":17,"line_end":17,"column_start":58,"column_end":64},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":226}},{"kind":"Use","ref_id":{"krate":1,"index":4410},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/mod.rs","byte_start":61168,"byte_end":61172,"line_start":17,"line_end":17,"column_start":66,"column_end":70},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":226}},{"kind":"Use","ref_id":{"krate":1,"index":10430},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/mod.rs","byte_start":61174,"byte_end":61182,"line_start":17,"line_end":17,"column_start":72,"column_end":80},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":226}},{"kind":"Use","ref_id":{"krate":0,"index":621},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4648,"byte_end":4654,"line_start":158,"line_end":158,"column_start":13,"column_end":19},"alias_span":null,"name":"Endian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4667,"byte_end":4672,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":122},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4689,"byte_end":4696,"line_start":160,"line_end":160,"column_start":16,"column_end":23},"alias_span":null,"name":"FilePtr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":135},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4698,"byte_end":4708,"line_start":160,"line_end":160,"column_start":25,"column_end":35},"alias_span":null,"name":"FilePtr128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":129},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4710,"byte_end":4719,"line_start":160,"line_end":160,"column_start":37,"column_end":46},"alias_span":null,"name":"FilePtr16","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":131},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4721,"byte_end":4730,"line_start":160,"line_end":160,"column_start":48,"column_end":57},"alias_span":null,"name":"FilePtr32","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":133},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4732,"byte_end":4741,"line_start":160,"line_end":160,"column_start":59,"column_end":68},"alias_span":null,"name":"FilePtr64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4743,"byte_end":4751,"line_start":160,"line_end":160,"column_start":70,"column_end":78},"alias_span":null,"name":"FilePtr8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":218},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4768,"byte_end":4773,"line_start":161,"line_end":161,"column_start":15,"column_end":20},"alias_span":null,"name":"count","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":197},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4775,"byte_end":4780,"line_start":161,"line_end":161,"column_start":22,"column_end":27},"alias_span":null,"name":"until","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":213},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4782,"byte_end":4791,"line_start":161,"line_end":161,"column_start":29,"column_end":38},"alias_span":null,"name":"until_eof","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":205},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4793,"byte_end":4808,"line_start":161,"line_end":161,"column_start":40,"column_end":55},"alias_span":null,"name":"until_exclusive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":714},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4824,"byte_end":4835,"line_start":162,"line_end":162,"column_start":14,"column_end":25},"alias_span":null,"name":"ReadOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4852,"byte_end":4860,"line_start":163,"line_end":163,"column_start":16,"column_end":24},"alias_span":null,"name":"PosValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":725},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4876,"byte_end":4886,"line_start":164,"line_end":164,"column_start":15,"column_end":25},"alias_span":null,"name":"NullString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":726},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4876,"byte_end":4886,"line_start":164,"line_end":164,"column_start":15,"column_end":25},"alias_span":null,"name":"NullString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":736},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4888,"byte_end":4902,"line_start":164,"line_end":164,"column_start":27,"column_end":41},"alias_span":null,"name":"NullWideString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":737},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4888,"byte_end":4902,"line_start":164,"line_end":164,"column_start":27,"column_end":41},"alias_span":null,"name":"NullWideString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":1108},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":5035,"byte_end":5042,"line_start":170,"line_end":170,"column_start":25,"column_end":32},"alias_span":null,"name":"BinRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":1110},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":5141,"byte_end":5155,"line_start":173,"line_end":173,"column_start":25,"column_end":39},"alias_span":null,"name":"derive_binread","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":5200,"byte_end":5201,"line_start":176,"line_end":176,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":581},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":10433,"byte_end":10440,"line_start":322,"line_end":322,"column_start":20,"column_end":27},"alias_span":null,"name":"BinRead","value":"","parent":{"krate":0,"index":611}},{"kind":"Use","ref_id":{"krate":19,"index":1108},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":10433,"byte_end":10440,"line_start":322,"line_end":322,"column_start":20,"column_end":27},"alias_span":null,"name":"BinRead","value":"","parent":{"krate":0,"index":611}},{"kind":"Use","ref_id":{"krate":0,"index":592},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":10461,"byte_end":10473,"line_start":323,"line_end":323,"column_start":20,"column_end":32},"alias_span":null,"name":"BinReaderExt","value":"","parent":{"krate":0,"index":611}},{"kind":"Use","ref_id":{"krate":0,"index":579},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":10494,"byte_end":10503,"line_start":324,"line_end":324,"column_start":20,"column_end":29},"alias_span":null,"name":"BinResult","value":"","parent":{"krate":0,"index":611}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":0,"byte_end":10506,"line_start":1,"line_end":325,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":45},{"krate":0,"index":49},{"krate":0,"index":64},{"krate":0,"index":110},{"krate":0,"index":171},{"krate":0,"index":226},{"krate":0,"index":275},{"krate":0,"index":277},{"krate":0,"index":310},{"krate":0,"index":357},{"krate":0,"index":420},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":592},{"krate":0,"index":609},{"krate":0,"index":611}],"decl_id":null,"docs":" A Rust crate for helping parse binary data using ✨macro magic✨.","sig":null,"attributes":[{"value":"/ A Rust crate for helping parse binary data using ✨macro magic✨.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":0,"byte_end":71,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":72,"byte_end":75,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":76,"byte_end":89,"line_start":3,"line_end":3,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":90,"byte_end":93,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":94,"byte_end":101,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"/ # use binread::{prelude::*, io::Cursor, NullString};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":102,"byte_end":158,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":159,"byte_end":162,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":163,"byte_end":185,"line_start":8,"line_end":8,"column_start":1,"column_end":23}},{"value":"/ #[br(magic = b\"DOG\", assert(name.len() != 0))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":186,"byte_end":236,"line_start":9,"line_end":9,"column_start":1,"column_end":51}},{"value":"/ struct Dog {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":237,"byte_end":253,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"/     bone_pile_count: u8,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":254,"byte_end":282,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":283,"byte_end":286,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/     #[br(big, count = bone_pile_count)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":287,"byte_end":330,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/     bone_piles: Vec<u16>,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":331,"byte_end":360,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":361,"byte_end":364,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/     #[br(align_before = 0xA)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":365,"byte_end":398,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/     name: NullString","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":399,"byte_end":423,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":424,"byte_end":429,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":430,"byte_end":433,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let mut reader = Cursor::new(b\"DOG\\x02\\x00\\x01\\x00\\x12\\0\\0Rudy\\0\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":434,"byte_end":505,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ let dog: Dog = reader.read_ne().unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":506,"byte_end":551,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(dog.bone_piles, &[0x1, 0x12]);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":552,"byte_end":597,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(dog.name.into_string(), \"Rudy\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":598,"byte_end":644,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":645,"byte_end":652,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":653,"byte_end":656,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # The Basics","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":657,"byte_end":673,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":674,"byte_end":677,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ At the core of `binread` is the [`BinRead`](BinRead) trait. It defines how to read","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":678,"byte_end":764,"line_start":28,"line_end":28,"column_start":1,"column_end":87}},{"value":"/ a type from bytes and is already implemented for most primitives and simple collections.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":765,"byte_end":857,"line_start":29,"line_end":29,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":858,"byte_end":861,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":862,"byte_end":873,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ use binread::{BinRead, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":874,"byte_end":913,"line_start":32,"line_end":32,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":914,"byte_end":917,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let mut reader = Cursor::new(b\"\\0\\0\\0\\x01\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":918,"byte_end":966,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/ let val = u32::read(&mut reader).unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":967,"byte_end":1013,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1014,"byte_end":1021,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1022,"byte_end":1025,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ However, [`read`](BinRead::read) is intentionally simple and, as a result, doesn't even","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1026,"byte_end":1117,"line_start":38,"line_end":38,"column_start":1,"column_end":92}},{"value":"/ allow you to configure the byte order. For that you need [`read_options`](BinRead::read_options)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1118,"byte_end":1218,"line_start":39,"line_end":39,"column_start":1,"column_end":101}},{"value":"/ which, while more powerful, isn't exactly ergonomics.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1219,"byte_end":1276,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1277,"byte_end":1280,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ So, as a balance between ergonomics and configurability you have the [`BinReaderExt`](BinReaderExt)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1281,"byte_end":1384,"line_start":42,"line_end":42,"column_start":1,"column_end":104}},{"value":"/ trait. It is an extension for readers to allow for you to directly read any BinRead types from","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1385,"byte_end":1483,"line_start":43,"line_end":43,"column_start":1,"column_end":99}},{"value":"/ any reader.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1484,"byte_end":1499,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1500,"byte_end":1503,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1504,"byte_end":1516,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1517,"byte_end":1528,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ use binread::{BinReaderExt, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1529,"byte_end":1573,"line_start":48,"line_end":48,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1574,"byte_end":1577,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let mut reader = Cursor::new(b\"\\x00\\x0A\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1578,"byte_end":1624,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ let val: u16 = reader.read_be().unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1625,"byte_end":1670,"line_start":51,"line_end":51,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(val, 10);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1671,"byte_end":1695,"line_start":52,"line_end":52,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1696,"byte_end":1703,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1704,"byte_end":1707,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ It even works for tuples and arrays of BinRead types for up to size 32.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1708,"byte_end":1783,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1784,"byte_end":1787,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Derive Macro","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1788,"byte_end":1806,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1807,"byte_end":1810,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ The most significant feature of binread is its ability to use the Derive macro to","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1811,"byte_end":1896,"line_start":59,"line_end":59,"column_start":1,"column_end":86}},{"value":"/ implement [`BinRead`](BinRead) for your own types. This allows you to replace repetitive","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1897,"byte_end":1989,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/ imperative code with declarative struct definitions for your binary data parsing.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":1990,"byte_end":2075,"line_start":61,"line_end":61,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2076,"byte_end":2079,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ## Basic Derive Example","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2080,"byte_end":2107,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2108,"byte_end":2119,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"/ # use binread::BinRead;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2120,"byte_end":2147,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2148,"byte_end":2170,"line_start":66,"line_end":66,"column_start":1,"column_end":23}},{"value":"/ struct MyType {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2171,"byte_end":2190,"line_start":67,"line_end":67,"column_start":1,"column_end":20}},{"value":"/     first: u32,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2191,"byte_end":2210,"line_start":68,"line_end":68,"column_start":1,"column_end":20}},{"value":"/     second: u32","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2211,"byte_end":2230,"line_start":69,"line_end":69,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2231,"byte_end":2236,"line_start":70,"line_end":70,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2237,"byte_end":2240,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ // Also works with tuple types!","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2241,"byte_end":2276,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2277,"byte_end":2299,"line_start":73,"line_end":73,"column_start":1,"column_end":23}},{"value":"/ struct MyType2(u32, u32);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2300,"byte_end":2329,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2330,"byte_end":2337,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ ## Attributes","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2338,"byte_end":2355,"line_start":76,"line_end":76,"column_start":1,"column_end":18}},{"value":"/ The BinRead derive macro uses attributes in order to allow for more complicated parsers. For","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2356,"byte_end":2452,"line_start":77,"line_end":77,"column_start":1,"column_end":97}},{"value":"/ example you can use `big` or `little` at either the struct-level or the field-level in order","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2453,"byte_end":2549,"line_start":78,"line_end":78,"column_start":1,"column_end":97}},{"value":"/ to override the byte order of values.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2550,"byte_end":2591,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2592,"byte_end":2603,"line_start":80,"line_end":80,"column_start":1,"column_end":12}},{"value":"/ # use binread::{prelude::*, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2604,"byte_end":2648,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2649,"byte_end":2671,"line_start":82,"line_end":82,"column_start":1,"column_end":23}},{"value":"/ #[br(little)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2672,"byte_end":2689,"line_start":83,"line_end":83,"column_start":1,"column_end":18}},{"value":"/ struct MyType (","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2690,"byte_end":2709,"line_start":84,"line_end":84,"column_start":1,"column_end":20}},{"value":"/     #[br(big)] u32, // will be big endian","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2710,"byte_end":2755,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"/     u32, // will be little endian","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2756,"byte_end":2793,"line_start":86,"line_end":86,"column_start":1,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2794,"byte_end":2800,"line_start":87,"line_end":87,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2801,"byte_end":2808,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ The order of precedence is: (from highest to lowest)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2809,"byte_end":2865,"line_start":89,"line_end":89,"column_start":1,"column_end":57}},{"value":"/ 1. Field-level","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2866,"byte_end":2884,"line_start":90,"line_end":90,"column_start":1,"column_end":19}},{"value":"/ 2. Variant-level (for enums)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2885,"byte_end":2917,"line_start":91,"line_end":91,"column_start":1,"column_end":33}},{"value":"/ 3. Top-level","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2918,"byte_end":2934,"line_start":92,"line_end":92,"column_start":1,"column_end":17}},{"value":"/ 4. Configured (i.e. what endianess was passed in)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2935,"byte_end":2988,"line_start":93,"line_end":93,"column_start":1,"column_end":54}},{"value":"/ 5. Native endianess","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":2989,"byte_end":3012,"line_start":94,"line_end":94,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3013,"byte_end":3016,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ For a list of attributes see the [`attribute`](attribute) module","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3017,"byte_end":3085,"line_start":96,"line_end":96,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3086,"byte_end":3089,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ## Generics","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3090,"byte_end":3105,"line_start":98,"line_end":98,"column_start":1,"column_end":16}},{"value":"/ The BinRead derive macro also allows for generic parsing. That way you can build up","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3106,"byte_end":3193,"line_start":99,"line_end":99,"column_start":1,"column_end":88}},{"value":"/ higher-level parsers that can have their type swapped out to allow greater reuse of code.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3194,"byte_end":3287,"line_start":100,"line_end":100,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3288,"byte_end":3291,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3292,"byte_end":3303,"line_start":102,"line_end":102,"column_start":1,"column_end":12}},{"value":"/ # use binread::{prelude::*, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3304,"byte_end":3348,"line_start":103,"line_end":103,"column_start":1,"column_end":45}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3349,"byte_end":3371,"line_start":104,"line_end":104,"column_start":1,"column_end":23}},{"value":"/ struct U32CountVec<T: BinRead<Args=()>> {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3372,"byte_end":3417,"line_start":105,"line_end":105,"column_start":1,"column_end":46}},{"value":"/     count: u32,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3418,"byte_end":3437,"line_start":106,"line_end":106,"column_start":1,"column_end":20}},{"value":"/     #[br(count = count)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3438,"byte_end":3466,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/     data: Vec<T>,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3467,"byte_end":3488,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3489,"byte_end":3494,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3495,"byte_end":3502,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3503,"byte_end":3506,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ In order to parse generically, we have to (in some way) bound `Args`. The easiest way to do","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3507,"byte_end":3602,"line_start":112,"line_end":112,"column_start":1,"column_end":96}},{"value":"/ this is to bound `<T as BinRead>::Args` to `()` (no arguments), however it is also possible to","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3603,"byte_end":3701,"line_start":113,"line_end":113,"column_start":1,"column_end":99}},{"value":"/ either accept a specific set of arguments or be generic over the given arguments.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3702,"byte_end":3787,"line_start":114,"line_end":114,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3788,"byte_end":3791,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ ## Features","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3792,"byte_end":3807,"line_start":116,"line_end":116,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3808,"byte_end":3811,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ * `const_generics` - Change array [`BinRead`] implementation to use const generics","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3812,"byte_end":3898,"line_start":118,"line_end":118,"column_start":1,"column_end":87}},{"value":"/ * `std` - Disable this feature to enable `no_std` support, on by default","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":3899,"byte_end":3975,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4019,"byte_end":4045,"line_start":121,"line_end":121,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/private.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"__private","qualname":"::__private","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/private.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":32},{"krate":0,"index":37},{"krate":0,"index":41}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"path = \"private.rs\"","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4236,"byte_end":4258,"line_start":133,"line_end":133,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":26},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/private.rs","byte_start":10671,"byte_end":10678,"line_start":6,"line_end":6,"column_start":5,"column_end":12},"name":"Message","qualname":"::__private::AssertErrorFn::Message","value":"AssertErrorFn::Message(M)","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":29},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/private.rs","byte_start":10687,"byte_end":10692,"line_start":7,"line_end":7,"column_start":5,"column_end":10},"name":"Error","qualname":"::__private::AssertErrorFn::Error","value":"AssertErrorFn::Error(E)","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":23},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/private.rs","byte_start":10645,"byte_end":10658,"line_start":5,"line_end":5,"column_start":10,"column_end":23},"name":"AssertErrorFn","qualname":"::__private::AssertErrorFn","value":"pub enum AssertErrorFn<M, E> { Message(M), Error(E), }","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":29}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":32},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/private.rs","byte_start":10707,"byte_end":10713,"line_start":10,"line_end":10,"column_start":8,"column_end":14},"name":"assert","qualname":"::__private::assert","value":"pub fn assert<MsgFn, Msg, ErrorFn,\n              Err>(bool, u64, AssertErrorFn<MsgFn, ErrorFn>) -> BinResult<()>\nwhere MsgFn: Fn() -> Msg, Msg: Into<String> + Sized, ErrorFn: Fn() -> Err,\nErr: core::any::Any + Sync + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":37},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/private.rs","byte_start":11823,"byte_end":11832,"line_start":44,"line_end":44,"column_start":8,"column_end":17},"name":"coerce_fn","qualname":"::__private::coerce_fn","value":"pub fn coerce_fn<R, T, F>(F) -> F where F: Fn(T) -> R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":41},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/private.rs","byte_start":11896,"byte_end":11911,"line_start":51,"line_end":51,"column_start":8,"column_end":23},"name":"try_after_parse","qualname":"::__private::try_after_parse","value":"pub fn try_after_parse<Reader, ValueType,\n                       ArgType>(&mut Option<ValueType>, &mut Reader,\n                                &ReadOptions, ArgType) -> BinResult<()> where\nReader: io::Read + io::Seek, ValueType: BinRead<Args = ArgType>,\nArgType: Copy + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":45},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"attribute","qualname":"::attribute","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","parent":null,"children":[{"krate":0,"index":46}],"decl_id":null,"docs":" A documentation-only module for the possible directives used in `#[br]` and\n `#[binread]` attributes.","sig":null,"attributes":[{"value":"/ A documentation-only module for the possible directives used in `#[br]` and","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":12278,"byte_end":12357,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ `#[binread]` attributes.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":12358,"byte_end":12386,"line_start":2,"line_end":2,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":12387,"byte_end":12390,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ # List of directives","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":12391,"byte_end":12415,"line_start":4,"line_end":4,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":12416,"byte_end":12419,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ | Directive | Supports | Description","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":12420,"byte_end":12460,"line_start":6,"line_end":6,"column_start":1,"column_end":41}},{"value":"/ |-----------|----------|------------","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":12461,"byte_end":12501,"line_start":7,"line_end":7,"column_start":1,"column_end":41}},{"value":"/ | [`align_after`](#padding-and-alignment) | field | Aligns the reader to the Nth byte after reading data.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":12502,"byte_end":12611,"line_start":8,"line_end":8,"column_start":1,"column_end":110}},{"value":"/ | [`align_before`](#padding-and-alignment) | field | Aligns the reader to the Nth byte before reading data.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":12612,"byte_end":12723,"line_start":9,"line_end":9,"column_start":1,"column_end":112}},{"value":"/ | [`args`](#arguments) | struct field, data variant | Passes arguments to another `BinRead` object.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":12724,"byte_end":12827,"line_start":10,"line_end":10,"column_start":1,"column_end":104}},{"value":"/ | [`args_tuple`](#arguments) | struct field, data variant | Like `args`, but specifies a tuple containing the arguments.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":12828,"byte_end":12952,"line_start":11,"line_end":11,"column_start":1,"column_end":125}},{"value":"/ | [`assert`](#assert) | struct, field, non-unit enum, data variant | Asserts that a condition is true. Can be used multiple times.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":12953,"byte_end":13087,"line_start":12,"line_end":12,"column_start":1,"column_end":135}},{"value":"/ | [`big`](#byte-order) | all except unit variant | Sets the byte order to big-endian.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":13088,"byte_end":13177,"line_start":13,"line_end":13,"column_start":1,"column_end":90}},{"value":"/ | [`calc`](#calculations) | field | Computes the value of a field instead of reading data.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":13178,"byte_end":13272,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/ | [`count`](#count) | field | Sets the length of a vector.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":13273,"byte_end":13335,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/ | [`default`](#default) | field | Uses the [`default`](core::default::Default) value for a field instead of reading data.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":13336,"byte_end":13461,"line_start":16,"line_end":16,"column_start":1,"column_end":126}},{"value":"/ | [`deref_now`](#postprocessing) | field | An alias for `postprocess_now`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":13462,"byte_end":13540,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ | [`if`](#conditional-values) | field | Reads data only if a condition is true.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":13541,"byte_end":13624,"line_start":18,"line_end":18,"column_start":1,"column_end":84}},{"value":"/ | [`ignore`](#default) | field | An alias for `default`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":13625,"byte_end":13685,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ | [`import`](#arguments) | struct, non-unit enum, unit-like enum | Defines extra arguments for a struct or enum.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":13686,"byte_end":13802,"line_start":20,"line_end":20,"column_start":1,"column_end":117}},{"value":"/ | [`import_tuple`](#arguments) | struct, non-unit enum, unit-like enum | Like `import`, but receives the arguments as a tuple.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":13803,"byte_end":13933,"line_start":21,"line_end":21,"column_start":1,"column_end":131}},{"value":"/ | [`is_big`](#byte-order) | field | Conditionally sets the byte order to big-endian.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":13934,"byte_end":14022,"line_start":22,"line_end":22,"column_start":1,"column_end":89}},{"value":"/ | [`is_little`](#byte-order) | field | Conditionally set the byte order to little-endian.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":14023,"byte_end":14116,"line_start":23,"line_end":23,"column_start":1,"column_end":94}},{"value":"/ | [`little`](#byte-order) | all except unit variant | Sets the byte order to little-endian.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":14117,"byte_end":14212,"line_start":24,"line_end":24,"column_start":1,"column_end":96}},{"value":"/ | [`magic`](#magic) | all | Matches a magic number.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":14213,"byte_end":14268,"line_start":25,"line_end":25,"column_start":1,"column_end":56}},{"value":"/ | [`map`](#map) | all except unit variant | Maps a read value to a new value. When used on a struct or enum, the map function must return `Self`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":14269,"byte_end":14418,"line_start":26,"line_end":26,"column_start":1,"column_end":150}},{"value":"/ | [`offset`](#offset) | field | Modifies the offset used by a [`FilePtr`](crate::FilePtr).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":14419,"byte_end":14513,"line_start":27,"line_end":27,"column_start":1,"column_end":95}},{"value":"/ | [`pad_after`](#padding-and-alignment) | field | Skips N bytes after reading a field.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":14514,"byte_end":14604,"line_start":28,"line_end":28,"column_start":1,"column_end":91}},{"value":"/ | [`pad_before`](#padding-and-alignment) | field | Skips N bytes before reading a field.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":14605,"byte_end":14697,"line_start":29,"line_end":29,"column_start":1,"column_end":93}},{"value":"/ | [`pad_size_to`](#padding-and-alignment) | field | Ensures the reader is at least N bytes after the starting position for this field.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":14698,"byte_end":14836,"line_start":30,"line_end":30,"column_start":1,"column_end":139}},{"value":"/ | [`parse_with`](#custom-parsers) | field | Specifies a custom function for reading a field.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":14837,"byte_end":14933,"line_start":31,"line_end":31,"column_start":1,"column_end":97}},{"value":"/ | [`postprocess_now`](#postprocessing) | field | Calls [`after_parse`](crate::BinRead::after_parse) immediately after reading data instead of after all fields have been read.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":14934,"byte_end":15112,"line_start":32,"line_end":32,"column_start":1,"column_end":179}},{"value":"/ | [`pre_assert`](#pre-assert) | struct, non-unit enum, unit variant | Like `assert`, but checks the condition before parsing.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":15113,"byte_end":15242,"line_start":33,"line_end":33,"column_start":1,"column_end":130}},{"value":"/ | [`repr`](#repr) | unit-like enum | Specifies the underlying type for a unit-like (C-style) enum.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":15243,"byte_end":15345,"line_start":34,"line_end":34,"column_start":1,"column_end":103}},{"value":"/ | [`restore_position`](#restore-position) | field | Restores the reader’s position after reading a field.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":15346,"byte_end":15457,"line_start":35,"line_end":35,"column_start":1,"column_end":110}},{"value":"/ | [`return_all_errors`](#enum-errors) | non-unit enum | Returns a [`Vec`] containing the error which occurred on each variant of an enum on failure. This is the default.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":15458,"byte_end":15631,"line_start":36,"line_end":36,"column_start":1,"column_end":174}},{"value":"/ | [`return_unexpected_error`](#enum-errors) | non-unit enum | Returns a single generic error on failure.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":15632,"byte_end":15740,"line_start":37,"line_end":37,"column_start":1,"column_end":109}},{"value":"/ | [`seek_before`](#padding-and-alignment) | field | Moves the reader to a specific position before reading data.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":15741,"byte_end":15857,"line_start":38,"line_end":38,"column_start":1,"column_end":117}},{"value":"/ | [`temp`](#temp) | field | Uses a field as a temporary variable. Only usable with the [`derive_binread`] attribute macro.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":15858,"byte_end":15984,"line_start":39,"line_end":39,"column_start":1,"column_end":127}},{"value":"/ | [`try`](#try) | field | Reads data into an [`Option`](core::option::Option), but stores `None` if parsing fails instead of returning an error.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":15985,"byte_end":16133,"line_start":40,"line_end":40,"column_start":1,"column_end":149}},{"value":"/ | [`try_map`](#map) | all except unit variant | Like `map`, but returns a [`BinResult`](crate::BinResult).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16134,"byte_end":16244,"line_start":41,"line_end":41,"column_start":1,"column_end":111}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16245,"byte_end":16248,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Byte order","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16249,"byte_end":16265,"line_start":43,"line_end":43,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16266,"byte_end":16269,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The `big` and `little` directives specify the [byte order](https://en.wikipedia.org/wiki/Endianness)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16270,"byte_end":16374,"line_start":45,"line_end":45,"column_start":1,"column_end":105}},{"value":"/ of data in a struct, enum, variant, or field:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16375,"byte_end":16424,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16425,"byte_end":16428,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16429,"byte_end":16440,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ #[br(big)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16441,"byte_end":16455,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/ #[br(little)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16456,"byte_end":16473,"line_start":50,"line_end":50,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16474,"byte_end":16481,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16482,"byte_end":16485,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The `is_big` and `is_little` directives conditionally set the byte order of","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16486,"byte_end":16565,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ a struct field:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16566,"byte_end":16585,"line_start":54,"line_end":54,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16586,"byte_end":16589,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16590,"byte_end":16601,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ #[br(is_little = $cond:expr)] or #[br(is_little($cond:expr))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16602,"byte_end":16667,"line_start":57,"line_end":57,"column_start":1,"column_end":66}},{"value":"/ #[br(is_big = $cond:expr)] or #[br(is_big($cond:expr))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16668,"byte_end":16727,"line_start":58,"line_end":58,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16728,"byte_end":16735,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16736,"byte_end":16739,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ The `is_big` and `is_little` directives are primarily useful when byte order","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16740,"byte_end":16820,"line_start":61,"line_end":61,"column_start":1,"column_end":81}},{"value":"/ is defined in the data itself. Any earlier field or [import](#arguments) can","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16821,"byte_end":16901,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"/ be referenced in the condition. Conditional byte order directives can only","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16902,"byte_end":16980,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ be used on struct fields.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":16981,"byte_end":17010,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17011,"byte_end":17014,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The order of precedence (from highest to lowest) for determining byte order","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17015,"byte_end":17094,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ within an object is:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17095,"byte_end":17119,"line_start":67,"line_end":67,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17120,"byte_end":17123,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ 1. A directive on a field","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17124,"byte_end":17153,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"/ 2. A directive on an enum variant","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17154,"byte_end":17191,"line_start":70,"line_end":70,"column_start":1,"column_end":38}},{"value":"/ 3. A directive on the struct or enum","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17192,"byte_end":17232,"line_start":71,"line_end":71,"column_start":1,"column_end":41}},{"value":"/ 4. The [`endian`](crate::ReadOptions::endian) property of the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17233,"byte_end":17298,"line_start":72,"line_end":72,"column_start":1,"column_end":66}},{"value":"/    [`ReadOptions`](crate::ReadOptions) object passed to","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17299,"byte_end":17358,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/    [`BinRead::read_options`](crate::BinRead::read_options) by the caller","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17359,"byte_end":17435,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ 5. The host machine’s native byte order","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17436,"byte_end":17481,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17482,"byte_end":17485,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ However, if a byte order directive is added to a struct or enum, that byte","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17486,"byte_end":17564,"line_start":77,"line_end":77,"column_start":1,"column_end":79}},{"value":"/ order will *always* be used, even if the object is embedded in another","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17565,"byte_end":17639,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/ object or explicitly called with a different byte order:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17640,"byte_end":17700,"line_start":79,"line_end":79,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17701,"byte_end":17704,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17705,"byte_end":17712,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use binread::{Endian, ReadOptions, prelude::*, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17713,"byte_end":17778,"line_start":82,"line_end":82,"column_start":1,"column_end":66}},{"value":"/ #[derive(BinRead, Debug, PartialEq)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17779,"byte_end":17819,"line_start":83,"line_end":83,"column_start":1,"column_end":41}},{"value":"/ #[br(little)] // ← this *forces* the struct to be little-endian","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17820,"byte_end":17889,"line_start":84,"line_end":84,"column_start":1,"column_end":68}},{"value":"/ struct Child(u32);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17890,"byte_end":17912,"line_start":85,"line_end":85,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17913,"byte_end":17916,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ #[derive(BinRead, Debug)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17917,"byte_end":17946,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ struct Parent {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17947,"byte_end":17966,"line_start":88,"line_end":88,"column_start":1,"column_end":20}},{"value":"/     #[br(big)] // ← this will be ignored","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":17967,"byte_end":18013,"line_start":89,"line_end":89,"column_start":1,"column_end":45}},{"value":"/     child: Child,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18014,"byte_end":18035,"line_start":90,"line_end":90,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18036,"byte_end":18042,"line_start":91,"line_end":91,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18043,"byte_end":18046,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ let mut options = ReadOptions::default();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18047,"byte_end":18092,"line_start":93,"line_end":93,"column_start":1,"column_end":46}},{"value":"/ options.endian = Endian::Big; // ← this will be ignored","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18093,"byte_end":18154,"line_start":94,"line_end":94,"column_start":1,"column_end":60}},{"value":"/ # assert_eq!(","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18155,"byte_end":18172,"line_start":95,"line_end":95,"column_start":1,"column_end":18}},{"value":"/ Child::read_options(&mut Cursor::new(b\"\\x01\\0\\0\\0\"), &options, ())","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18173,"byte_end":18243,"line_start":96,"line_end":96,"column_start":1,"column_end":71}},{"value":"/ # .unwrap(), Child(1));","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18244,"byte_end":18271,"line_start":97,"line_end":97,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18272,"byte_end":18279,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18280,"byte_end":18283,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ When manually implementing","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18284,"byte_end":18314,"line_start":100,"line_end":100,"column_start":1,"column_end":31}},{"value":"/ [`BinRead::read_options`](crate::BinRead::read_options) or a","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18315,"byte_end":18379,"line_start":101,"line_end":101,"column_start":1,"column_end":65}},{"value":"/ [custom parser function](#custom-parsers), the byte order is accessible","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18380,"byte_end":18455,"line_start":102,"line_end":102,"column_start":1,"column_end":76}},{"value":"/ from [`ReadOptions::endian`](crate::ReadOptions::endian).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18456,"byte_end":18517,"line_start":103,"line_end":103,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18518,"byte_end":18521,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18522,"byte_end":18537,"line_start":105,"line_end":105,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18538,"byte_end":18541,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18542,"byte_end":18549,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ # use binread::{prelude::*, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18550,"byte_end":18594,"line_start":108,"line_end":108,"column_start":1,"column_end":45}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18595,"byte_end":18617,"line_start":109,"line_end":109,"column_start":1,"column_end":23}},{"value":"/ #[br(little)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18618,"byte_end":18635,"line_start":110,"line_end":110,"column_start":1,"column_end":18}},{"value":"/ struct MyType (","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18636,"byte_end":18655,"line_start":111,"line_end":111,"column_start":1,"column_end":20}},{"value":"/     #[br(big)] u32, // ← will be big-endian","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18656,"byte_end":18705,"line_start":112,"line_end":112,"column_start":1,"column_end":48}},{"value":"/     u32, // ← will be little-endian","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18706,"byte_end":18747,"line_start":113,"line_end":113,"column_start":1,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18748,"byte_end":18754,"line_start":114,"line_end":114,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18755,"byte_end":18762,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18763,"byte_end":18766,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18767,"byte_end":18774,"line_start":117,"line_end":117,"column_start":1,"column_end":8}},{"value":"/ # use binread::{prelude::*, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18775,"byte_end":18819,"line_start":118,"line_end":118,"column_start":1,"column_end":45}},{"value":"/ #[derive(BinRead, Debug, PartialEq)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18820,"byte_end":18860,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"/ #[br(big)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18861,"byte_end":18875,"line_start":120,"line_end":120,"column_start":1,"column_end":15}},{"value":"/ struct MyType {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18876,"byte_end":18895,"line_start":121,"line_end":121,"column_start":1,"column_end":20}},{"value":"/     val: u8,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18896,"byte_end":18912,"line_start":122,"line_end":122,"column_start":1,"column_end":17}},{"value":"/     #[br(is_little = (val == 3))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18913,"byte_end":18950,"line_start":123,"line_end":123,"column_start":1,"column_end":38}},{"value":"/     other_val: u16 // ← little-endian if `val == 3`, otherwise big-endian","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":18951,"byte_end":19030,"line_start":124,"line_end":124,"column_start":1,"column_end":78}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19031,"byte_end":19036,"line_start":125,"line_end":125,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19037,"byte_end":19040,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ # assert_eq!(MyType::read(&mut Cursor::new(b\"\\x03\\x01\\x00\")).unwrap(), MyType { val: 3, other_val: 1 });","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19041,"byte_end":19149,"line_start":127,"line_end":127,"column_start":1,"column_end":109}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19150,"byte_end":19157,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19158,"byte_end":19161,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # Magic","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19162,"byte_end":19173,"line_start":130,"line_end":130,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19174,"byte_end":19177,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ The `magic` directive matches [magic numbers](https://en.wikipedia.org/wiki/Magic_number_(programming))","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19178,"byte_end":19285,"line_start":132,"line_end":132,"column_start":1,"column_end":108}},{"value":"/ in data:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19286,"byte_end":19298,"line_start":133,"line_end":133,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19299,"byte_end":19302,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19303,"byte_end":19314,"line_start":135,"line_end":135,"column_start":1,"column_end":12}},{"value":"/ #[br(magic = $magic:literal)] or #[br(magic($magic:literal))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19315,"byte_end":19380,"line_start":136,"line_end":136,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19381,"byte_end":19388,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19389,"byte_end":19392,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ The magic number can be a byte literal, byte string, char, float, or","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19393,"byte_end":19465,"line_start":139,"line_end":139,"column_start":1,"column_end":73}},{"value":"/ integer. When a magic number is matched, parsing begins with the first byte","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19466,"byte_end":19545,"line_start":140,"line_end":140,"column_start":1,"column_end":80}},{"value":"/ after the magic number in the data. When a magic number is not matched, an","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19546,"byte_end":19624,"line_start":141,"line_end":141,"column_start":1,"column_end":79}},{"value":"/ error is returned.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19625,"byte_end":19647,"line_start":142,"line_end":142,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19648,"byte_end":19651,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19652,"byte_end":19667,"line_start":144,"line_end":144,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19668,"byte_end":19671,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19672,"byte_end":19679,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/ # use binread::{prelude::*, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19680,"byte_end":19724,"line_start":147,"line_end":147,"column_start":1,"column_end":45}},{"value":"/ #[derive(BinRead, Debug)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19725,"byte_end":19754,"line_start":148,"line_end":148,"column_start":1,"column_end":30}},{"value":"/ #[br(magic = b\"TEST\")]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19755,"byte_end":19781,"line_start":149,"line_end":149,"column_start":1,"column_end":27}},{"value":"/ struct Test {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19782,"byte_end":19799,"line_start":150,"line_end":150,"column_start":1,"column_end":18}},{"value":"/     val: u32","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19800,"byte_end":19816,"line_start":151,"line_end":151,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19817,"byte_end":19822,"line_start":152,"line_end":152,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19823,"byte_end":19826,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ #[derive(BinRead, Debug)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19827,"byte_end":19856,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"/ #[br(magic = 1.2f32)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19857,"byte_end":19882,"line_start":155,"line_end":155,"column_start":1,"column_end":26}},{"value":"/ struct Version(u16);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19883,"byte_end":19907,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19908,"byte_end":19911,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19912,"byte_end":19934,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ enum Command {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19935,"byte_end":19953,"line_start":159,"line_end":159,"column_start":1,"column_end":19}},{"value":"/     #[br(magic = 0u8)] Nop,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19954,"byte_end":19985,"line_start":160,"line_end":160,"column_start":1,"column_end":32}},{"value":"/     #[br(magic = 1u8)] Jump { loc: u32 },","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":19986,"byte_end":20031,"line_start":161,"line_end":161,"column_start":1,"column_end":46}},{"value":"/     #[br(magic = 2u8)] Begin { var_count: u16, local_count: u16 }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20032,"byte_end":20101,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20102,"byte_end":20107,"line_start":163,"line_end":163,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20108,"byte_end":20115,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20116,"byte_end":20119,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ## Errors","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20120,"byte_end":20133,"line_start":166,"line_end":166,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20134,"byte_end":20137,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ If the specified magic number does not match the data, a","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20138,"byte_end":20198,"line_start":168,"line_end":168,"column_start":1,"column_end":61}},{"value":"/ [`BadMagic`](crate::Error::BadMagic) error is returned and the reader’s","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20199,"byte_end":20276,"line_start":169,"line_end":169,"column_start":1,"column_end":76}},{"value":"/ position is reset to where it was before parsing started.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20277,"byte_end":20338,"line_start":170,"line_end":170,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20339,"byte_end":20342,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ # Assert","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20343,"byte_end":20355,"line_start":172,"line_end":172,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20356,"byte_end":20359,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The `assert` directive validates objects and fields after they are read,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20360,"byte_end":20436,"line_start":174,"line_end":174,"column_start":1,"column_end":77}},{"value":"/ returning an error if the assertion condition evaluates to `false`:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20437,"byte_end":20508,"line_start":175,"line_end":175,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20509,"byte_end":20512,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20513,"byte_end":20524,"line_start":177,"line_end":177,"column_start":1,"column_end":12}},{"value":"/ #[br(assert($cond:expr $(,)?))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20525,"byte_end":20560,"line_start":178,"line_end":178,"column_start":1,"column_end":36}},{"value":"/ #[br(assert($cond:expr, $msg:literal $(,)?)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20561,"byte_end":20609,"line_start":179,"line_end":179,"column_start":1,"column_end":49}},{"value":"/ #[br(assert($cond:expr, $fmt:literal, $($arg:expr),* $(,)?))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20610,"byte_end":20675,"line_start":180,"line_end":180,"column_start":1,"column_end":66}},{"value":"/ #[br(assert($cond:expr, $err:expr $(,)?)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20676,"byte_end":20721,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20722,"byte_end":20729,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20730,"byte_end":20733,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ Multiple assertion directives can be used; they will be combined and","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20734,"byte_end":20806,"line_start":184,"line_end":184,"column_start":1,"column_end":73}},{"value":"/ executed in order.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20807,"byte_end":20829,"line_start":185,"line_end":185,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20830,"byte_end":20833,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ Assertions added to the top of an enum will be checked against every variant","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20834,"byte_end":20914,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ in the enum.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20915,"byte_end":20931,"line_start":188,"line_end":188,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20932,"byte_end":20935,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ Any earlier field or [import](#arguments) can be referenced by expressions","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":20936,"byte_end":21014,"line_start":190,"line_end":190,"column_start":1,"column_end":79}},{"value":"/ in the directive.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21015,"byte_end":21036,"line_start":191,"line_end":191,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21037,"byte_end":21040,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21041,"byte_end":21056,"line_start":193,"line_end":193,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21057,"byte_end":21060,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ ### Formatted error","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21061,"byte_end":21084,"line_start":195,"line_end":195,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21085,"byte_end":21088,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21089,"byte_end":21100,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/ # use binread::{prelude::*, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21101,"byte_end":21145,"line_start":198,"line_end":198,"column_start":1,"column_end":45}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21146,"byte_end":21177,"line_start":199,"line_end":199,"column_start":1,"column_end":32}},{"value":"/ struct NotSmallerError(u32, u32);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21178,"byte_end":21215,"line_start":200,"line_end":200,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21216,"byte_end":21219,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ #[derive(BinRead, Debug)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21220,"byte_end":21249,"line_start":202,"line_end":202,"column_start":1,"column_end":30}},{"value":"/ #[br(assert(some_val > some_smaller_val, \"oops! {} <= {}\", some_val, some_smaller_val))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21250,"byte_end":21342,"line_start":203,"line_end":203,"column_start":1,"column_end":93}},{"value":"/ struct Test {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21343,"byte_end":21360,"line_start":204,"line_end":204,"column_start":1,"column_end":18}},{"value":"/     some_val: u32,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21361,"byte_end":21383,"line_start":205,"line_end":205,"column_start":1,"column_end":23}},{"value":"/     some_smaller_val: u32","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21384,"byte_end":21413,"line_start":206,"line_end":206,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21414,"byte_end":21419,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21420,"byte_end":21423,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ let error = Cursor::new(b\"\\0\\0\\0\\x01\\0\\0\\0\\xFF\").read_be::<Test>();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21424,"byte_end":21495,"line_start":209,"line_end":209,"column_start":1,"column_end":72}},{"value":"/ assert!(error.is_err());","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21496,"byte_end":21524,"line_start":210,"line_end":210,"column_start":1,"column_end":29}},{"value":"/ let error = error.unwrap_err();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21525,"byte_end":21560,"line_start":211,"line_end":211,"column_start":1,"column_end":36}},{"value":"/ let expected = \"oops! 1 <= 255\".to_string();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21561,"byte_end":21609,"line_start":212,"line_end":212,"column_start":1,"column_end":49}},{"value":"/ assert!(matches!(error, binread::Error::AssertFail { message: expected, .. }));","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21610,"byte_end":21693,"line_start":213,"line_end":213,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21694,"byte_end":21701,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21702,"byte_end":21705,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ ### Custom error","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21706,"byte_end":21726,"line_start":216,"line_end":216,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21727,"byte_end":21730,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21731,"byte_end":21742,"line_start":218,"line_end":218,"column_start":1,"column_end":12}},{"value":"/ # use binread::{prelude::*, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21743,"byte_end":21787,"line_start":219,"line_end":219,"column_start":1,"column_end":45}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21788,"byte_end":21819,"line_start":220,"line_end":220,"column_start":1,"column_end":32}},{"value":"/ struct NotSmallerError(u32, u32);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21820,"byte_end":21857,"line_start":221,"line_end":221,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21858,"byte_end":21861,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ #[derive(BinRead, Debug)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21862,"byte_end":21891,"line_start":223,"line_end":223,"column_start":1,"column_end":30}},{"value":"/ #[br(assert(some_val > some_smaller_val, NotSmallerError(some_val, some_smaller_val)))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21892,"byte_end":21983,"line_start":224,"line_end":224,"column_start":1,"column_end":92}},{"value":"/ struct Test {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":21984,"byte_end":22001,"line_start":225,"line_end":225,"column_start":1,"column_end":18}},{"value":"/     some_val: u32,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22002,"byte_end":22024,"line_start":226,"line_end":226,"column_start":1,"column_end":23}},{"value":"/     some_smaller_val: u32","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22025,"byte_end":22054,"line_start":227,"line_end":227,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22055,"byte_end":22060,"line_start":228,"line_end":228,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22061,"byte_end":22064,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ let error = Cursor::new(b\"\\0\\0\\0\\x01\\0\\0\\0\\xFF\").read_be::<Test>();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22065,"byte_end":22136,"line_start":230,"line_end":230,"column_start":1,"column_end":72}},{"value":"/ assert!(error.is_err());","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22137,"byte_end":22165,"line_start":231,"line_end":231,"column_start":1,"column_end":29}},{"value":"/ let error = error.unwrap_err();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22166,"byte_end":22201,"line_start":232,"line_end":232,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(error.custom_err(), Some(&NotSmallerError(0x1, 0xFF)));","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22202,"byte_end":22272,"line_start":233,"line_end":233,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22273,"byte_end":22280,"line_start":234,"line_end":234,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22281,"byte_end":22284,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ ## Errors","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22285,"byte_end":22298,"line_start":236,"line_end":236,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22299,"byte_end":22302,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ If the assertion fails and there is no second argument, or a string literal","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22303,"byte_end":22382,"line_start":238,"line_end":238,"column_start":1,"column_end":80}},{"value":"/ is given as the second argument, an [`AssertFail`](crate::Error::AssertFail)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22383,"byte_end":22463,"line_start":239,"line_end":239,"column_start":1,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22464,"byte_end":22486,"line_start":240,"line_end":240,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22487,"byte_end":22490,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ If the assertion fails and an expression is given as the second argument,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22491,"byte_end":22568,"line_start":242,"line_end":242,"column_start":1,"column_end":78}},{"value":"/ a [`Custom`](crate::Error::Custom) error containing the result of the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22569,"byte_end":22642,"line_start":243,"line_end":243,"column_start":1,"column_end":74}},{"value":"/ expression is returned.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22643,"byte_end":22670,"line_start":244,"line_end":244,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22671,"byte_end":22674,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ Arguments other than the condition are not evaluated unless the assertion","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22675,"byte_end":22752,"line_start":246,"line_end":246,"column_start":1,"column_end":78}},{"value":"/ fails, so it is safe for them to contain expensive operations without","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22753,"byte_end":22826,"line_start":247,"line_end":247,"column_start":1,"column_end":74}},{"value":"/ impacting performance.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22827,"byte_end":22853,"line_start":248,"line_end":248,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22854,"byte_end":22857,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ In all cases, the reader’s position is reset to where it was before parsing","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22858,"byte_end":22939,"line_start":250,"line_end":250,"column_start":1,"column_end":80}},{"value":"/ started.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22940,"byte_end":22952,"line_start":251,"line_end":251,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22953,"byte_end":22956,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ # Pre-assert","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22957,"byte_end":22973,"line_start":253,"line_end":253,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22974,"byte_end":22977,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ `pre_assert` works like [`assert`](#assert), but checks the condition before","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":22978,"byte_end":23058,"line_start":255,"line_end":255,"column_start":1,"column_end":81}},{"value":"/ data is read instead of after. This is most useful when validating arguments","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23059,"byte_end":23139,"line_start":256,"line_end":256,"column_start":1,"column_end":81}},{"value":"/ or choosing an enum variant to parse.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23140,"byte_end":23181,"line_start":257,"line_end":257,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23182,"byte_end":23185,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23186,"byte_end":23197,"line_start":259,"line_end":259,"column_start":1,"column_end":12}},{"value":"/ #[br(pre_assert($cond:expr $(,)?))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23198,"byte_end":23237,"line_start":260,"line_end":260,"column_start":1,"column_end":40}},{"value":"/ #[br(pre_assert($cond:expr, $msg:literal $(,)?)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23238,"byte_end":23290,"line_start":261,"line_end":261,"column_start":1,"column_end":53}},{"value":"/ #[br(pre_assert($cond:expr, $fmt:literal, $($arg:expr),* $(,)?))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23291,"byte_end":23360,"line_start":262,"line_end":262,"column_start":1,"column_end":70}},{"value":"/ #[br(pre_assert($cond:expr, $err:expr $(,)?)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23361,"byte_end":23410,"line_start":263,"line_end":263,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23411,"byte_end":23418,"line_start":264,"line_end":264,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23419,"byte_end":23422,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23423,"byte_end":23438,"line_start":266,"line_end":266,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23439,"byte_end":23442,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23443,"byte_end":23450,"line_start":268,"line_end":268,"column_start":1,"column_end":8}},{"value":"/ # use binread::{prelude::*, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23451,"byte_end":23495,"line_start":269,"line_end":269,"column_start":1,"column_end":45}},{"value":"/ #[derive(BinRead, Debug, PartialEq)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23496,"byte_end":23536,"line_start":270,"line_end":270,"column_start":1,"column_end":41}},{"value":"/ #[br(import(ty: u8))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23537,"byte_end":23562,"line_start":271,"line_end":271,"column_start":1,"column_end":26}},{"value":"/ enum Command {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23563,"byte_end":23581,"line_start":272,"line_end":272,"column_start":1,"column_end":19}},{"value":"/     #[br(pre_assert(ty == 0))] Variant0(u16, u16),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23582,"byte_end":23636,"line_start":273,"line_end":273,"column_start":1,"column_end":55}},{"value":"/     #[br(pre_assert(ty == 1))] Variant1(u32)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23637,"byte_end":23685,"line_start":274,"line_end":274,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23686,"byte_end":23691,"line_start":275,"line_end":275,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23692,"byte_end":23695,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ #[derive(BinRead, Debug, PartialEq)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23696,"byte_end":23736,"line_start":277,"line_end":277,"column_start":1,"column_end":41}},{"value":"/ struct Message {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23737,"byte_end":23757,"line_start":278,"line_end":278,"column_start":1,"column_end":21}},{"value":"/     ty: u8,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23758,"byte_end":23773,"line_start":279,"line_end":279,"column_start":1,"column_end":16}},{"value":"/     len: u8,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23774,"byte_end":23790,"line_start":280,"line_end":280,"column_start":1,"column_end":17}},{"value":"/     #[br(args(ty))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23791,"byte_end":23814,"line_start":281,"line_end":281,"column_start":1,"column_end":24}},{"value":"/     data: Command","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23815,"byte_end":23836,"line_start":282,"line_end":282,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23837,"byte_end":23842,"line_start":283,"line_end":283,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23843,"byte_end":23846,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ let msg = Cursor::new(b\"\\x01\\x04\\0\\0\\0\\xFF\").read_be::<Message>();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23847,"byte_end":23917,"line_start":285,"line_end":285,"column_start":1,"column_end":71}},{"value":"/ assert!(msg.is_ok());","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23918,"byte_end":23943,"line_start":286,"line_end":286,"column_start":1,"column_end":26}},{"value":"/ let msg = msg.unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23944,"byte_end":23971,"line_start":287,"line_end":287,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(msg, Message { ty: 1, len: 4, data: Command::Variant1(0xFF) });","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":23972,"byte_end":24050,"line_start":288,"line_end":288,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24051,"byte_end":24058,"line_start":289,"line_end":289,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24059,"byte_end":24062,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24063,"byte_end":24078,"line_start":291,"line_end":291,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24079,"byte_end":24082,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ The `import` and `args` directives define the type of","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24083,"byte_end":24140,"line_start":293,"line_end":293,"column_start":1,"column_end":58}},{"value":"/ [`BinRead::Args`](crate::BinRead::Args) and the values passed in the `args`","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24141,"byte_end":24220,"line_start":294,"line_end":294,"column_start":1,"column_end":80}},{"value":"/ argument of a [`BinRead::read_options`](crate::BinRead::read_options) call,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24221,"byte_end":24300,"line_start":295,"line_end":295,"column_start":1,"column_end":80}},{"value":"/ respectively:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24301,"byte_end":24318,"line_start":296,"line_end":296,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24319,"byte_end":24322,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24323,"byte_end":24334,"line_start":298,"line_end":298,"column_start":1,"column_end":12}},{"value":"/ #[br(import($($ident:ident : $ty:ty),* $(,)?))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24335,"byte_end":24386,"line_start":299,"line_end":299,"column_start":1,"column_end":52}},{"value":"/ #[br(args($($ident:ident),* $(,)?))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24387,"byte_end":24427,"line_start":300,"line_end":300,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24428,"byte_end":24435,"line_start":301,"line_end":301,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24436,"byte_end":24439,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ Any earlier field or [import](#arguments) can be referenced in `args`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24440,"byte_end":24514,"line_start":303,"line_end":303,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24515,"byte_end":24518,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24519,"byte_end":24534,"line_start":305,"line_end":305,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24535,"byte_end":24538,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24539,"byte_end":24546,"line_start":307,"line_end":307,"column_start":1,"column_end":8}},{"value":"/ # use binread::prelude::*;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24547,"byte_end":24577,"line_start":308,"line_end":308,"column_start":1,"column_end":31}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24578,"byte_end":24600,"line_start":309,"line_end":309,"column_start":1,"column_end":23}},{"value":"/ #[br(import(val1: u32, val2: &'static str))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24601,"byte_end":24649,"line_start":310,"line_end":310,"column_start":1,"column_end":49}},{"value":"/ struct ImportTest {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24650,"byte_end":24673,"line_start":311,"line_end":311,"column_start":1,"column_end":24}},{"value":"/     // ...","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24674,"byte_end":24688,"line_start":312,"line_end":312,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24689,"byte_end":24694,"line_start":313,"line_end":313,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24695,"byte_end":24698,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24699,"byte_end":24721,"line_start":315,"line_end":315,"column_start":1,"column_end":23}},{"value":"/ struct ArgsTets {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24722,"byte_end":24743,"line_start":316,"line_end":316,"column_start":1,"column_end":22}},{"value":"/     val: u32,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24744,"byte_end":24761,"line_start":317,"line_end":317,"column_start":1,"column_end":18}},{"value":"/     #[br(args(val + 3, \"test\"))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24762,"byte_end":24798,"line_start":318,"line_end":318,"column_start":1,"column_end":37}},{"value":"/     test: ImportTest","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24799,"byte_end":24823,"line_start":319,"line_end":319,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24824,"byte_end":24829,"line_start":320,"line_end":320,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24830,"byte_end":24837,"line_start":321,"line_end":321,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24838,"byte_end":24841,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ # Default","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24842,"byte_end":24855,"line_start":323,"line_end":323,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24856,"byte_end":24859,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ The `default` directive, and its alias `ignore`, sets the value of the field","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24860,"byte_end":24940,"line_start":325,"line_end":325,"column_start":1,"column_end":81}},{"value":"/ to its [`Default`](core::default::Default) instead of reading data from the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":24941,"byte_end":25020,"line_start":326,"line_end":326,"column_start":1,"column_end":80}},{"value":"/ reader:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25021,"byte_end":25032,"line_start":327,"line_end":327,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25033,"byte_end":25036,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25037,"byte_end":25048,"line_start":329,"line_end":329,"column_start":1,"column_end":12}},{"value":"/ #[br(default)] or #[br(ignore)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25049,"byte_end":25084,"line_start":330,"line_end":330,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25085,"byte_end":25092,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25093,"byte_end":25096,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25097,"byte_end":25112,"line_start":333,"line_end":333,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25113,"byte_end":25116,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25117,"byte_end":25128,"line_start":335,"line_end":335,"column_start":1,"column_end":12}},{"value":"/ # use binread::{BinRead, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25129,"byte_end":25170,"line_start":336,"line_end":336,"column_start":1,"column_end":42}},{"value":"/ #[derive(BinRead, Debug, PartialEq)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25171,"byte_end":25211,"line_start":337,"line_end":337,"column_start":1,"column_end":41}},{"value":"/ struct Test {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25212,"byte_end":25229,"line_start":338,"line_end":338,"column_start":1,"column_end":18}},{"value":"/     #[br(default)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25230,"byte_end":25252,"line_start":339,"line_end":339,"column_start":1,"column_end":23}},{"value":"/     path: Option<std::path::PathBuf>,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25253,"byte_end":25294,"line_start":340,"line_end":340,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25295,"byte_end":25300,"line_start":341,"line_end":341,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25301,"byte_end":25304,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25305,"byte_end":25320,"line_start":343,"line_end":343,"column_start":1,"column_end":16}},{"value":"/     Test::read(&mut Cursor::new(b\"\")).unwrap(),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25321,"byte_end":25372,"line_start":344,"line_end":344,"column_start":1,"column_end":52}},{"value":"/     Test { path: None }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25373,"byte_end":25400,"line_start":345,"line_end":345,"column_start":1,"column_end":28}},{"value":"/ );","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25401,"byte_end":25407,"line_start":346,"line_end":346,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25408,"byte_end":25415,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25416,"byte_end":25419,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ # Temp","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25420,"byte_end":25430,"line_start":349,"line_end":349,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25431,"byte_end":25434,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ **This directive can only be used with [`derive_binread`]. It will not work","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25435,"byte_end":25514,"line_start":351,"line_end":351,"column_start":1,"column_end":80}},{"value":"/ with `#[derive(BinRead)]`.**","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25515,"byte_end":25547,"line_start":352,"line_end":352,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25548,"byte_end":25551,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ The `temp` directive causes a field to be treated as a temporary variable","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25552,"byte_end":25629,"line_start":354,"line_end":354,"column_start":1,"column_end":78}},{"value":"/ instead of an actual field. The field will be removed from the struct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25630,"byte_end":25703,"line_start":355,"line_end":355,"column_start":1,"column_end":74}},{"value":"/ definition generated by [`derive_binread`]:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25704,"byte_end":25751,"line_start":356,"line_end":356,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25752,"byte_end":25755,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25756,"byte_end":25767,"line_start":358,"line_end":358,"column_start":1,"column_end":12}},{"value":"/ #[br(temp)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25768,"byte_end":25783,"line_start":359,"line_end":359,"column_start":1,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25784,"byte_end":25791,"line_start":360,"line_end":360,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25792,"byte_end":25795,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ This allows data to be read which is necessary for parsing an object but","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25796,"byte_end":25872,"line_start":362,"line_end":362,"column_start":1,"column_end":77}},{"value":"/ which doesn’t need to be stored in the final object. To skip data, entirely","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25873,"byte_end":25954,"line_start":363,"line_end":363,"column_start":1,"column_end":80}},{"value":"/ use an [alignment directive](#padding-and-alignment) instead.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":25955,"byte_end":26020,"line_start":364,"line_end":364,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26021,"byte_end":26024,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26025,"byte_end":26040,"line_start":366,"line_end":366,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26041,"byte_end":26044,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26045,"byte_end":26056,"line_start":368,"line_end":368,"column_start":1,"column_end":12}},{"value":"/ # use binread::{BinRead, io::Cursor, derive_binread};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26057,"byte_end":26114,"line_start":369,"line_end":369,"column_start":1,"column_end":58}},{"value":"/ #[derive_binread]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26115,"byte_end":26136,"line_start":370,"line_end":370,"column_start":1,"column_end":22}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26137,"byte_end":26168,"line_start":371,"line_end":371,"column_start":1,"column_end":32}},{"value":"/ struct Test {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26169,"byte_end":26186,"line_start":372,"line_end":372,"column_start":1,"column_end":18}},{"value":"/     // Since `Vec` stores its own length, this field is redundant","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26187,"byte_end":26256,"line_start":373,"line_end":373,"column_start":1,"column_end":70}},{"value":"/     #[br(temp, big)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26257,"byte_end":26281,"line_start":374,"line_end":374,"column_start":1,"column_end":25}},{"value":"/     len: u32,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26282,"byte_end":26299,"line_start":375,"line_end":375,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26300,"byte_end":26303,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/     #[br(count = len)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26304,"byte_end":26330,"line_start":377,"line_end":377,"column_start":1,"column_end":27}},{"value":"/     data: Vec<u8>","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26331,"byte_end":26352,"line_start":378,"line_end":378,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26353,"byte_end":26358,"line_start":379,"line_end":379,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26359,"byte_end":26362,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26363,"byte_end":26378,"line_start":381,"line_end":381,"column_start":1,"column_end":16}},{"value":"/     Test::read(&mut Cursor::new(b\"\\0\\0\\0\\x05ABCDE\")).unwrap(),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26379,"byte_end":26445,"line_start":382,"line_end":382,"column_start":1,"column_end":67}},{"value":"/     Test { data: Vec::from(&b\"ABCDE\"[..]) }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26446,"byte_end":26493,"line_start":383,"line_end":383,"column_start":1,"column_end":48}},{"value":"/ );","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26494,"byte_end":26500,"line_start":384,"line_end":384,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26501,"byte_end":26508,"line_start":385,"line_end":385,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26509,"byte_end":26512,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ # Postprocessing","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26513,"byte_end":26533,"line_start":387,"line_end":387,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26534,"byte_end":26537,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ The `deref_now` directive, and its alias `postprocess_now`, cause a","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26538,"byte_end":26609,"line_start":389,"line_end":389,"column_start":1,"column_end":72}},{"value":"/ field’s [`after_parse`](crate::BinRead::after_parse) function to be called","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26610,"byte_end":26690,"line_start":390,"line_end":390,"column_start":1,"column_end":79}},{"value":"/ immediately after the field is parsed, instead of deferring the call until","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26691,"byte_end":26769,"line_start":391,"line_end":391,"column_start":1,"column_end":79}},{"value":"/ the entire parent object has been parsed:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26770,"byte_end":26815,"line_start":392,"line_end":392,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26816,"byte_end":26819,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26820,"byte_end":26831,"line_start":394,"line_end":394,"column_start":1,"column_end":12}},{"value":"/ #[br(deref_now)] or #[br(postprocess_now)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26832,"byte_end":26878,"line_start":395,"line_end":395,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26879,"byte_end":26886,"line_start":396,"line_end":396,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26887,"byte_end":26890,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ The [`BinRead::after_parse`](crate::BinRead::after_parse) function is","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26891,"byte_end":26964,"line_start":398,"line_end":398,"column_start":1,"column_end":74}},{"value":"/ normally used to perform additional work after the whole parent object has","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":26965,"byte_end":27043,"line_start":399,"line_end":399,"column_start":1,"column_end":79}},{"value":"/ been parsed. For example, the [`FilePtr`](crate::FilePtr) type reads an","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27044,"byte_end":27119,"line_start":400,"line_end":400,"column_start":1,"column_end":76}},{"value":"/ object offset during parsing with","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27120,"byte_end":27157,"line_start":401,"line_end":401,"column_start":1,"column_end":38}},{"value":"/ [`read_options`](crate::BinRead::read_options), then actually seeks to and","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27158,"byte_end":27236,"line_start":402,"line_end":402,"column_start":1,"column_end":79}},{"value":"/ parses the pointed-to object in `after_parse`. This improves read","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27237,"byte_end":27306,"line_start":403,"line_end":403,"column_start":1,"column_end":70}},{"value":"/ performance by reading the whole parent object sequentially before seeking","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27307,"byte_end":27385,"line_start":404,"line_end":404,"column_start":1,"column_end":79}},{"value":"/ to read the pointed-to object.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27386,"byte_end":27420,"line_start":405,"line_end":405,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27421,"byte_end":27424,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ However, if another field in the parent object needs to access data from the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27425,"byte_end":27505,"line_start":407,"line_end":407,"column_start":1,"column_end":81}},{"value":"/ pointed-to object, `after_parse` needs to be called earlier. Adding","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27506,"byte_end":27577,"line_start":408,"line_end":408,"column_start":1,"column_end":72}},{"value":"/ `deref_now` (or its alias, `postprocess_now`) to the earlier field causes","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27578,"byte_end":27655,"line_start":409,"line_end":409,"column_start":1,"column_end":78}},{"value":"/ this to happen.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27656,"byte_end":27675,"line_start":410,"line_end":410,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27676,"byte_end":27679,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27680,"byte_end":27695,"line_start":412,"line_end":412,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27696,"byte_end":27699,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27700,"byte_end":27707,"line_start":414,"line_end":414,"column_start":1,"column_end":8}},{"value":"/ # use binread::{prelude::*, FilePtr32, NullString, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27708,"byte_end":27775,"line_start":415,"line_end":415,"column_start":1,"column_end":68}},{"value":"/ #[derive(BinRead, Debug)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27776,"byte_end":27805,"line_start":416,"line_end":416,"column_start":1,"column_end":30}},{"value":"/ #[br(big, magic = b\"TEST\")]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27806,"byte_end":27837,"line_start":417,"line_end":417,"column_start":1,"column_end":32}},{"value":"/ struct TestFile {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27838,"byte_end":27859,"line_start":418,"line_end":418,"column_start":1,"column_end":22}},{"value":"/     #[br(deref_now)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27860,"byte_end":27884,"line_start":419,"line_end":419,"column_start":1,"column_end":25}},{"value":"/     ptr: FilePtr32<NullString>,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27885,"byte_end":27920,"line_start":420,"line_end":420,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27921,"byte_end":27924,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/     value: i32,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27925,"byte_end":27944,"line_start":422,"line_end":422,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27945,"byte_end":27948,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/     // Notice how `ptr` can be used as it has already been postprocessed","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":27949,"byte_end":28025,"line_start":424,"line_end":424,"column_start":1,"column_end":77}},{"value":"/     #[br(calc = ptr.len())]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28026,"byte_end":28057,"line_start":425,"line_end":425,"column_start":1,"column_end":32}},{"value":"/     ptr_len: usize,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28058,"byte_end":28081,"line_start":426,"line_end":426,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28082,"byte_end":28087,"line_start":427,"line_end":427,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28088,"byte_end":28091,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ # let test_contents = b\"\\x54\\x45\\x53\\x54\\x00\\x00\\x00\\x10\\xFF\\xFF\\xFF\\xFF\\x00\\x00\\x00\\x00\\x54\\x65\\x73\\x74\\x20\\x73\\x74\\x72\\x69\\x6E\\x67\\x00\\x00\\x00\\x00\\x69\";","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28092,"byte_end":28250,"line_start":429,"line_end":429,"column_start":1,"column_end":159}},{"value":"/ # let test = Cursor::new(test_contents).read_be::<TestFile>().unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28251,"byte_end":28326,"line_start":430,"line_end":430,"column_start":1,"column_end":76}},{"value":"/ # assert_eq!(test.ptr_len, 11);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28327,"byte_end":28362,"line_start":431,"line_end":431,"column_start":1,"column_end":36}},{"value":"/ # assert_eq!(test.value, -1);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28363,"byte_end":28396,"line_start":432,"line_end":432,"column_start":1,"column_end":34}},{"value":"/ # assert_eq!(test.ptr.to_string(), \"Test string\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28397,"byte_end":28451,"line_start":433,"line_end":433,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28452,"byte_end":28459,"line_start":434,"line_end":434,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28460,"byte_end":28463,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ # Restore position","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28464,"byte_end":28486,"line_start":436,"line_end":436,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28487,"byte_end":28490,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ The `restore_position` directive restores the position of the reader after","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28491,"byte_end":28569,"line_start":438,"line_end":438,"column_start":1,"column_end":79}},{"value":"/ a field is read:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28570,"byte_end":28590,"line_start":439,"line_end":439,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28591,"byte_end":28594,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28595,"byte_end":28606,"line_start":441,"line_end":441,"column_start":1,"column_end":12}},{"value":"/ #[br(restore_position)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28607,"byte_end":28634,"line_start":442,"line_end":442,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28635,"byte_end":28642,"line_start":443,"line_end":443,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28643,"byte_end":28646,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ To seek to an arbitrary position, use [`seek_before`](#padding-and-alignment)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28647,"byte_end":28728,"line_start":445,"line_end":445,"column_start":1,"column_end":82}},{"value":"/ instead.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28729,"byte_end":28741,"line_start":446,"line_end":446,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28742,"byte_end":28745,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28746,"byte_end":28761,"line_start":448,"line_end":448,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28762,"byte_end":28765,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28766,"byte_end":28773,"line_start":450,"line_end":450,"column_start":1,"column_end":8}},{"value":"/ # use binread::{prelude::*, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28774,"byte_end":28818,"line_start":451,"line_end":451,"column_start":1,"column_end":45}},{"value":"/ #[derive(BinRead, Debug, PartialEq)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28819,"byte_end":28859,"line_start":452,"line_end":452,"column_start":1,"column_end":41}},{"value":"/ struct MyType {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28860,"byte_end":28879,"line_start":453,"line_end":453,"column_start":1,"column_end":20}},{"value":"/     #[br(restore_position)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28880,"byte_end":28911,"line_start":454,"line_end":454,"column_start":1,"column_end":32}},{"value":"/     test: u32,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28912,"byte_end":28930,"line_start":455,"line_end":455,"column_start":1,"column_end":19}},{"value":"/     test_bytes: [u8; 4]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28931,"byte_end":28958,"line_start":456,"line_end":456,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28959,"byte_end":28964,"line_start":457,"line_end":457,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28965,"byte_end":28968,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/ # assert_eq!(","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28969,"byte_end":28986,"line_start":459,"line_end":459,"column_start":1,"column_end":18}},{"value":"/ #   Cursor::new(b\"\\0\\0\\0\\x01\").read_be::<MyType>().unwrap(),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":28987,"byte_end":29051,"line_start":460,"line_end":460,"column_start":1,"column_end":65}},{"value":"/ #   MyType { test: 1, test_bytes: [0,0,0,1]}","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29052,"byte_end":29100,"line_start":461,"line_end":461,"column_start":1,"column_end":49}},{"value":"/ # );","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29101,"byte_end":29109,"line_start":462,"line_end":462,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29110,"byte_end":29117,"line_start":463,"line_end":463,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29118,"byte_end":29121,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ## Errors","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29122,"byte_end":29135,"line_start":465,"line_end":465,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29136,"byte_end":29139,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ If querying or restoring the reader position fails, an","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29140,"byte_end":29198,"line_start":467,"line_end":467,"column_start":1,"column_end":59}},{"value":"/ [`Io`](crate::Error::Io) error is returned and the reader’s","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29199,"byte_end":29264,"line_start":468,"line_end":468,"column_start":1,"column_end":64}},{"value":"/ position is reset to where it was before parsing started.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29265,"byte_end":29326,"line_start":469,"line_end":469,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29327,"byte_end":29330,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ # Try","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29331,"byte_end":29340,"line_start":471,"line_end":471,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29341,"byte_end":29344,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ The `try` directive allows parsing of an [`Option`] field to fail instead","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29345,"byte_end":29422,"line_start":473,"line_end":473,"column_start":1,"column_end":78}},{"value":"/ of returning an error:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29423,"byte_end":29449,"line_start":474,"line_end":474,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29450,"byte_end":29453,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29454,"byte_end":29465,"line_start":476,"line_end":476,"column_start":1,"column_end":12}},{"value":"/ #[br(try)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29466,"byte_end":29480,"line_start":477,"line_end":477,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29481,"byte_end":29488,"line_start":478,"line_end":478,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29489,"byte_end":29492,"line_start":479,"line_end":479,"column_start":1,"column_end":4}},{"value":"/ If the field cannot be parsed, the position of the reader will be restored","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29493,"byte_end":29571,"line_start":480,"line_end":480,"column_start":1,"column_end":79}},{"value":"/ and the value of the field will be set to [`None`].","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29572,"byte_end":29627,"line_start":481,"line_end":481,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29628,"byte_end":29631,"line_start":482,"line_end":482,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29632,"byte_end":29647,"line_start":483,"line_end":483,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29648,"byte_end":29651,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29652,"byte_end":29659,"line_start":485,"line_end":485,"column_start":1,"column_end":8}},{"value":"/ # use binread::{prelude::*, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29660,"byte_end":29704,"line_start":486,"line_end":486,"column_start":1,"column_end":45}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29705,"byte_end":29727,"line_start":487,"line_end":487,"column_start":1,"column_end":23}},{"value":"/ struct MyType {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29728,"byte_end":29747,"line_start":488,"line_end":488,"column_start":1,"column_end":20}},{"value":"/     #[br(try)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29748,"byte_end":29766,"line_start":489,"line_end":489,"column_start":1,"column_end":19}},{"value":"/     maybe_u32: Option<u32>","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29767,"byte_end":29797,"line_start":490,"line_end":490,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29798,"byte_end":29803,"line_start":491,"line_end":491,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29804,"byte_end":29807,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Cursor::new(b\"\").read_be::<MyType>().unwrap().maybe_u32, None);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29808,"byte_end":29886,"line_start":493,"line_end":493,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29887,"byte_end":29894,"line_start":494,"line_end":494,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29895,"byte_end":29898,"line_start":495,"line_end":495,"column_start":1,"column_end":4}},{"value":"/ # Map","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29899,"byte_end":29908,"line_start":496,"line_end":496,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29909,"byte_end":29912,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"/ The `map` and `try_map` directives allow data to be read using one type and","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29913,"byte_end":29992,"line_start":498,"line_end":498,"column_start":1,"column_end":80}},{"value":"/ stored as another:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":29993,"byte_end":30015,"line_start":499,"line_end":499,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30016,"byte_end":30019,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30020,"byte_end":30031,"line_start":501,"line_end":501,"column_start":1,"column_end":12}},{"value":"/ #[br(map = $map_fn:expr)] or #[map($map_fn:expr))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30032,"byte_end":30086,"line_start":502,"line_end":502,"column_start":1,"column_end":55}},{"value":"/ #[br(try_map = $map_fn:expr)] or #[try_map($map_fn:expr))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30087,"byte_end":30149,"line_start":503,"line_end":503,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30150,"byte_end":30157,"line_start":504,"line_end":504,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30158,"byte_end":30161,"line_start":505,"line_end":505,"column_start":1,"column_end":4}},{"value":"/ When using `map` on a field, the map function must explicitly declare the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30162,"byte_end":30239,"line_start":506,"line_end":506,"column_start":1,"column_end":78}},{"value":"/ type of the data to be read in its first parameter and return a value which","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30240,"byte_end":30319,"line_start":507,"line_end":507,"column_start":1,"column_end":80}},{"value":"/ matches the type of the field. The map function can be a plain function,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30320,"byte_end":30396,"line_start":508,"line_end":508,"column_start":1,"column_end":77}},{"value":"/ closure, or call expression which returns a plain function or closure.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30397,"byte_end":30471,"line_start":509,"line_end":509,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30472,"byte_end":30475,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ When using `try_map` on a field, the same rules apply, except that the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30476,"byte_end":30550,"line_start":511,"line_end":511,"column_start":1,"column_end":75}},{"value":"/ function must return a [`Result`] instead.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30551,"byte_end":30597,"line_start":512,"line_end":512,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30598,"byte_end":30601,"line_start":513,"line_end":513,"column_start":1,"column_end":4}},{"value":"/ When using `map` or `try_map` on a struct or enum, the map function must","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30602,"byte_end":30678,"line_start":514,"line_end":514,"column_start":1,"column_end":77}},{"value":"/ return `Self` or `Result<Self, E>`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30679,"byte_end":30718,"line_start":515,"line_end":515,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30719,"byte_end":30722,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ Any earlier field or [import](#arguments) can be referenced by the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30723,"byte_end":30793,"line_start":517,"line_end":517,"column_start":1,"column_end":71}},{"value":"/ expression in the directive.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30794,"byte_end":30826,"line_start":518,"line_end":518,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30827,"byte_end":30830,"line_start":519,"line_end":519,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30831,"byte_end":30846,"line_start":520,"line_end":520,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30847,"byte_end":30850,"line_start":521,"line_end":521,"column_start":1,"column_end":4}},{"value":"/ ### Using `map` on a field","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30851,"byte_end":30881,"line_start":522,"line_end":522,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30882,"byte_end":30885,"line_start":523,"line_end":523,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30886,"byte_end":30893,"line_start":524,"line_end":524,"column_start":1,"column_end":8}},{"value":"/ # use binread::{prelude::*, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30894,"byte_end":30938,"line_start":525,"line_end":525,"column_start":1,"column_end":45}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30939,"byte_end":30961,"line_start":526,"line_end":526,"column_start":1,"column_end":23}},{"value":"/ struct MyType {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30962,"byte_end":30981,"line_start":527,"line_end":527,"column_start":1,"column_end":20}},{"value":"/     #[br(map = |x: u8| x.to_string())]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":30982,"byte_end":31024,"line_start":528,"line_end":528,"column_start":1,"column_end":43}},{"value":"/     int_str: String","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31025,"byte_end":31048,"line_start":529,"line_end":529,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31049,"byte_end":31054,"line_start":530,"line_end":530,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31055,"byte_end":31058,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ # assert_eq!(Cursor::new(b\"\\0\").read_be::<MyType>().unwrap().int_str, \"0\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31059,"byte_end":31138,"line_start":532,"line_end":532,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31139,"byte_end":31146,"line_start":533,"line_end":533,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31147,"byte_end":31150,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ ### Using `try_map` on a field","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31151,"byte_end":31185,"line_start":535,"line_end":535,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31186,"byte_end":31189,"line_start":536,"line_end":536,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31190,"byte_end":31197,"line_start":537,"line_end":537,"column_start":1,"column_end":8}},{"value":"/ # use binread::{prelude::*, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31198,"byte_end":31242,"line_start":538,"line_end":538,"column_start":1,"column_end":45}},{"value":"/ # use std::convert::TryInto;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31243,"byte_end":31275,"line_start":539,"line_end":539,"column_start":1,"column_end":33}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31276,"byte_end":31298,"line_start":540,"line_end":540,"column_start":1,"column_end":23}},{"value":"/ struct MyType {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31299,"byte_end":31318,"line_start":541,"line_end":541,"column_start":1,"column_end":20}},{"value":"/     #[br(try_map = |x: i8| x.try_into())]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31319,"byte_end":31364,"line_start":542,"line_end":542,"column_start":1,"column_end":46}},{"value":"/     value: u8","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31365,"byte_end":31382,"line_start":543,"line_end":543,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31383,"byte_end":31388,"line_start":544,"line_end":544,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31389,"byte_end":31392,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ # assert_eq!(Cursor::new(b\"\\0\").read_be::<MyType>().unwrap().value, 0);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31393,"byte_end":31468,"line_start":546,"line_end":546,"column_start":1,"column_end":76}},{"value":"/ # assert!(Cursor::new(b\"\\xff\").read_be::<MyType>().is_err());","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31469,"byte_end":31534,"line_start":547,"line_end":547,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31535,"byte_end":31542,"line_start":548,"line_end":548,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31543,"byte_end":31546,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ ### Using `map` on a struct to create a bit field","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31547,"byte_end":31600,"line_start":550,"line_end":550,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31601,"byte_end":31604,"line_start":551,"line_end":551,"column_start":1,"column_end":4}},{"value":"/ The [`modular-bitfield`](https://docs.rs/modular-bitfield) crate can be used","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31605,"byte_end":31685,"line_start":552,"line_end":552,"column_start":1,"column_end":81}},{"value":"/ along with `map` to create a struct out of raw bits.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31686,"byte_end":31742,"line_start":553,"line_end":553,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31743,"byte_end":31746,"line_start":554,"line_end":554,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31747,"byte_end":31754,"line_start":555,"line_end":555,"column_start":1,"column_end":8}},{"value":"/ # use binread::{prelude::*, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31755,"byte_end":31799,"line_start":556,"line_end":556,"column_start":1,"column_end":45}},{"value":"/ use modular_bitfield::prelude::*;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31800,"byte_end":31837,"line_start":557,"line_end":557,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31838,"byte_end":31841,"line_start":558,"line_end":558,"column_start":1,"column_end":4}},{"value":"/ // This reads a single byte from the reader","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31842,"byte_end":31889,"line_start":559,"line_end":559,"column_start":1,"column_end":48}},{"value":"/ #[bitfield]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31890,"byte_end":31905,"line_start":560,"line_end":560,"column_start":1,"column_end":16}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31906,"byte_end":31928,"line_start":561,"line_end":561,"column_start":1,"column_end":23}},{"value":"/ #[br(map = Self::from_bytes)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31929,"byte_end":31962,"line_start":562,"line_end":562,"column_start":1,"column_end":34}},{"value":"/ pub struct PackedData {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31963,"byte_end":31990,"line_start":563,"line_end":563,"column_start":1,"column_end":28}},{"value":"/     status: B4,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":31991,"byte_end":32010,"line_start":564,"line_end":564,"column_start":1,"column_end":20}},{"value":"/     is_fast: bool,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32011,"byte_end":32033,"line_start":565,"line_end":565,"column_start":1,"column_end":23}},{"value":"/     is_static: bool,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32034,"byte_end":32058,"line_start":566,"line_end":566,"column_start":1,"column_end":25}},{"value":"/     is_alive: bool,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32059,"byte_end":32082,"line_start":567,"line_end":567,"column_start":1,"column_end":24}},{"value":"/     is_good: bool,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32083,"byte_end":32105,"line_start":568,"line_end":568,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32106,"byte_end":32111,"line_start":569,"line_end":569,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32112,"byte_end":32115,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ // example byte: 0x53","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32116,"byte_end":32141,"line_start":571,"line_end":571,"column_start":1,"column_end":26}},{"value":"/ // [good] [alive] [static] [fast] [status]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32142,"byte_end":32188,"line_start":572,"line_end":572,"column_start":1,"column_end":47}},{"value":"/ //      0       1        0      1     0011","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32189,"byte_end":32235,"line_start":573,"line_end":573,"column_start":1,"column_end":47}},{"value":"/ //  false    true    false   true        3","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32236,"byte_end":32282,"line_start":574,"line_end":574,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32283,"byte_end":32286,"line_start":575,"line_end":575,"column_start":1,"column_end":4}},{"value":"/ # let data = Cursor::new(b\"\\x53\").read_le::<PackedData>().unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32287,"byte_end":32358,"line_start":576,"line_end":576,"column_start":1,"column_end":72}},{"value":"/ # assert_eq!(data.is_good(), false);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32359,"byte_end":32399,"line_start":577,"line_end":577,"column_start":1,"column_end":41}},{"value":"/ # assert_eq!(data.is_alive(), true);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32400,"byte_end":32440,"line_start":578,"line_end":578,"column_start":1,"column_end":41}},{"value":"/ # assert_eq!(data.is_static(), false);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32441,"byte_end":32483,"line_start":579,"line_end":579,"column_start":1,"column_end":43}},{"value":"/ # assert_eq!(data.is_fast(), true);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32484,"byte_end":32523,"line_start":580,"line_end":580,"column_start":1,"column_end":40}},{"value":"/ # assert_eq!(data.status(), 3);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32524,"byte_end":32559,"line_start":581,"line_end":581,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32560,"byte_end":32567,"line_start":582,"line_end":582,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32568,"byte_end":32571,"line_start":583,"line_end":583,"column_start":1,"column_end":4}},{"value":"/ ## Errors","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32572,"byte_end":32585,"line_start":584,"line_end":584,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32586,"byte_end":32589,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ If the `try_map` function returns a [`binread::io::Error`](crate::io::Error)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32590,"byte_end":32670,"line_start":586,"line_end":586,"column_start":1,"column_end":81}},{"value":"/ or [`std::io::Error`], an [`Io`](crate::Error::Io) error is returned. For","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32671,"byte_end":32748,"line_start":587,"line_end":587,"column_start":1,"column_end":78}},{"value":"/ any other error type, a [`Custom`](crate::Error::Custom) error is returned.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32749,"byte_end":32828,"line_start":588,"line_end":588,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32829,"byte_end":32832,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ In all cases, the reader’s position is reset to where it was before parsing","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32833,"byte_end":32914,"line_start":590,"line_end":590,"column_start":1,"column_end":80}},{"value":"/ started.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32915,"byte_end":32927,"line_start":591,"line_end":591,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32928,"byte_end":32931,"line_start":592,"line_end":592,"column_start":1,"column_end":4}},{"value":"/ # Custom parsers","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32932,"byte_end":32952,"line_start":593,"line_end":593,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32953,"byte_end":32956,"line_start":594,"line_end":594,"column_start":1,"column_end":4}},{"value":"/ The `parse_with` directive specifies a custom parsing function which can be","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":32957,"byte_end":33036,"line_start":595,"line_end":595,"column_start":1,"column_end":80}},{"value":"/ used to override the default [`BinRead`](crate::BinRead) implementation for","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33037,"byte_end":33116,"line_start":596,"line_end":596,"column_start":1,"column_end":80}},{"value":"/ a type, or to parse types which have no `BinRead` implementation at all:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33117,"byte_end":33193,"line_start":597,"line_end":597,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33194,"byte_end":33197,"line_start":598,"line_end":598,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33198,"byte_end":33209,"line_start":599,"line_end":599,"column_start":1,"column_end":12}},{"value":"/ #[br(parse_with = $parse_fn:expr)] or #[br(parse_with($parse_fn:expr))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33210,"byte_end":33285,"line_start":600,"line_end":600,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33286,"byte_end":33293,"line_start":601,"line_end":601,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33294,"byte_end":33297,"line_start":602,"line_end":602,"column_start":1,"column_end":4}},{"value":"/ Any earlier field or [import](#arguments) can be referenced by the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33298,"byte_end":33368,"line_start":603,"line_end":603,"column_start":1,"column_end":71}},{"value":"/ expression in the directive (for example, to construct a parser function at","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33369,"byte_end":33448,"line_start":604,"line_end":604,"column_start":1,"column_end":80}},{"value":"/ runtime by calling a function generator).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33449,"byte_end":33494,"line_start":605,"line_end":605,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33495,"byte_end":33498,"line_start":606,"line_end":606,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33499,"byte_end":33514,"line_start":607,"line_end":607,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33515,"byte_end":33518,"line_start":608,"line_end":608,"column_start":1,"column_end":4}},{"value":"/ ### Using a custom parser to generate a [`HashMap`](std::collections::HashMap)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33519,"byte_end":33601,"line_start":609,"line_end":609,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33602,"byte_end":33605,"line_start":610,"line_end":610,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33606,"byte_end":33613,"line_start":611,"line_end":611,"column_start":1,"column_end":8}},{"value":"/ # use binread::{prelude::*, io::*, ReadOptions};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33614,"byte_end":33666,"line_start":612,"line_end":612,"column_start":1,"column_end":53}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33667,"byte_end":33703,"line_start":613,"line_end":613,"column_start":1,"column_end":37}},{"value":"/ fn custom_parser<R: Read + Seek>(reader: &mut R, ro: &ReadOptions, _: ())","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33704,"byte_end":33781,"line_start":614,"line_end":614,"column_start":1,"column_end":78}},{"value":"/     -> BinResult<HashMap<u16, u16>>","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33782,"byte_end":33821,"line_start":615,"line_end":615,"column_start":1,"column_end":40}},{"value":"/ {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33822,"byte_end":33827,"line_start":616,"line_end":616,"column_start":1,"column_end":6}},{"value":"/     let mut map = HashMap::new();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33828,"byte_end":33865,"line_start":617,"line_end":617,"column_start":1,"column_end":38}},{"value":"/     map.insert(","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33866,"byte_end":33885,"line_start":618,"line_end":618,"column_start":1,"column_end":20}},{"value":"/         reader.read_be().unwrap(),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33886,"byte_end":33924,"line_start":619,"line_end":619,"column_start":1,"column_end":39}},{"value":"/         reader.read_be().unwrap()","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33925,"byte_end":33962,"line_start":620,"line_end":620,"column_start":1,"column_end":38}},{"value":"/     );","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33963,"byte_end":33973,"line_start":621,"line_end":621,"column_start":1,"column_end":11}},{"value":"/     Ok(map)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33974,"byte_end":33989,"line_start":622,"line_end":622,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33990,"byte_end":33995,"line_start":623,"line_end":623,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":33996,"byte_end":33999,"line_start":624,"line_end":624,"column_start":1,"column_end":4}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34000,"byte_end":34022,"line_start":625,"line_end":625,"column_start":1,"column_end":23}},{"value":"/ struct MyType {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34023,"byte_end":34042,"line_start":626,"line_end":626,"column_start":1,"column_end":20}},{"value":"/     #[br(parse_with = custom_parser)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34043,"byte_end":34084,"line_start":627,"line_end":627,"column_start":1,"column_end":42}},{"value":"/     offsets: HashMap<u16, u16>","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34085,"byte_end":34119,"line_start":628,"line_end":628,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34120,"byte_end":34125,"line_start":629,"line_end":629,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34126,"byte_end":34129,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ # assert_eq!(Cursor::new(b\"\\0\\0\\0\\x01\").read_be::<MyType>().unwrap().offsets.get(&0), Some(&1));","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34130,"byte_end":34230,"line_start":631,"line_end":631,"column_start":1,"column_end":101}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34231,"byte_end":34238,"line_start":632,"line_end":632,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34239,"byte_end":34242,"line_start":633,"line_end":633,"column_start":1,"column_end":4}},{"value":"/ ### Using `FilePtr::parse` to read a `NullString` without storing a `FilePtr`","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34243,"byte_end":34324,"line_start":634,"line_end":634,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34325,"byte_end":34328,"line_start":635,"line_end":635,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34329,"byte_end":34336,"line_start":636,"line_end":636,"column_start":1,"column_end":8}},{"value":"/ # use binread::{prelude::*, io::Cursor, FilePtr32, NullString};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34337,"byte_end":34404,"line_start":637,"line_end":637,"column_start":1,"column_end":68}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34405,"byte_end":34427,"line_start":638,"line_end":638,"column_start":1,"column_end":23}},{"value":"/ struct MyType {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34428,"byte_end":34447,"line_start":639,"line_end":639,"column_start":1,"column_end":20}},{"value":"/     #[br(parse_with = FilePtr32::parse)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34448,"byte_end":34492,"line_start":640,"line_end":640,"column_start":1,"column_end":45}},{"value":"/     some_string: NullString,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34493,"byte_end":34525,"line_start":641,"line_end":641,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34526,"byte_end":34531,"line_start":642,"line_end":642,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34532,"byte_end":34535,"line_start":643,"line_end":643,"column_start":1,"column_end":4}},{"value":"/ # let val: MyType = Cursor::new(b\"\\0\\0\\0\\x04Test\\0\").read_be().unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34536,"byte_end":34612,"line_start":644,"line_end":644,"column_start":1,"column_end":77}},{"value":"/ # assert_eq!(val.some_string.to_string(), \"Test\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34613,"byte_end":34667,"line_start":645,"line_end":645,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34668,"byte_end":34675,"line_start":646,"line_end":646,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34676,"byte_end":34679,"line_start":647,"line_end":647,"column_start":1,"column_end":4}},{"value":"/ # Calculations","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34680,"byte_end":34698,"line_start":648,"line_end":648,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34699,"byte_end":34702,"line_start":649,"line_end":649,"column_start":1,"column_end":4}},{"value":"/ The `calc` directive computes the value of a field instead of reading data","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34703,"byte_end":34781,"line_start":650,"line_end":650,"column_start":1,"column_end":79}},{"value":"/ from the reader:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34782,"byte_end":34802,"line_start":651,"line_end":651,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34803,"byte_end":34806,"line_start":652,"line_end":652,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34807,"byte_end":34818,"line_start":653,"line_end":653,"column_start":1,"column_end":12}},{"value":"/ #[br(calc = $value:expr)] or #[br(calc($value:expr))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34819,"byte_end":34876,"line_start":654,"line_end":654,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34877,"byte_end":34884,"line_start":655,"line_end":655,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34885,"byte_end":34888,"line_start":656,"line_end":656,"column_start":1,"column_end":4}},{"value":"/ Any earlier field or [import](#arguments) can be referenced by the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34889,"byte_end":34959,"line_start":657,"line_end":657,"column_start":1,"column_end":71}},{"value":"/ expression in the directive.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34960,"byte_end":34992,"line_start":658,"line_end":658,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34993,"byte_end":34996,"line_start":659,"line_end":659,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":34997,"byte_end":35012,"line_start":660,"line_end":660,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35013,"byte_end":35016,"line_start":661,"line_end":661,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35017,"byte_end":35028,"line_start":662,"line_end":662,"column_start":1,"column_end":12}},{"value":"/ # use binread::{prelude::*, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35029,"byte_end":35073,"line_start":663,"line_end":663,"column_start":1,"column_end":45}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35074,"byte_end":35096,"line_start":664,"line_end":664,"column_start":1,"column_end":23}},{"value":"/ struct MyType {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35097,"byte_end":35116,"line_start":665,"line_end":665,"column_start":1,"column_end":20}},{"value":"/     var: u32,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35117,"byte_end":35134,"line_start":666,"line_end":666,"column_start":1,"column_end":18}},{"value":"/     #[br(calc = 3 + var)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35135,"byte_end":35164,"line_start":667,"line_end":667,"column_start":1,"column_end":30}},{"value":"/     var_plus_3: u32,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35165,"byte_end":35189,"line_start":668,"line_end":668,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35190,"byte_end":35195,"line_start":669,"line_end":669,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35196,"byte_end":35199,"line_start":670,"line_end":670,"column_start":1,"column_end":4}},{"value":"/ # assert_eq!(Cursor::new(b\"\\0\\0\\0\\x01\").read_be::<MyType>().unwrap().var_plus_3, 4);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35200,"byte_end":35288,"line_start":671,"line_end":671,"column_start":1,"column_end":89}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35289,"byte_end":35296,"line_start":672,"line_end":672,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35297,"byte_end":35300,"line_start":673,"line_end":673,"column_start":1,"column_end":4}},{"value":"/ # Count","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35301,"byte_end":35312,"line_start":674,"line_end":674,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35313,"byte_end":35316,"line_start":675,"line_end":675,"column_start":1,"column_end":4}},{"value":"/ The `count` directive sets the number of values to read into a repeating","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35317,"byte_end":35393,"line_start":676,"line_end":676,"column_start":1,"column_end":77}},{"value":"/ collection type like a [`Vec`]:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35394,"byte_end":35429,"line_start":677,"line_end":677,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35430,"byte_end":35433,"line_start":678,"line_end":678,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35434,"byte_end":35445,"line_start":679,"line_end":679,"column_start":1,"column_end":12}},{"value":"/ #[br(count = $count:expr) or #[br(count($count:expr))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35446,"byte_end":35504,"line_start":680,"line_end":680,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35505,"byte_end":35512,"line_start":681,"line_end":681,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35513,"byte_end":35516,"line_start":682,"line_end":682,"column_start":1,"column_end":4}},{"value":"/ When manually implementing","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35517,"byte_end":35547,"line_start":683,"line_end":683,"column_start":1,"column_end":31}},{"value":"/ [`BinRead::read_options`](crate::BinRead::read_options) or a","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35548,"byte_end":35612,"line_start":684,"line_end":684,"column_start":1,"column_end":65}},{"value":"/ [custom parser function](#custom-parsers), the `count` value is accessible","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35613,"byte_end":35691,"line_start":685,"line_end":685,"column_start":1,"column_end":79}},{"value":"/ from [`ReadOptions::count`](crate::ReadOptions::count).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35692,"byte_end":35751,"line_start":686,"line_end":686,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35752,"byte_end":35755,"line_start":687,"line_end":687,"column_start":1,"column_end":4}},{"value":"/ Any earlier field or [import](#arguments) can be referenced by the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35756,"byte_end":35826,"line_start":688,"line_end":688,"column_start":1,"column_end":71}},{"value":"/ expression in the directive.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35827,"byte_end":35859,"line_start":689,"line_end":689,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35860,"byte_end":35863,"line_start":690,"line_end":690,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35864,"byte_end":35879,"line_start":691,"line_end":691,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35880,"byte_end":35883,"line_start":692,"line_end":692,"column_start":1,"column_end":4}},{"value":"/ ### Using `count` with [`Vec`]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35884,"byte_end":35918,"line_start":693,"line_end":693,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35919,"byte_end":35922,"line_start":694,"line_end":694,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35923,"byte_end":35930,"line_start":695,"line_end":695,"column_start":1,"column_end":8}},{"value":"/ # use binread::{prelude::*, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35931,"byte_end":35975,"line_start":696,"line_end":696,"column_start":1,"column_end":45}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35976,"byte_end":35998,"line_start":697,"line_end":697,"column_start":1,"column_end":23}},{"value":"/ struct MyType {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":35999,"byte_end":36018,"line_start":698,"line_end":698,"column_start":1,"column_end":20}},{"value":"/     size: u32,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36019,"byte_end":36037,"line_start":699,"line_end":699,"column_start":1,"column_end":19}},{"value":"/     #[br(count = size)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36038,"byte_end":36065,"line_start":700,"line_end":700,"column_start":1,"column_end":28}},{"value":"/     data: Vec<u8>,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36066,"byte_end":36088,"line_start":701,"line_end":701,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36089,"byte_end":36094,"line_start":702,"line_end":702,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36095,"byte_end":36098,"line_start":703,"line_end":703,"column_start":1,"column_end":4}},{"value":"/ # assert_eq!(","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36099,"byte_end":36116,"line_start":704,"line_end":704,"column_start":1,"column_end":18}},{"value":"/ #    Cursor::new(b\"\\0\\0\\0\\x04\\x01\\x02\\x03\\x04\").read_be::<MyType>().unwrap().data,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36117,"byte_end":36203,"line_start":705,"line_end":705,"column_start":1,"column_end":87}},{"value":"/ #    &[1u8, 2, 3, 4]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36204,"byte_end":36228,"line_start":706,"line_end":706,"column_start":1,"column_end":25}},{"value":"/ # );","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36229,"byte_end":36237,"line_start":707,"line_end":707,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36238,"byte_end":36245,"line_start":708,"line_end":708,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36246,"byte_end":36249,"line_start":709,"line_end":709,"column_start":1,"column_end":4}},{"value":"/ ### Using `count` with [`FilePtr`](crate::FilePtr) and `Vec`","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36250,"byte_end":36314,"line_start":710,"line_end":710,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36315,"byte_end":36318,"line_start":711,"line_end":711,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36319,"byte_end":36326,"line_start":712,"line_end":712,"column_start":1,"column_end":8}},{"value":"/ # use binread::{prelude::*, io::Cursor, FilePtr};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36327,"byte_end":36380,"line_start":713,"line_end":713,"column_start":1,"column_end":54}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36381,"byte_end":36403,"line_start":714,"line_end":714,"column_start":1,"column_end":23}},{"value":"/ struct MyType {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36404,"byte_end":36423,"line_start":715,"line_end":715,"column_start":1,"column_end":20}},{"value":"/     size: u32,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36424,"byte_end":36442,"line_start":716,"line_end":716,"column_start":1,"column_end":19}},{"value":"/     #[br(count = size)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36443,"byte_end":36470,"line_start":717,"line_end":717,"column_start":1,"column_end":28}},{"value":"/     data: FilePtr<u32, Vec<u8>>,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36471,"byte_end":36507,"line_start":718,"line_end":718,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36508,"byte_end":36513,"line_start":719,"line_end":719,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36514,"byte_end":36517,"line_start":720,"line_end":720,"column_start":1,"column_end":4}},{"value":"/ # assert_eq!(","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36518,"byte_end":36535,"line_start":721,"line_end":721,"column_start":1,"column_end":18}},{"value":"/ #    *(Cursor::new(b\"\\0\\0\\0\\x04\\0\\0\\0\\x09\\0\\x01\\x02\\x03\\x04\").read_be::<MyType>().unwrap().data),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36536,"byte_end":36637,"line_start":722,"line_end":722,"column_start":1,"column_end":102}},{"value":"/ #    &[1u8, 2, 3, 4]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36638,"byte_end":36662,"line_start":723,"line_end":723,"column_start":1,"column_end":25}},{"value":"/ # );","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36663,"byte_end":36671,"line_start":724,"line_end":724,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36672,"byte_end":36679,"line_start":725,"line_end":725,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36680,"byte_end":36683,"line_start":726,"line_end":726,"column_start":1,"column_end":4}},{"value":"/ # Offset","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36684,"byte_end":36696,"line_start":727,"line_end":727,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36697,"byte_end":36700,"line_start":728,"line_end":728,"column_start":1,"column_end":4}},{"value":"/ The `offset` and `offset_after` directives specify an additional relative","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36701,"byte_end":36778,"line_start":729,"line_end":729,"column_start":1,"column_end":78}},{"value":"/ offset to a value accessed by a `BinRead` implementation which reads data","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36779,"byte_end":36856,"line_start":730,"line_end":730,"column_start":1,"column_end":78}},{"value":"/ from an offset, like [`FilePtr`](crate::FilePtr):","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36857,"byte_end":36910,"line_start":731,"line_end":731,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36911,"byte_end":36914,"line_start":732,"line_end":732,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36915,"byte_end":36926,"line_start":733,"line_end":733,"column_start":1,"column_end":12}},{"value":"/ #[br(offset = $offset:expr)] or #[br(offset($offset:expr))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36927,"byte_end":36990,"line_start":734,"line_end":734,"column_start":1,"column_end":64}},{"value":"/ #[br(offset_after = $offset:expr)] or #[br(offset_after($offset:expr))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":36991,"byte_end":37066,"line_start":735,"line_end":735,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37067,"byte_end":37074,"line_start":736,"line_end":736,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37075,"byte_end":37078,"line_start":737,"line_end":737,"column_start":1,"column_end":4}},{"value":"/ When manually implementing","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37079,"byte_end":37109,"line_start":738,"line_end":738,"column_start":1,"column_end":31}},{"value":"/ [`BinRead::read_options`](crate::BinRead::read_options) or a","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37110,"byte_end":37174,"line_start":739,"line_end":739,"column_start":1,"column_end":65}},{"value":"/ [custom parser function](#custom-parsers), the offset is accessible","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37175,"byte_end":37246,"line_start":740,"line_end":740,"column_start":1,"column_end":72}},{"value":"/ from [`ReadOptions::offset`](crate::ReadOptions::offset).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37247,"byte_end":37308,"line_start":741,"line_end":741,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37309,"byte_end":37312,"line_start":742,"line_end":742,"column_start":1,"column_end":4}},{"value":"/ For `offset`, any earlier field or [import](#arguments) can be referenced by","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37313,"byte_end":37393,"line_start":743,"line_end":743,"column_start":1,"column_end":81}},{"value":"/ the expression in the directive.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37394,"byte_end":37430,"line_start":744,"line_end":744,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37431,"byte_end":37434,"line_start":745,"line_end":745,"column_start":1,"column_end":4}},{"value":"/ For `offset_after`, *all* fields and imports can be referenced by the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37435,"byte_end":37508,"line_start":746,"line_end":746,"column_start":1,"column_end":74}},{"value":"/ expression in the directive, but [`deref_now`](#postprocessing) cannot be","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37509,"byte_end":37586,"line_start":747,"line_end":747,"column_start":1,"column_end":78}},{"value":"/ used.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37587,"byte_end":37596,"line_start":748,"line_end":748,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37597,"byte_end":37600,"line_start":749,"line_end":749,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37601,"byte_end":37616,"line_start":750,"line_end":750,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37617,"byte_end":37620,"line_start":751,"line_end":751,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37621,"byte_end":37632,"line_start":752,"line_end":752,"column_start":1,"column_end":12}},{"value":"/ # use binread::{prelude::*, io::Cursor, FilePtr};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37633,"byte_end":37686,"line_start":753,"line_end":753,"column_start":1,"column_end":54}},{"value":"/ #[derive(BinRead, Debug, PartialEq)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37687,"byte_end":37727,"line_start":754,"line_end":754,"column_start":1,"column_end":41}},{"value":"/ struct OffsetTest {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37728,"byte_end":37751,"line_start":755,"line_end":755,"column_start":1,"column_end":24}},{"value":"/     #[br(little, offset = 4)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37752,"byte_end":37785,"line_start":756,"line_end":756,"column_start":1,"column_end":34}},{"value":"/     test: FilePtr<u8, u16>","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37786,"byte_end":37816,"line_start":757,"line_end":757,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37817,"byte_end":37822,"line_start":758,"line_end":758,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37823,"byte_end":37826,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ # assert_eq!(","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37827,"byte_end":37844,"line_start":760,"line_end":760,"column_start":1,"column_end":18}},{"value":"/ #   *OffsetTest::read(&mut Cursor::new(b\"\\0\\xFF\\xFF\\xFF\\x02\\0\")).unwrap().test,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37845,"byte_end":37928,"line_start":761,"line_end":761,"column_start":1,"column_end":84}},{"value":"/ #   2u16","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37929,"byte_end":37941,"line_start":762,"line_end":762,"column_start":1,"column_end":13}},{"value":"/ # );","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37942,"byte_end":37950,"line_start":763,"line_end":763,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37951,"byte_end":37958,"line_start":764,"line_end":764,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37959,"byte_end":37962,"line_start":765,"line_end":765,"column_start":1,"column_end":4}},{"value":"/ ## Errors","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37963,"byte_end":37976,"line_start":766,"line_end":766,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37977,"byte_end":37980,"line_start":767,"line_end":767,"column_start":1,"column_end":4}},{"value":"/ If seeking to or reading from the offset fails, an [`Io`](crate::Error::Io)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":37981,"byte_end":38060,"line_start":768,"line_end":768,"column_start":1,"column_end":80}},{"value":"/ error is returned and the reader’s position is reset to where it was before","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38061,"byte_end":38142,"line_start":769,"line_end":769,"column_start":1,"column_end":80}},{"value":"/ parsing started.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38143,"byte_end":38163,"line_start":770,"line_end":770,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38164,"byte_end":38167,"line_start":771,"line_end":771,"column_start":1,"column_end":4}},{"value":"/ # Conditional values","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38168,"byte_end":38192,"line_start":772,"line_end":772,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38193,"byte_end":38196,"line_start":773,"line_end":773,"column_start":1,"column_end":4}},{"value":"/ The `if` directive allows conditional parsing of a field, reading from data","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38197,"byte_end":38276,"line_start":774,"line_end":774,"column_start":1,"column_end":80}},{"value":"/ if the condition is true and using a computed value if the condition is","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38277,"byte_end":38352,"line_start":775,"line_end":775,"column_start":1,"column_end":76}},{"value":"/ false:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38353,"byte_end":38363,"line_start":776,"line_end":776,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38364,"byte_end":38367,"line_start":777,"line_end":777,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38368,"byte_end":38379,"line_start":778,"line_end":778,"column_start":1,"column_end":12}},{"value":"/ #[br(if = $cond:expr)] or #[br(if($cond:expr))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38380,"byte_end":38431,"line_start":779,"line_end":779,"column_start":1,"column_end":52}},{"value":"/ #[br(if = $cond:expr, $alternate:expr)] or #[br(if($cond:expr, $alternate:expr))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38432,"byte_end":38517,"line_start":780,"line_end":780,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38518,"byte_end":38525,"line_start":781,"line_end":781,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38526,"byte_end":38529,"line_start":782,"line_end":782,"column_start":1,"column_end":4}},{"value":"/ If an alternate is provided, that value will be used when the condition is","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38530,"byte_end":38608,"line_start":783,"line_end":783,"column_start":1,"column_end":79}},{"value":"/ false; otherwise, the [`default`](core::default::Default) value for the type","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38609,"byte_end":38689,"line_start":784,"line_end":784,"column_start":1,"column_end":81}},{"value":"/ will be used.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38690,"byte_end":38707,"line_start":785,"line_end":785,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38708,"byte_end":38711,"line_start":786,"line_end":786,"column_start":1,"column_end":4}},{"value":"/ The alternate expression is not evaluated unless the condition is false, so","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38712,"byte_end":38791,"line_start":787,"line_end":787,"column_start":1,"column_end":80}},{"value":"/ it is safe for it to contain expensive operations without impacting","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38792,"byte_end":38863,"line_start":788,"line_end":788,"column_start":1,"column_end":72}},{"value":"/ performance.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38864,"byte_end":38880,"line_start":789,"line_end":789,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38881,"byte_end":38884,"line_start":790,"line_end":790,"column_start":1,"column_end":4}},{"value":"/ Any earlier field or [import](#arguments) can be referenced by the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38885,"byte_end":38955,"line_start":791,"line_end":791,"column_start":1,"column_end":71}},{"value":"/ expression in the directive.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38956,"byte_end":38988,"line_start":792,"line_end":792,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38989,"byte_end":38992,"line_start":793,"line_end":793,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":38993,"byte_end":39008,"line_start":794,"line_end":794,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39009,"byte_end":39012,"line_start":795,"line_end":795,"column_start":1,"column_end":4}},{"value":"/ ### Using an [`Option`] field with no alternate","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39013,"byte_end":39064,"line_start":796,"line_end":796,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39065,"byte_end":39068,"line_start":797,"line_end":797,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39069,"byte_end":39080,"line_start":798,"line_end":798,"column_start":1,"column_end":12}},{"value":"/ # use binread::{prelude::*, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39081,"byte_end":39125,"line_start":799,"line_end":799,"column_start":1,"column_end":45}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39126,"byte_end":39148,"line_start":800,"line_end":800,"column_start":1,"column_end":23}},{"value":"/ struct MyType {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39149,"byte_end":39168,"line_start":801,"line_end":801,"column_start":1,"column_end":20}},{"value":"/     var: u32,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39169,"byte_end":39186,"line_start":802,"line_end":802,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39187,"byte_end":39190,"line_start":803,"line_end":803,"column_start":1,"column_end":4}},{"value":"/     #[br(if(var == 1))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39191,"byte_end":39218,"line_start":804,"line_end":804,"column_start":1,"column_end":28}},{"value":"/     original_byte: Option<u8>,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39219,"byte_end":39253,"line_start":805,"line_end":805,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39254,"byte_end":39257,"line_start":806,"line_end":806,"column_start":1,"column_end":4}},{"value":"/     #[br(if(var != 1))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39258,"byte_end":39285,"line_start":807,"line_end":807,"column_start":1,"column_end":28}},{"value":"/     other_byte: Option<u8>,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39286,"byte_end":39317,"line_start":808,"line_end":808,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39318,"byte_end":39323,"line_start":809,"line_end":809,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39324,"byte_end":39327,"line_start":810,"line_end":810,"column_start":1,"column_end":4}},{"value":"/ # assert_eq!(Cursor::new(b\"\\0\\0\\0\\x01\\x03\").read_be::<MyType>().unwrap().original_byte, Some(3));","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39328,"byte_end":39429,"line_start":811,"line_end":811,"column_start":1,"column_end":102}},{"value":"/ # assert_eq!(Cursor::new(b\"\\0\\0\\0\\x01\\x03\").read_be::<MyType>().unwrap().other_byte, None);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39430,"byte_end":39525,"line_start":812,"line_end":812,"column_start":1,"column_end":96}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39526,"byte_end":39533,"line_start":813,"line_end":813,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39534,"byte_end":39537,"line_start":814,"line_end":814,"column_start":1,"column_end":4}},{"value":"/ ### Using a scalar field with an explicit alternate","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39538,"byte_end":39593,"line_start":815,"line_end":815,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39594,"byte_end":39597,"line_start":816,"line_end":816,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39598,"byte_end":39609,"line_start":817,"line_end":817,"column_start":1,"column_end":12}},{"value":"/ # use binread::{prelude::*, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39610,"byte_end":39654,"line_start":818,"line_end":818,"column_start":1,"column_end":45}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39655,"byte_end":39677,"line_start":819,"line_end":819,"column_start":1,"column_end":23}},{"value":"/ struct MyType {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39678,"byte_end":39697,"line_start":820,"line_end":820,"column_start":1,"column_end":20}},{"value":"/     var: u32,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39698,"byte_end":39715,"line_start":821,"line_end":821,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39716,"byte_end":39719,"line_start":822,"line_end":822,"column_start":1,"column_end":4}},{"value":"/     #[br(if(var == 1, 0))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39720,"byte_end":39750,"line_start":823,"line_end":823,"column_start":1,"column_end":31}},{"value":"/     original_byte: u8,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39751,"byte_end":39777,"line_start":824,"line_end":824,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39778,"byte_end":39781,"line_start":825,"line_end":825,"column_start":1,"column_end":4}},{"value":"/     #[br(if(var != 1, 42))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39782,"byte_end":39813,"line_start":826,"line_end":826,"column_start":1,"column_end":32}},{"value":"/     other_byte: u8,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39814,"byte_end":39837,"line_start":827,"line_end":827,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39838,"byte_end":39843,"line_start":828,"line_end":828,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39844,"byte_end":39847,"line_start":829,"line_end":829,"column_start":1,"column_end":4}},{"value":"/ # assert_eq!(Cursor::new(b\"\\0\\0\\0\\x01\\x03\").read_be::<MyType>().unwrap().original_byte, 3);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39848,"byte_end":39943,"line_start":830,"line_end":830,"column_start":1,"column_end":96}},{"value":"/ # assert_eq!(Cursor::new(b\"\\0\\0\\0\\x01\\x03\").read_be::<MyType>().unwrap().other_byte, 42);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":39944,"byte_end":40037,"line_start":831,"line_end":831,"column_start":1,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40038,"byte_end":40045,"line_start":832,"line_end":832,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40046,"byte_end":40049,"line_start":833,"line_end":833,"column_start":1,"column_end":4}},{"value":"/ # Padding and alignment","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40050,"byte_end":40077,"line_start":834,"line_end":834,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40078,"byte_end":40081,"line_start":835,"line_end":835,"column_start":1,"column_end":4}},{"value":"/ BinRead offers different directives for common forms of","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40082,"byte_end":40141,"line_start":836,"line_end":836,"column_start":1,"column_end":60}},{"value":"/ [data structure alignment](https://en.wikipedia.org/wiki/Data_structure_alignment#Data_structure_padding).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40142,"byte_end":40252,"line_start":837,"line_end":837,"column_start":1,"column_end":111}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40253,"byte_end":40256,"line_start":838,"line_end":838,"column_start":1,"column_end":4}},{"value":"/ The `pad_before` and `pad_after` directives skip a specific number of bytes","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40257,"byte_end":40336,"line_start":839,"line_end":839,"column_start":1,"column_end":80}},{"value":"/ either before or after reading a field, respectively:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40337,"byte_end":40394,"line_start":840,"line_end":840,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40395,"byte_end":40398,"line_start":841,"line_end":841,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40399,"byte_end":40410,"line_start":842,"line_end":842,"column_start":1,"column_end":12}},{"value":"/ #[br(pad_after = $skip_bytes:expr)] or #[br(pad_after($skip_bytes:expr))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40411,"byte_end":40488,"line_start":843,"line_end":843,"column_start":1,"column_end":78}},{"value":"/ #[br(pad_before = $skip_bytes:expr)] or #[br(pad_before($skip_bytes:expr))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40489,"byte_end":40568,"line_start":844,"line_end":844,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40569,"byte_end":40576,"line_start":845,"line_end":845,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40577,"byte_end":40580,"line_start":846,"line_end":846,"column_start":1,"column_end":4}},{"value":"/ The `align_before` and `align_after` directives align the next read to the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40581,"byte_end":40659,"line_start":847,"line_end":847,"column_start":1,"column_end":79}},{"value":"/ given byte alignment either before or after reading a field, respectively:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40660,"byte_end":40738,"line_start":848,"line_end":848,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40739,"byte_end":40742,"line_start":849,"line_end":849,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40743,"byte_end":40754,"line_start":850,"line_end":850,"column_start":1,"column_end":12}},{"value":"/ #[br(align_after = $align_to:expr)] or #[br(align_after($align_to:expr))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40755,"byte_end":40832,"line_start":851,"line_end":851,"column_start":1,"column_end":78}},{"value":"/ #[br(align_before = $align_to:expr)] or #[br(align_before($align_to:expr))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40833,"byte_end":40912,"line_start":852,"line_end":852,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40913,"byte_end":40920,"line_start":853,"line_end":853,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40921,"byte_end":40924,"line_start":854,"line_end":854,"column_start":1,"column_end":4}},{"value":"/ The `seek_before` directive accepts a [`SeekFrom`](crate::io::SeekFrom)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":40925,"byte_end":41000,"line_start":855,"line_end":855,"column_start":1,"column_end":76}},{"value":"/ object and seeks the reader to an arbitrary position before reading a field:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41001,"byte_end":41081,"line_start":856,"line_end":856,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41082,"byte_end":41085,"line_start":857,"line_end":857,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41086,"byte_end":41097,"line_start":858,"line_end":858,"column_start":1,"column_end":12}},{"value":"/ #[br(seek_before = $seek_from:expr)] or #[br(seek_before($seek_from:expr))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41098,"byte_end":41177,"line_start":859,"line_end":859,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41178,"byte_end":41185,"line_start":860,"line_end":860,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41186,"byte_end":41189,"line_start":861,"line_end":861,"column_start":1,"column_end":4}},{"value":"/ The position of the reader will not be restored after the seek; use the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41190,"byte_end":41265,"line_start":862,"line_end":862,"column_start":1,"column_end":76}},{"value":"/ [`restore_position`](#restore-position) directive for this.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41266,"byte_end":41329,"line_start":863,"line_end":863,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41330,"byte_end":41333,"line_start":864,"line_end":864,"column_start":1,"column_end":4}},{"value":"/ The `pad_size_to` directive will ensure that the reader has advanced at","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41334,"byte_end":41409,"line_start":865,"line_end":865,"column_start":1,"column_end":76}},{"value":"/ least the number of bytes given after the field has been read:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41410,"byte_end":41476,"line_start":866,"line_end":866,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41477,"byte_end":41480,"line_start":867,"line_end":867,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41481,"byte_end":41492,"line_start":868,"line_end":868,"column_start":1,"column_end":12}},{"value":"/ #[br(pad_size_to = $size:expr)] or #[br(pad_size_to($size:expr))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41493,"byte_end":41562,"line_start":869,"line_end":869,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41563,"byte_end":41570,"line_start":870,"line_end":870,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41571,"byte_end":41574,"line_start":871,"line_end":871,"column_start":1,"column_end":4}},{"value":"/ For example, if a format uses a null-terminated string, but always reserves","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41575,"byte_end":41654,"line_start":872,"line_end":872,"column_start":1,"column_end":80}},{"value":"/ at least 256 bytes for that string, [`NullString`](crate::NullString) will","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41655,"byte_end":41733,"line_start":873,"line_end":873,"column_start":1,"column_end":79}},{"value":"/ read the string and `pad_size_to(256)` will ensure the reader skips whatever","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41734,"byte_end":41814,"line_start":874,"line_end":874,"column_start":1,"column_end":81}},{"value":"/ padding, if any, remains. If the string is longer than 256 bytes, no padding","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41815,"byte_end":41895,"line_start":875,"line_end":875,"column_start":1,"column_end":81}},{"value":"/ will be skipped.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41896,"byte_end":41916,"line_start":876,"line_end":876,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41917,"byte_end":41920,"line_start":877,"line_end":877,"column_start":1,"column_end":4}},{"value":"/ Any earlier field or [import](#arguments) can be referenced by the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41921,"byte_end":41991,"line_start":878,"line_end":878,"column_start":1,"column_end":71}},{"value":"/ expressions in any of these directives.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":41992,"byte_end":42035,"line_start":879,"line_end":879,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42036,"byte_end":42039,"line_start":880,"line_end":880,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42040,"byte_end":42055,"line_start":881,"line_end":881,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42056,"byte_end":42059,"line_start":882,"line_end":882,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42060,"byte_end":42071,"line_start":883,"line_end":883,"column_start":1,"column_end":12}},{"value":"/ # use binread::{BinRead, NullString, io::SeekFrom};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42072,"byte_end":42127,"line_start":884,"line_end":884,"column_start":1,"column_end":56}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42128,"byte_end":42150,"line_start":885,"line_end":885,"column_start":1,"column_end":23}},{"value":"/ struct MyType {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42151,"byte_end":42170,"line_start":886,"line_end":886,"column_start":1,"column_end":20}},{"value":"/     #[br(align_before = 4, pad_after = 1, align_after = 4)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42171,"byte_end":42234,"line_start":887,"line_end":887,"column_start":1,"column_end":64}},{"value":"/     str: NullString,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42235,"byte_end":42259,"line_start":888,"line_end":888,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42260,"byte_end":42263,"line_start":889,"line_end":889,"column_start":1,"column_end":4}},{"value":"/     #[br(pad_size_to = 0x10)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42264,"byte_end":42297,"line_start":890,"line_end":890,"column_start":1,"column_end":34}},{"value":"/     test: u64,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42298,"byte_end":42316,"line_start":891,"line_end":891,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42317,"byte_end":42320,"line_start":892,"line_end":892,"column_start":1,"column_end":4}},{"value":"/     #[br(seek_before = SeekFrom::End(-4))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42321,"byte_end":42367,"line_start":893,"line_end":893,"column_start":1,"column_end":47}},{"value":"/     end: u32,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42368,"byte_end":42385,"line_start":894,"line_end":894,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42386,"byte_end":42391,"line_start":895,"line_end":895,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42392,"byte_end":42399,"line_start":896,"line_end":896,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42400,"byte_end":42403,"line_start":897,"line_end":897,"column_start":1,"column_end":4}},{"value":"/ ## Errors","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42404,"byte_end":42417,"line_start":898,"line_end":898,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42418,"byte_end":42421,"line_start":899,"line_end":899,"column_start":1,"column_end":4}},{"value":"/ If seeking fails, an [`Io`](crate::Error::Io) error is returned and the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42422,"byte_end":42497,"line_start":900,"line_end":900,"column_start":1,"column_end":76}},{"value":"/ reader’s position is reset to where it was before parsing started.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42498,"byte_end":42570,"line_start":901,"line_end":901,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42571,"byte_end":42574,"line_start":902,"line_end":902,"column_start":1,"column_end":4}},{"value":"/ # Repr","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42575,"byte_end":42585,"line_start":903,"line_end":903,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42586,"byte_end":42589,"line_start":904,"line_end":904,"column_start":1,"column_end":4}},{"value":"/ The `repr` directive is used on a unit-like (C-style) enum to specify the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42590,"byte_end":42667,"line_start":905,"line_end":905,"column_start":1,"column_end":78}},{"value":"/ underlying type to use when reading the field and matching variants:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42668,"byte_end":42740,"line_start":906,"line_end":906,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42741,"byte_end":42744,"line_start":907,"line_end":907,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42745,"byte_end":42756,"line_start":908,"line_end":908,"column_start":1,"column_end":12}},{"value":"/ #[br(repr = $ty:ty)] or #[br(repr($ty:ty))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42757,"byte_end":42804,"line_start":909,"line_end":909,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42805,"byte_end":42812,"line_start":910,"line_end":910,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42813,"byte_end":42816,"line_start":911,"line_end":911,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42817,"byte_end":42832,"line_start":912,"line_end":912,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42833,"byte_end":42836,"line_start":913,"line_end":913,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42837,"byte_end":42844,"line_start":914,"line_end":914,"column_start":1,"column_end":8}},{"value":"/ # use binread::BinRead;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42845,"byte_end":42872,"line_start":915,"line_end":915,"column_start":1,"column_end":28}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42873,"byte_end":42895,"line_start":916,"line_end":916,"column_start":1,"column_end":23}},{"value":"/ #[br(big, repr = i16)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42896,"byte_end":42922,"line_start":917,"line_end":917,"column_start":1,"column_end":27}},{"value":"/ enum FileKind {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42923,"byte_end":42942,"line_start":918,"line_end":918,"column_start":1,"column_end":20}},{"value":"/     Unknown = -1,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42943,"byte_end":42964,"line_start":919,"line_end":919,"column_start":1,"column_end":22}},{"value":"/     Text,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42965,"byte_end":42978,"line_start":920,"line_end":920,"column_start":1,"column_end":14}},{"value":"/     Archive,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42979,"byte_end":42995,"line_start":921,"line_end":921,"column_start":1,"column_end":17}},{"value":"/     Document,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":42996,"byte_end":43013,"line_start":922,"line_end":922,"column_start":1,"column_end":18}},{"value":"/     Picture,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":43014,"byte_end":43030,"line_start":923,"line_end":923,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":43031,"byte_end":43036,"line_start":924,"line_end":924,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":43037,"byte_end":43044,"line_start":925,"line_end":925,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":43045,"byte_end":43048,"line_start":926,"line_end":926,"column_start":1,"column_end":4}},{"value":"/ ## Errors","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":43049,"byte_end":43062,"line_start":927,"line_end":927,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":43063,"byte_end":43066,"line_start":928,"line_end":928,"column_start":1,"column_end":4}},{"value":"/ If a read fails, an [`Io`](crate::Error::Io) error is returned. If no","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":43067,"byte_end":43140,"line_start":929,"line_end":929,"column_start":1,"column_end":74}},{"value":"/ variant matches, a [`NoVariantMatch`](crate::Error::NoVariantMatch) error","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":43141,"byte_end":43218,"line_start":930,"line_end":930,"column_start":1,"column_end":78}},{"value":"/ is returned.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":43219,"byte_end":43235,"line_start":931,"line_end":931,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":43236,"byte_end":43239,"line_start":932,"line_end":932,"column_start":1,"column_end":4}},{"value":"/ In all cases, the reader’s position is reset to where it was before parsing","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":43240,"byte_end":43321,"line_start":933,"line_end":933,"column_start":1,"column_end":80}},{"value":"/ started.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":43322,"byte_end":43334,"line_start":934,"line_end":934,"column_start":1,"column_end":13}},{"value":"allow(unused_imports)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/attribute.rs","byte_start":43336,"byte_end":43361,"line_start":936,"line_end":936,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":49},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/endian.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"endian","qualname":"::endian","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/endian.rs","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62}],"decl_id":null,"docs":" An enum to represent what endianness to read as\n","sig":null,"attributes":[{"value":"/ An enum to represent what endianness to read as","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/endian.rs","byte_start":43391,"byte_end":43442,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":622},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/endian.rs","byte_start":43620,"byte_end":43623,"line_start":9,"line_end":9,"column_start":5,"column_end":8},"name":"Big","qualname":"::endian::Endian::Big","value":"Endian::Big","parent":{"krate":0,"index":621},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":624},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/endian.rs","byte_start":43629,"byte_end":43635,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"name":"Little","qualname":"::endian::Endian::Little","value":"Endian::Little","parent":{"krate":0,"index":621},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":626},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/endian.rs","byte_start":43641,"byte_end":43647,"line_start":11,"line_end":11,"column_start":5,"column_end":11},"name":"Native","qualname":"::endian::Endian::Native","value":"Endian::Native","parent":{"krate":0,"index":621},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":621},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/endian.rs","byte_start":43607,"byte_end":43613,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Endian","qualname":"::endian::Endian","value":"pub enum Endian { Big, Little, Native, }","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":626}],"decl_id":null,"docs":" An enum to represent what endianness to read as\n","sig":null,"attributes":[{"value":"/ An enum to represent what endianness to read as","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/endian.rs","byte_start":43501,"byte_end":43552,"line_start":6,"line_end":6,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":64},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":106}],"decl_id":null,"docs":" Error types and internal error handling functions\n","sig":null,"attributes":[{"value":"/ Error types and internal error handling functions","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":44425,"byte_end":44478,"line_start":1,"line_end":1,"column_start":1,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":67},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":44630,"byte_end":44638,"line_start":8,"line_end":8,"column_start":5,"column_end":13},"name":"BadMagic","qualname":"::error::Error::BadMagic","value":"Error::BadMagic { pos, found }","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" The magic value did not match the provided one\n","sig":null,"attributes":[{"value":"/ The magic value did not match the provided one","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":44575,"byte_end":44625,"line_start":7,"line_end":7,"column_start":5,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":70},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":44942,"byte_end":44952,"line_start":15,"line_end":15,"column_start":5,"column_end":15},"name":"AssertFail","qualname":"::error::Error::AssertFail","value":"Error::AssertFail { pos, message }","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" The condition of an assertion without a custom type failed\n","sig":null,"attributes":[{"value":"/ The condition of an assertion without a custom type failed","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":44875,"byte_end":44937,"line_start":14,"line_end":14,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":73},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":45068,"byte_end":45070,"line_start":17,"line_end":17,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" An error that occured while reading from, or seeking within, the reader\n","sig":null,"attributes":[{"value":"/ An error that occured while reading from, or seeking within, the reader","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":44988,"byte_end":45063,"line_start":16,"line_end":16,"column_start":5,"column_end":80}}]},{"kind":"StructVariant","id":{"krate":0,"index":76},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":45194,"byte_end":45200,"line_start":19,"line_end":19,"column_start":5,"column_end":11},"name":"Custom","qualname":"::error::Error::Custom","value":"Error::Custom { pos, err }","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" A custom error, most often given from the second value passed into an [`assert`](attribute#Assert)\n","sig":null,"attributes":[{"value":"/ A custom error, most often given from the second value passed into an [`assert`](attribute#Assert)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":45087,"byte_end":45189,"line_start":18,"line_end":18,"column_start":5,"column_end":107}}]},{"kind":"StructVariant","id":{"krate":0,"index":79},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":45339,"byte_end":45353,"line_start":24,"line_end":24,"column_start":5,"column_end":19},"name":"NoVariantMatch","qualname":"::error::Error::NoVariantMatch","value":"Error::NoVariantMatch { pos }","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" No variant in the enum was successful in parsing the data\n","sig":null,"attributes":[{"value":"/ No variant in the enum was successful in parsing the data","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":45273,"byte_end":45334,"line_start":23,"line_end":23,"column_start":5,"column_end":66}}]},{"kind":"StructVariant","id":{"krate":0,"index":81},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":45372,"byte_end":45382,"line_start":25,"line_end":25,"column_start":5,"column_end":15},"name":"EnumErrors","qualname":"::error::Error::EnumErrors","value":"Error::EnumErrors { pos, variant_errors }","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":66},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":44563,"byte_end":44568,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    BadMagic {\n        pos: u64,\n        found: Box<dyn Any + Sync + Send>,\n    },\n    AssertFail {\n        pos: u64,\n        message: String,\n    },\n    Io(io::Error),\n    Custom {\n        pos: u64,\n        err: Box<dyn Any + Sync + Send>,\n    },\n    NoVariantMatch {\n        pos: u64,\n    },\n    EnumErrors {\n        pos: u64,\n        variant_errors: Vec<(&'static str, Error)>,\n    },\n}","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":81}],"decl_id":null,"docs":" An error while parsing a BinRead type\n","sig":null,"attributes":[{"value":"/ An error while parsing a BinRead type","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":44494,"byte_end":44535,"line_start":4,"line_end":4,"column_start":1,"column_end":42}},{"value":"non_exhaustive","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":44536,"byte_end":44553,"line_start":5,"line_end":5,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":45669,"byte_end":45679,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"custom_err","qualname":"<Error>::custom_err","value":"pub fn custom_err<T: Any>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Gets a custom error of type T from the Error. Returns `None` if the error type is not\n custom or if the contained error is not of the desired type.\n","sig":null,"attributes":[{"value":"/ Gets a custom error of type T from the Error. Returns `None` if the error type is not","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":45499,"byte_end":45588,"line_start":32,"line_end":32,"column_start":5,"column_end":94}},{"value":"/ custom or if the contained error is not of the desired type.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":45593,"byte_end":45657,"line_start":33,"line_end":33,"column_start":5,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":97},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":47081,"byte_end":47086,"line_start":83,"line_end":83,"column_start":8,"column_end":13},"name":"magic","qualname":"::error::magic","value":"pub fn magic<R, B>(&mut R, B, &ReadOptions) -> BinResult<()> where\nB: BinRead<Args = ()> + PartialEq + Sync + Send + 'static, R: io::Read +\nio::Seek","parent":null,"children":[],"decl_id":null,"docs":" Read a value then check if it is the expected value\n","sig":null,"attributes":[{"value":"/ Read a value then check if it is the expected value","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":47018,"byte_end":47073,"line_start":82,"line_end":82,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":100},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":47788,"byte_end":47794,"line_start":108,"line_end":108,"column_start":8,"column_end":14},"name":"assert","qualname":"::error::assert","value":"pub fn assert<R, E, A>(&mut R, bool, &str, Option<E>) -> BinResult<()> where\nR: io::Read + io::Seek, A: core::fmt::Debug + Sync + Send + 'static, E: Fn()\n-> A","parent":null,"children":[],"decl_id":null,"docs":" Assert a condition is true and if not optionally apply a function to generate the error\n","sig":null,"attributes":[{"value":"/ Assert a condition is true and if not optionally apply a function to generate the error","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":47675,"byte_end":47766,"line_start":106,"line_end":106,"column_start":1,"column_end":92}},{"value":"deprecated","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":47767,"byte_end":47780,"line_start":107,"line_end":107,"column_start":1,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":106},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":48432,"byte_end":48461,"line_start":134,"line_end":134,"column_start":8,"column_end":37},"name":"read_options_then_after_parse","qualname":"::error::read_options_then_after_parse","value":"pub fn read_options_then_after_parse<Args, T,\n                                     R>(&mut R, &ReadOptions, T::Args)\n-> BinResult<T> where Args: Copy + 'static, T: BinRead<Args = Args>, R: Read +\nSeek","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":110},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"file_ptr","qualname":"::file_ptr","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":145},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":645},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":655},{"krate":0,"index":657},{"krate":0,"index":154},{"krate":0,"index":159},{"krate":0,"index":163},{"krate":0,"index":167}],"decl_id":null,"docs":" A wrapper type for representing a layer of indirection within a file.","sig":null,"attributes":[{"value":"/ A wrapper type for representing a layer of indirection within a file.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":48746,"byte_end":48819,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":48820,"byte_end":48823,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A `FilePtr<P, T>` is composed of two types: a pointer type `P` and a value type `T` where","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":48824,"byte_end":48917,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/ the pointer type describes an offset to read the value type from. Once read from the file","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":48918,"byte_end":49011,"line_start":4,"line_end":4,"column_start":1,"column_end":94}},{"value":"/ it can be dereferenced to yield the value it points to.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49012,"byte_end":49071,"line_start":5,"line_end":5,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49072,"byte_end":49075,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49076,"byte_end":49090,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49091,"byte_end":49102,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"/ use binread::{prelude::*, io::Cursor, FilePtr};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49103,"byte_end":49154,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49155,"byte_end":49158,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49159,"byte_end":49181,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/ struct Test {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49182,"byte_end":49199,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/     pointer: FilePtr<u32, u8>","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49200,"byte_end":49233,"line_start":13,"line_end":13,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49234,"byte_end":49239,"line_start":14,"line_end":14,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49240,"byte_end":49243,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let test: Test = Cursor::new(b\"\\0\\0\\0\\x08\\0\\0\\0\\0\\xff\").read_be().unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49244,"byte_end":49323,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(test.pointer.ptr, 8);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49324,"byte_end":49360,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(*test.pointer, 0xFF);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49361,"byte_end":49397,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49398,"byte_end":49405,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49406,"byte_end":49409,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Example data mapped out:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49410,"byte_end":49438,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ ```hex","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49439,"byte_end":49449,"line_start":22,"line_end":22,"column_start":1,"column_end":11}},{"value":"/           [pointer]           [value]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49450,"byte_end":49491,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ 00000000: 0000 0008 0000 0000 ff                   ............","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49492,"byte_end":49559,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49560,"byte_end":49567,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49568,"byte_end":49571,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Use `offset` to change what the pointer is relative to (default: beginning of reader).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49572,"byte_end":49662,"line_start":27,"line_end":27,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":122},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50656,"byte_end":50663,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"FilePtr","qualname":"::file_ptr::FilePtr","value":"FilePtr { ptr, value }","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"decl_id":null,"docs":" A wrapper type for representing a layer of indirection within a file.","sig":null,"attributes":[{"value":"/ A wrapper type for representing a layer of indirection within a file.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49727,"byte_end":49800,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49801,"byte_end":49804,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ A `FilePtr<P, T>` is composed of two types: a pointer type `P` and a value type `T` where","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49805,"byte_end":49898,"line_start":34,"line_end":34,"column_start":1,"column_end":94}},{"value":"/ the pointer type describes and offset to read the value type from. Once read from the file","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49899,"byte_end":49993,"line_start":35,"line_end":35,"column_start":1,"column_end":95}},{"value":"/ it can be dereferenced to yeild the value it points to.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":49994,"byte_end":50053,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50054,"byte_end":50057,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50058,"byte_end":50072,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50073,"byte_end":50084,"line_start":39,"line_end":39,"column_start":1,"column_end":12}},{"value":"/ use binread::{prelude::*, io::Cursor, FilePtr};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50085,"byte_end":50136,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50137,"byte_end":50140,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50141,"byte_end":50163,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/ struct Test {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50164,"byte_end":50181,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"/     pointer: FilePtr<u32, u8>","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50182,"byte_end":50215,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50216,"byte_end":50221,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50222,"byte_end":50225,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let test: Test = Cursor::new(b\"\\0\\0\\0\\x08\\0\\0\\0\\0\\xff\").read_be().unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50226,"byte_end":50305,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(test.pointer.ptr, 8);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50306,"byte_end":50342,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(*test.pointer, 0xFF);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50343,"byte_end":50379,"line_start":49,"line_end":49,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50380,"byte_end":50387,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50388,"byte_end":50391,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Example data mapped out:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50392,"byte_end":50420,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ ```hex","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50421,"byte_end":50431,"line_start":53,"line_end":53,"column_start":1,"column_end":11}},{"value":"/           [pointer]           [value]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50432,"byte_end":50473,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ 00000000: 0000 0008 0000 0000 ff                   ............","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50474,"byte_end":50541,"line_start":55,"line_end":55,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50542,"byte_end":50549,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50550,"byte_end":50553,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Use `offset` to change what the pointer is relative to (default: beginning of reader).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50554,"byte_end":50644,"line_start":58,"line_end":58,"column_start":1,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":125},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50706,"byte_end":50709,"line_start":60,"line_end":60,"column_start":9,"column_end":12},"name":"ptr","qualname":"::file_ptr::FilePtr::ptr","value":"Ptr","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":126},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50724,"byte_end":50729,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"name":"value","qualname":"::file_ptr::FilePtr::value","value":"std::option::Option<BR>","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":127},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50789,"byte_end":50797,"line_start":65,"line_end":65,"column_start":10,"column_end":18},"name":"FilePtr8","qualname":"::file_ptr::FilePtr8","value":"FilePtr<u8, T>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for 8-bit pointers\n","sig":null,"attributes":[{"value":"/ Type alias for 8-bit pointers","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50746,"byte_end":50779,"line_start":64,"line_end":64,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":129},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50863,"byte_end":50872,"line_start":67,"line_end":67,"column_start":10,"column_end":19},"name":"FilePtr16","qualname":"::file_ptr::FilePtr16","value":"FilePtr<u16, T>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for 16-bit pointers\n","sig":null,"attributes":[{"value":"/ Type alias for 16-bit pointers","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50819,"byte_end":50853,"line_start":66,"line_end":66,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":131},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50939,"byte_end":50948,"line_start":69,"line_end":69,"column_start":10,"column_end":19},"name":"FilePtr32","qualname":"::file_ptr::FilePtr32","value":"FilePtr<u32, T>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for 32-bit pointers\n","sig":null,"attributes":[{"value":"/ Type alias for 32-bit pointers","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50895,"byte_end":50929,"line_start":68,"line_end":68,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":133},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":51015,"byte_end":51024,"line_start":71,"line_end":71,"column_start":10,"column_end":19},"name":"FilePtr64","qualname":"::file_ptr::FilePtr64","value":"FilePtr<u64, T>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for 64-bit pointers\n","sig":null,"attributes":[{"value":"/ Type alias for 64-bit pointers","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":50971,"byte_end":51005,"line_start":70,"line_end":70,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":135},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":51092,"byte_end":51102,"line_start":73,"line_end":73,"column_start":10,"column_end":20},"name":"FilePtr128","qualname":"::file_ptr::FilePtr128","value":"FilePtr<u128, T>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for 128-bit pointers\n","sig":null,"attributes":[{"value":"/ Type alias for 128-bit pointers","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":51047,"byte_end":51082,"line_start":72,"line_end":72,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":53027,"byte_end":53032,"line_start":133,"line_end":133,"column_start":12,"column_end":17},"name":"parse","qualname":"<FilePtr<Ptr, BR>>::parse","value":"pub fn parse<R: Read + Seek>(&mut R, &ReadOptions, BR::Args) -> BinResult<BR>","parent":null,"children":[],"decl_id":null,"docs":" Custom parser designed for use with the `parse_with` attribute ([example](crate::attribute#custom-parsers))\n that reads a [`FilePtr`](FilePtr) then immediately dereferences it into an owned value\n","sig":null,"attributes":[{"value":"/ Custom parser designed for use with the `parse_with` attribute ([example](crate::attribute#custom-parsers))","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":52809,"byte_end":52920,"line_start":131,"line_end":131,"column_start":5,"column_end":116}},{"value":"/ that reads a [`FilePtr`](FilePtr) then immediately dereferences it into an owned value","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":52925,"byte_end":53015,"line_start":132,"line_end":132,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":53579,"byte_end":53589,"line_start":150,"line_end":150,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FilePtr<Ptr, BR>>::into_inner","value":"pub fn into_inner(Self) -> BR","parent":null,"children":[],"decl_id":null,"docs":" Consume the pointer and return the inner type","sig":null,"attributes":[{"value":"/ Consume the pointer and return the inner type","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":53411,"byte_end":53460,"line_start":145,"line_end":145,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":53465,"byte_end":53468,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":53473,"byte_end":53485,"line_start":147,"line_end":147,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":53490,"byte_end":53493,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Will panic if the file pointer hasn't been properly postprocessed","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":53498,"byte_end":53567,"line_start":149,"line_end":149,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":151},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":53758,"byte_end":53770,"line_start":156,"line_end":156,"column_start":11,"column_end":23},"name":"IntoSeekFrom","qualname":"::file_ptr::IntoSeekFrom","value":"IntoSeekFrom: Copy","parent":null,"children":[{"krate":0,"index":152}],"decl_id":null,"docs":" Used to allow any convert any type castable to i64 into a [`SeekFrom::Current`](io::SeekFrom::Current)\n","sig":null,"attributes":[{"value":"/ Used to allow any convert any type castable to i64 into a [`SeekFrom::Current`](io::SeekFrom::Current)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":53641,"byte_end":53747,"line_start":155,"line_end":155,"column_start":1,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":53786,"byte_end":53800,"line_start":157,"line_end":157,"column_start":8,"column_end":22},"name":"into_seek_from","qualname":"::file_ptr::IntoSeekFrom::into_seek_from","value":"pub fn into_seek_from(Self) -> SeekFrom","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":171},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"helpers","qualname":"::helpers","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":205},{"krate":0,"index":213},{"krate":0,"index":218}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":195},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56262,"byte_end":56272,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"read_bytes","qualname":"::helpers::read_bytes","value":"pub fn read_bytes<R: Read + Seek>(&mut R, &ReadOptions, ())\n-> BinResult<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" A helper for more efficiently mass-reading bytes","sig":null,"attributes":[{"value":"/ A helper for more efficiently mass-reading bytes","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":55830,"byte_end":55882,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":55883,"byte_end":55886,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/## Example:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":55887,"byte_end":55901,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":55902,"byte_end":55905,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":55906,"byte_end":55917,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ # use binread::{BinRead, helpers::read_bytes, io::Cursor, BinReaderExt};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":55918,"byte_end":55994,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":55995,"byte_end":56017,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ struct BunchaBytes {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56018,"byte_end":56042,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/     #[br(count = 5)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56043,"byte_end":56067,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/     data: Vec<u8>","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56068,"byte_end":56089,"line_start":17,"line_end":17,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56090,"byte_end":56095,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56096,"byte_end":56099,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # let mut x = Cursor::new(b\"\\0\\x01\\x02\\x03\\x04\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56100,"byte_end":56153,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"/ # let x: BunchaBytes = x.read_be().unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56154,"byte_end":56202,"line_start":21,"line_end":21,"column_start":1,"column_end":49}},{"value":"/ # assert_eq!(x.data, &[0, 1, 2, 3, 4]);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56203,"byte_end":56246,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56247,"byte_end":56254,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":197},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":57060,"byte_end":57065,"line_start":55,"line_end":55,"column_start":8,"column_end":13},"name":"until","qualname":"::helpers::until","value":"pub fn until<Reader, T, CondFn, Arg, Ret>(CondFn) -> /*impl Trait*/ where\nT: BinRead<Args = Arg>, Reader: Read + Seek, CondFn: Fn(&T) -> bool,\nArg: Clone, Ret: core::iter::FromIterator<T>","parent":null,"children":[],"decl_id":null,"docs":" Read items until a condition is met. The final item will be included.","sig":null,"attributes":[{"value":"/ Read items until a condition is met. The final item will be included.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56581,"byte_end":56654,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56655,"byte_end":56658,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56659,"byte_end":56673,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56674,"byte_end":56677,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56678,"byte_end":56685,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ # use binread::{BinRead, helpers::until, io::Cursor, BinReaderExt};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56686,"byte_end":56757,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56758,"byte_end":56780,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/ struct NullTerminated {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56781,"byte_end":56808,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"/     #[br(parse_with = until(|&byte| byte == 0))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56809,"byte_end":56861,"line_start":47,"line_end":47,"column_start":1,"column_end":53}},{"value":"/     data: Vec<u8>,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56862,"byte_end":56884,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56885,"byte_end":56890,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56891,"byte_end":56894,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # let mut x = Cursor::new(b\"\\x01\\x02\\x03\\x04\\0\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56895,"byte_end":56948,"line_start":51,"line_end":51,"column_start":1,"column_end":54}},{"value":"/ # let x: NullTerminated = x.read_be().unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":56949,"byte_end":57000,"line_start":52,"line_end":52,"column_start":1,"column_end":52}},{"value":"/ # assert_eq!(x.data, &[1, 2, 3, 4, 0]);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":57001,"byte_end":57044,"line_start":53,"line_end":53,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":57045,"byte_end":57052,"line_start":54,"line_end":54,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":205},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":58175,"byte_end":58190,"line_start":96,"line_end":96,"column_start":8,"column_end":23},"name":"until_exclusive","qualname":"::helpers::until_exclusive","value":"pub fn until_exclusive<Reader, T, CondFn, Arg, Ret>(CondFn) -> /*impl Trait*/\nwhere T: BinRead<Args = Arg>, Reader: Read + Seek, CondFn: Fn(&T) -> bool,\nArg: Clone, Ret: core::iter::FromIterator<T>","parent":null,"children":[],"decl_id":null,"docs":" Read items until a condition is met. The last item will *not* be named.","sig":null,"attributes":[{"value":"/ Read items until a condition is met. The last item will *not* be named.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":57677,"byte_end":57752,"line_start":80,"line_end":80,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":57753,"byte_end":57756,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":57757,"byte_end":57771,"line_start":82,"line_end":82,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":57772,"byte_end":57775,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":57776,"byte_end":57783,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ # use binread::{BinRead, helpers::until_exclusive, io::Cursor, BinReaderExt};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":57784,"byte_end":57865,"line_start":85,"line_end":85,"column_start":1,"column_end":82}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":57866,"byte_end":57888,"line_start":86,"line_end":86,"column_start":1,"column_end":23}},{"value":"/ struct NullTerminated {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":57889,"byte_end":57916,"line_start":87,"line_end":87,"column_start":1,"column_end":28}},{"value":"/     #[br(parse_with = until_exclusive(|&byte| byte == 0))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":57917,"byte_end":57979,"line_start":88,"line_end":88,"column_start":1,"column_end":63}},{"value":"/     data: Vec<u8>,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":57980,"byte_end":58002,"line_start":89,"line_end":89,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":58003,"byte_end":58008,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":58009,"byte_end":58012,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # let mut x = Cursor::new(b\"\\x01\\x02\\x03\\x04\\0\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":58013,"byte_end":58066,"line_start":92,"line_end":92,"column_start":1,"column_end":54}},{"value":"/ # let x: NullTerminated = x.read_be().unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":58067,"byte_end":58118,"line_start":93,"line_end":93,"column_start":1,"column_end":52}},{"value":"/ # assert_eq!(x.data, &[1, 2, 3, 4]);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":58119,"byte_end":58159,"line_start":94,"line_end":94,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":58160,"byte_end":58167,"line_start":95,"line_end":95,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":213},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":59204,"byte_end":59213,"line_start":135,"line_end":135,"column_start":8,"column_end":17},"name":"until_eof","qualname":"::helpers::until_eof","value":"pub fn until_eof<R, T, Arg, Ret>(&mut R, &ReadOptions, Arg) -> BinResult<Ret>\nwhere T: BinRead<Args = Arg>, R: Read + Seek, Arg: Clone,\nRet: core::iter::FromIterator<T>","parent":null,"children":[],"decl_id":null,"docs":" Read items until the end of the file is hit.","sig":null,"attributes":[{"value":"/ Read items until the end of the file is hit.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":58774,"byte_end":58822,"line_start":119,"line_end":119,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":58823,"byte_end":58826,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":58827,"byte_end":58841,"line_start":121,"line_end":121,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":58842,"byte_end":58845,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":58846,"byte_end":58853,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/ # use binread::{BinRead, helpers::until_eof, io::Cursor, BinReaderExt};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":58854,"byte_end":58929,"line_start":124,"line_end":124,"column_start":1,"column_end":76}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":58930,"byte_end":58952,"line_start":125,"line_end":125,"column_start":1,"column_end":23}},{"value":"/ struct EntireFile {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":58953,"byte_end":58976,"line_start":126,"line_end":126,"column_start":1,"column_end":24}},{"value":"/     #[br(parse_with = until_eof)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":58977,"byte_end":59014,"line_start":127,"line_end":127,"column_start":1,"column_end":38}},{"value":"/     data: Vec<u8>,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":59015,"byte_end":59037,"line_start":128,"line_end":128,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":59038,"byte_end":59043,"line_start":129,"line_end":129,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":59044,"byte_end":59047,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # let mut x = Cursor::new(b\"\\x01\\x02\\x03\\x04\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":59048,"byte_end":59099,"line_start":131,"line_end":131,"column_start":1,"column_end":52}},{"value":"/ # let x: EntireFile = x.read_be().unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":59100,"byte_end":59147,"line_start":132,"line_end":132,"column_start":1,"column_end":48}},{"value":"/ # assert_eq!(x.data, &[1, 2, 3, 4]);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":59148,"byte_end":59188,"line_start":133,"line_end":133,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":59189,"byte_end":59196,"line_start":134,"line_end":134,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":218},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":60340,"byte_end":60345,"line_start":176,"line_end":176,"column_start":8,"column_end":13},"name":"count","qualname":"::helpers::count","value":"pub fn count<R, T, Arg, Ret>(usize) -> /*impl Trait*/ where T: BinRead<Args =\nArg>, R: Read + Seek, Arg: Clone, Ret: core::iter::FromIterator<T>","parent":null,"children":[],"decl_id":null,"docs":" A helper equivelant to `#[br(count = N)]` which can be used with any collection.","sig":null,"attributes":[{"value":"/ A helper equivelant to `#[br(count = N)]` which can be used with any collection.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":59850,"byte_end":59934,"line_start":158,"line_end":158,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":59935,"byte_end":59938,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":59939,"byte_end":59953,"line_start":160,"line_end":160,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":59954,"byte_end":59957,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":59958,"byte_end":59965,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ # use binread::{BinRead, helpers::count, io::Cursor, BinReaderExt};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":59966,"byte_end":60037,"line_start":163,"line_end":163,"column_start":1,"column_end":72}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":60038,"byte_end":60060,"line_start":164,"line_end":164,"column_start":1,"column_end":23}},{"value":"/ struct CountBytes {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":60061,"byte_end":60084,"line_start":165,"line_end":165,"column_start":1,"column_end":24}},{"value":"/     len: u8,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":60085,"byte_end":60101,"line_start":166,"line_end":166,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":60102,"byte_end":60105,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/     #[br(parse_with = count(len as usize))]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":60106,"byte_end":60153,"line_start":168,"line_end":168,"column_start":1,"column_end":48}},{"value":"/     data: Vec<u8>,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":60154,"byte_end":60176,"line_start":169,"line_end":169,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":60177,"byte_end":60182,"line_start":170,"line_end":170,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":60183,"byte_end":60186,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ # let mut x = Cursor::new(b\"\\x03\\x01\\x02\\x03\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":60187,"byte_end":60238,"line_start":172,"line_end":172,"column_start":1,"column_end":52}},{"value":"/ # let x: CountBytes = x.read_be().unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":60239,"byte_end":60286,"line_start":173,"line_end":173,"column_start":1,"column_end":48}},{"value":"/ # assert_eq!(x.data, &[1, 2, 3]);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":60287,"byte_end":60324,"line_start":174,"line_end":174,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/helpers.rs","byte_start":60325,"byte_end":60332,"line_start":175,"line_end":175,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":226},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":239},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":273}],"decl_id":null,"docs":" A swappable version of [std::io](std::io) that works in `no_std + alloc` environments.\n If the feature flag `std` is enabled (as it is by default), this will just re-export types from `std::io`.\n","sig":null,"attributes":[{"value":"/ A swappable version of [std::io](std::io) that works in `no_std + alloc` environments.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/mod.rs","byte_start":60684,"byte_end":60774,"line_start":1,"line_end":1,"column_start":1,"column_end":91}},{"value":"/ If the feature flag `std` is enabled (as it is by default), this will just re-export types from `std::io`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/mod.rs","byte_start":60775,"byte_end":60885,"line_start":2,"line_end":2,"column_start":1,"column_end":111}}]},{"kind":"Mod","id":{"krate":0,"index":227},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::io::error","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":659},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":235}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":228},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":61854,"byte_end":61859,"line_start":1,"line_end":1,"column_start":12,"column_end":17},"name":"Error","qualname":"::io::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":229}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":666},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62179,"byte_end":62187,"line_start":21,"line_end":21,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::io::error::ErrorKind::NotFound","value":"ErrorKind::NotFound","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":668},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62193,"byte_end":62209,"line_start":22,"line_end":22,"column_start":5,"column_end":21},"name":"PermissionDenied","qualname":"::io::error::ErrorKind::PermissionDenied","value":"ErrorKind::PermissionDenied","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":670},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62215,"byte_end":62232,"line_start":23,"line_end":23,"column_start":5,"column_end":22},"name":"ConnectionRefused","qualname":"::io::error::ErrorKind::ConnectionRefused","value":"ErrorKind::ConnectionRefused","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":672},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62238,"byte_end":62253,"line_start":24,"line_end":24,"column_start":5,"column_end":20},"name":"ConnectionReset","qualname":"::io::error::ErrorKind::ConnectionReset","value":"ErrorKind::ConnectionReset","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":674},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62259,"byte_end":62276,"line_start":25,"line_end":25,"column_start":5,"column_end":22},"name":"ConnectionAborted","qualname":"::io::error::ErrorKind::ConnectionAborted","value":"ErrorKind::ConnectionAborted","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":676},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62282,"byte_end":62294,"line_start":26,"line_end":26,"column_start":5,"column_end":17},"name":"NotConnected","qualname":"::io::error::ErrorKind::NotConnected","value":"ErrorKind::NotConnected","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":678},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62300,"byte_end":62309,"line_start":27,"line_end":27,"column_start":5,"column_end":14},"name":"AddrInUse","qualname":"::io::error::ErrorKind::AddrInUse","value":"ErrorKind::AddrInUse","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":680},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62315,"byte_end":62331,"line_start":28,"line_end":28,"column_start":5,"column_end":21},"name":"AddrNotAvailable","qualname":"::io::error::ErrorKind::AddrNotAvailable","value":"ErrorKind::AddrNotAvailable","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":682},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62337,"byte_end":62347,"line_start":29,"line_end":29,"column_start":5,"column_end":15},"name":"BrokenPipe","qualname":"::io::error::ErrorKind::BrokenPipe","value":"ErrorKind::BrokenPipe","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":684},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62353,"byte_end":62366,"line_start":30,"line_end":30,"column_start":5,"column_end":18},"name":"AlreadyExists","qualname":"::io::error::ErrorKind::AlreadyExists","value":"ErrorKind::AlreadyExists","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":686},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62372,"byte_end":62382,"line_start":31,"line_end":31,"column_start":5,"column_end":15},"name":"WouldBlock","qualname":"::io::error::ErrorKind::WouldBlock","value":"ErrorKind::WouldBlock","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":688},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62388,"byte_end":62400,"line_start":32,"line_end":32,"column_start":5,"column_end":17},"name":"InvalidInput","qualname":"::io::error::ErrorKind::InvalidInput","value":"ErrorKind::InvalidInput","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":690},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62406,"byte_end":62417,"line_start":33,"line_end":33,"column_start":5,"column_end":16},"name":"InvalidData","qualname":"::io::error::ErrorKind::InvalidData","value":"ErrorKind::InvalidData","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":692},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62423,"byte_end":62431,"line_start":34,"line_end":34,"column_start":5,"column_end":13},"name":"TimedOut","qualname":"::io::error::ErrorKind::TimedOut","value":"ErrorKind::TimedOut","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":694},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62437,"byte_end":62446,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"WriteZero","qualname":"::io::error::ErrorKind::WriteZero","value":"ErrorKind::WriteZero","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":696},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62452,"byte_end":62463,"line_start":36,"line_end":36,"column_start":5,"column_end":16},"name":"Interrupted","qualname":"::io::error::ErrorKind::Interrupted","value":"ErrorKind::Interrupted","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":698},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62469,"byte_end":62474,"line_start":37,"line_end":37,"column_start":5,"column_end":10},"name":"Other","qualname":"::io::error::ErrorKind::Other","value":"ErrorKind::Other","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":700},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62480,"byte_end":62493,"line_start":38,"line_end":38,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::io::error::ErrorKind::UnexpectedEof","value":"ErrorKind::UnexpectedEof","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":665},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62163,"byte_end":62172,"line_start":20,"line_end":20,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::io::error::ErrorKind","value":"pub enum ErrorKind {\n    NotFound,\n    PermissionDenied,\n    ConnectionRefused,\n    ConnectionReset,\n    ConnectionAborted,\n    NotConnected,\n    AddrInUse,\n    AddrNotAvailable,\n    BrokenPipe,\n    AlreadyExists,\n    WouldBlock,\n    InvalidInput,\n    InvalidData,\n    TimedOut,\n    WriteZero,\n    Interrupted,\n    Other,\n    UnexpectedEof,\n}","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":700}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62091,"byte_end":62108,"line_start":18,"line_end":18,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62522,"byte_end":62525,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"pub fn new<A>(ErrorKind, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62643,"byte_end":62647,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error>::kind","value":"pub fn kind(&Self) -> ErrorKind","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":239},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::io::prelude","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/prelude.rs","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":243}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":271},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/mod.rs","byte_start":61196,"byte_end":61210,"line_start":19,"line_end":19,"column_start":11,"column_end":25},"name":"StreamPosition","qualname":"::io::StreamPosition","value":"StreamPosition","parent":null,"children":[{"krate":0,"index":272}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/mod.rs","byte_start":61220,"byte_end":61230,"line_start":20,"line_end":20,"column_start":8,"column_end":18},"name":"stream_pos","qualname":"::io::StreamPosition::stream_pos","value":"pub fn stream_pos(&mut Self) -> Result<u64>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":275},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/options.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"options","qualname":"::options","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/options.rs","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":714},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":724}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":714},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/options.rs","byte_start":62953,"byte_end":62964,"line_start":6,"line_end":6,"column_start":12,"column_end":23},"name":"ReadOptions","qualname":"::options::ReadOptions","value":"ReadOptions { endian, count, offset, dont_output_to_template, variable_name }","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719}],"decl_id":null,"docs":" Runtime-configured options for reading the type using [`BinRead`](BinRead)\n","sig":null,"attributes":[{"value":"/ Runtime-configured options for reading the type using [`BinRead`](BinRead)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/options.rs","byte_start":62813,"byte_end":62891,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"non_exhaustive","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/options.rs","byte_start":62892,"byte_end":62909,"line_start":4,"line_end":4,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":715},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/options.rs","byte_start":62975,"byte_end":62981,"line_start":7,"line_end":7,"column_start":9,"column_end":15},"name":"endian","qualname":"::options::ReadOptions::endian","value":"endian::Endian","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":716},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/options.rs","byte_start":62999,"byte_end":63004,"line_start":8,"line_end":8,"column_start":9,"column_end":14},"name":"count","qualname":"::options::ReadOptions::count","value":"std::option::Option<usize>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":717},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/options.rs","byte_start":63029,"byte_end":63035,"line_start":9,"line_end":9,"column_start":9,"column_end":15},"name":"offset","qualname":"::options::ReadOptions::offset","value":"u64","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":718},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/options.rs","byte_start":63090,"byte_end":63113,"line_start":12,"line_end":12,"column_start":9,"column_end":32},"name":"dont_output_to_template","qualname":"::options::ReadOptions::dont_output_to_template","value":"bool","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"debug_template\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/options.rs","byte_start":63047,"byte_end":63081,"line_start":11,"line_end":11,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":719},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/options.rs","byte_start":63168,"byte_end":63181,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"name":"variable_name","qualname":"::options::ReadOptions::variable_name","value":"std::option::Option<&'static str>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"debug_template\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/options.rs","byte_start":63125,"byte_end":63159,"line_start":13,"line_end":13,"column_start":5,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":277},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pos_value","qualname":"::pos_value","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":286},{"krate":0,"index":293},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":303},{"krate":0,"index":306}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":282},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":63643,"byte_end":63651,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"PosValue","qualname":"::pos_value::PosValue","value":"PosValue { val, pos }","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285}],"decl_id":null,"docs":" A wrapper where the position it was read from is stored alongside the value\n ```rust\n use binread::{BinRead, PosValue, BinReaderExt, io::Cursor};","sig":null,"attributes":[{"value":"/ A wrapper where the position it was read from is stored alongside the value","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":63238,"byte_end":63317,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":63318,"byte_end":63329,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/ use binread::{BinRead, PosValue, BinReaderExt, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":63330,"byte_end":63393,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":63394,"byte_end":63397,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":63398,"byte_end":63420,"line_start":8,"line_end":8,"column_start":1,"column_end":23}},{"value":"/ struct MyType {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":63421,"byte_end":63440,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/     a: u16,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":63441,"byte_end":63456,"line_start":10,"line_end":10,"column_start":1,"column_end":16}},{"value":"/     b: PosValue<u8>","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":63457,"byte_end":63480,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":63481,"byte_end":63486,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":63487,"byte_end":63490,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let val = Cursor::new(b\"\\xFF\\xFE\\xFD\").read_be::<MyType>().unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":63491,"byte_end":63563,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(val.b.pos, 2);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":63564,"byte_end":63593,"line_start":15,"line_end":15,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(*val.b, 0xFD);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":63594,"byte_end":63623,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":63624,"byte_end":63631,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":284},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":63665,"byte_end":63668,"line_start":19,"line_end":19,"column_start":9,"column_end":12},"name":"val","qualname":"::pos_value::PosValue::val","value":"T","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":285},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":63681,"byte_end":63684,"line_start":20,"line_end":20,"column_start":9,"column_end":12},"name":"pos","qualname":"::pos_value::PosValue::pos","value":"u64","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":310},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"punctuated","qualname":"::punctuated","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":336},{"krate":0,"index":344},{"krate":0,"index":348},{"krate":0,"index":353}],"decl_id":null,"docs":" A module for [`Punctuated<T, P>`](Punctuated), a series of items to parse of type T separated\n by punction of type `P`.\n","sig":null,"attributes":[{"value":"/ A module for [`Punctuated<T, P>`](Punctuated), a series of items to parse of type T separated","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":65669,"byte_end":65766,"line_start":1,"line_end":1,"column_start":1,"column_end":98}},{"value":"/ by punction of type `P`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":65767,"byte_end":65795,"line_start":2,"line_end":2,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":331},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66563,"byte_end":66573,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"Punctuated","qualname":"::punctuated::Punctuated","value":"Punctuated { seperators }","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335}],"decl_id":null,"docs":" A type for seperated data. Since parsing for this type is ambiguous, you must manually specify\n a parser using the `parse_with` attribute.","sig":null,"attributes":[{"value":"/ A type for seperated data. Since parsing for this type is ambiguous, you must manually specify","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":65938,"byte_end":66036,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"/ a parser using the `parse_with` attribute.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66037,"byte_end":66083,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66084,"byte_end":66087,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66088,"byte_end":66102,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66103,"byte_end":66106,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66107,"byte_end":66118,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ # use binread::{*, io::*};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66119,"byte_end":66149,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/ use binread::punctuated::Punctuated;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66150,"byte_end":66190,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66191,"byte_end":66194,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66195,"byte_end":66217,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/ struct MyList {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66218,"byte_end":66237,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/     #[br(parse_with = Punctuated::separated)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66238,"byte_end":66287,"line_start":21,"line_end":21,"column_start":1,"column_end":50}},{"value":"/     #[br(count = 3)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66288,"byte_end":66312,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"/     x: Punctuated<u16, u8>,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66313,"byte_end":66344,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66345,"byte_end":66350,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66351,"byte_end":66354,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # let mut x = Cursor::new(b\"\\0\\x03\\0\\0\\x02\\x01\\0\\x01\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66355,"byte_end":66414,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/ # let y: MyList = x.read_be().unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66415,"byte_end":66458,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/ # assert_eq!(*y.x, vec![3, 2, 1]);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66459,"byte_end":66497,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/ # assert_eq!(y.x.seperators, vec![0, 1]);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66498,"byte_end":66543,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66544,"byte_end":66551,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":335},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66626,"byte_end":66636,"line_start":33,"line_end":33,"column_start":9,"column_end":19},"name":"seperators","qualname":"::punctuated::Punctuated::seperators","value":"std::vec::Vec<P>","parent":{"krate":0,"index":331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":67422,"byte_end":67431,"line_start":59,"line_end":59,"column_start":12,"column_end":21},"name":"separated","qualname":"<Punctuated<T, P>>::separated","value":"pub fn separated<R: Read + Seek>(&mut R, &ReadOptions, C) -> BinResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" A parser for values seperated by another value, with no trailing punctuation.","sig":null,"attributes":[{"value":"/ A parser for values seperated by another value, with no trailing punctuation.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66741,"byte_end":66822,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66827,"byte_end":66830,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Requires a specified count.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66835,"byte_end":66866,"line_start":39,"line_end":39,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66871,"byte_end":66874,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66879,"byte_end":66893,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66898,"byte_end":66901,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66906,"byte_end":66917,"line_start":43,"line_end":43,"column_start":5,"column_end":16}},{"value":"/ # use binread::{*, io::*};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66922,"byte_end":66952,"line_start":44,"line_end":44,"column_start":5,"column_end":35}},{"value":"/ use binread::punctuated::Punctuated;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66957,"byte_end":66997,"line_start":45,"line_end":45,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":67002,"byte_end":67005,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ #[derive(BinRead)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":67010,"byte_end":67032,"line_start":47,"line_end":47,"column_start":5,"column_end":27}},{"value":"/ struct MyList {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":67037,"byte_end":67056,"line_start":48,"line_end":48,"column_start":5,"column_end":24}},{"value":"/     #[br(parse_with = Punctuated::separated)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":67061,"byte_end":67110,"line_start":49,"line_end":49,"column_start":5,"column_end":54}},{"value":"/     #[br(count = 3)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":67115,"byte_end":67139,"line_start":50,"line_end":50,"column_start":5,"column_end":29}},{"value":"/     x: Punctuated<u16, u8>,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":67144,"byte_end":67175,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":67180,"byte_end":67185,"line_start":52,"line_end":52,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":67190,"byte_end":67193,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # let mut x = Cursor::new(b\"\\0\\x03\\0\\0\\x02\\x01\\0\\x01\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":67198,"byte_end":67257,"line_start":54,"line_end":54,"column_start":5,"column_end":64}},{"value":"/ # let y: MyList = x.read_be().unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":67262,"byte_end":67305,"line_start":55,"line_end":55,"column_start":5,"column_end":48}},{"value":"/ # assert_eq!(*y.x, vec![3, 2, 1]);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":67310,"byte_end":67348,"line_start":56,"line_end":56,"column_start":5,"column_end":43}},{"value":"/ # assert_eq!(y.x.seperators, vec![0, 1]);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":67353,"byte_end":67398,"line_start":57,"line_end":57,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":67403,"byte_end":67410,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":68211,"byte_end":68229,"line_start":85,"line_end":85,"column_start":12,"column_end":30},"name":"separated_trailing","qualname":"<Punctuated<T, P>>::separated_trailing","value":"pub fn separated_trailing<R: Read + Seek>(&mut R, &ReadOptions, C)\n-> BinResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" A parser for values seperated by another value, with trailing punctuation.","sig":null,"attributes":[{"value":"/ A parser for values seperated by another value, with trailing punctuation.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":68077,"byte_end":68155,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":68160,"byte_end":68163,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Requires a specified count.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":68168,"byte_end":68199,"line_start":84,"line_end":84,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":357},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"strings","qualname":"::strings","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":745},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":393},{"krate":0,"index":398},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":418}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":725},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72725,"byte_end":72735,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"NullString","qualname":"::strings::NullString","value":"","parent":null,"children":[],"decl_id":null,"docs":" A null terminated UTF-8 string designed to make reading any null-terminated data easier.","sig":null,"attributes":[{"value":"/ A null terminated UTF-8 string designed to make reading any null-terminated data easier.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":71987,"byte_end":72079,"line_start":31,"line_end":31,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72080,"byte_end":72083,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ **Note:** Result does not include the null, but the null is consumed from the Reader.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72084,"byte_end":72173,"line_start":33,"line_end":33,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72174,"byte_end":72177,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72178,"byte_end":72189,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/ use binread::{BinRead, BinReaderExt, NullString, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72190,"byte_end":72255,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72256,"byte_end":72259,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut null_separated_strings = Cursor::new(b\"null terminated strings? in my system's language?\\0no thanks\\0\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72260,"byte_end":72376,"line_start":38,"line_end":38,"column_start":1,"column_end":117}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72377,"byte_end":72380,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72381,"byte_end":72396,"line_start":40,"line_end":40,"column_start":1,"column_end":16}},{"value":"/     null_separated_strings.read_be::<NullString>().unwrap().into_string(),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72397,"byte_end":72475,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/     \"null terminated strings? in my system's language?\"","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72476,"byte_end":72535,"line_start":42,"line_end":42,"column_start":1,"column_end":60}},{"value":"/ );","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72536,"byte_end":72542,"line_start":43,"line_end":43,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72543,"byte_end":72546,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72547,"byte_end":72562,"line_start":45,"line_end":45,"column_start":1,"column_end":16}},{"value":"/     null_separated_strings.read_be::<NullString>().unwrap().into_string(),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72563,"byte_end":72641,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/     \"no thanks\"","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72642,"byte_end":72661,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/ );","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72662,"byte_end":72668,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72669,"byte_end":72676,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":727},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72736,"byte_end":72747,"line_start":51,"line_end":51,"column_start":23,"column_end":34},"name":"0","qualname":"::strings::NullString::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":736},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73789,"byte_end":73803,"line_start":81,"line_end":81,"column_start":12,"column_end":26},"name":"NullWideString","qualname":"::strings::NullWideString","value":"","parent":null,"children":[],"decl_id":null,"docs":" A null terminated UTF-16 string designed to make reading any 16 bit wide null-terminated data easier.","sig":null,"attributes":[{"value":"/ A null terminated UTF-16 string designed to make reading any 16 bit wide null-terminated data easier.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72751,"byte_end":72856,"line_start":53,"line_end":53,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72857,"byte_end":72860,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ **Note:** Does not include the null.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72861,"byte_end":72901,"line_start":55,"line_end":55,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72902,"byte_end":72905,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ **Note:** This is endian dependent on a per-character basis. Will read `u16`s until a `0u16` is found.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":72906,"byte_end":73012,"line_start":57,"line_end":57,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73013,"byte_end":73016,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73017,"byte_end":73028,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ use binread::{BinRead, BinReaderExt, NullWideString, io::Cursor};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73029,"byte_end":73098,"line_start":60,"line_end":60,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73099,"byte_end":73102,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ const WIDE_STRINGS: &[u8] = b\"w\\0i\\0d\\0e\\0 \\0s\\0t\\0r\\0i\\0n\\0g\\0s\\0\\0\\0\";","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73103,"byte_end":73179,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/ const ARE_ENDIAN_DEPENDENT: &[u8] = b\"\\0a\\0r\\0e\\0 \\0e\\0n\\0d\\0i\\0a\\0n\\0 \\0d\\0e\\0p\\0e\\0n\\0d\\0e\\0n\\0t\\0\\0\";","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73180,"byte_end":73288,"line_start":63,"line_end":63,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73289,"byte_end":73292,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let mut wide_strings = Cursor::new(WIDE_STRINGS);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73293,"byte_end":73346,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ let mut are_endian_dependent = Cursor::new(ARE_ENDIAN_DEPENDENT);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73347,"byte_end":73416,"line_start":66,"line_end":66,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73417,"byte_end":73420,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73421,"byte_end":73436,"line_start":68,"line_end":68,"column_start":1,"column_end":16}},{"value":"/     // notice: read_le","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73437,"byte_end":73463,"line_start":69,"line_end":69,"column_start":1,"column_end":27}},{"value":"/     wide_strings.read_le::<NullWideString>().unwrap().into_string(),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73464,"byte_end":73536,"line_start":70,"line_end":70,"column_start":1,"column_end":73}},{"value":"/     \"wide strings\"","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73537,"byte_end":73559,"line_start":71,"line_end":71,"column_start":1,"column_end":23}},{"value":"/ );","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73560,"byte_end":73566,"line_start":72,"line_end":72,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73567,"byte_end":73570,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73571,"byte_end":73586,"line_start":74,"line_end":74,"column_start":1,"column_end":16}},{"value":"/     // notice: read_be","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73587,"byte_end":73613,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/     are_endian_dependent.read_be::<NullWideString>().unwrap().into_string(),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73614,"byte_end":73694,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/     \"are endian dependent\"","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73695,"byte_end":73725,"line_start":77,"line_end":77,"column_start":1,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73726,"byte_end":73732,"line_start":78,"line_end":78,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73733,"byte_end":73740,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":738},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73804,"byte_end":73816,"line_start":81,"line_end":81,"column_start":27,"column_end":39},"name":"0","qualname":"::strings::NullWideString::0","value":"std::vec::Vec<u16>","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73849,"byte_end":73860,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"into_string","qualname":"<NullString>::into_string","value":"pub fn into_string(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73945,"byte_end":73965,"line_start":88,"line_end":88,"column_start":12,"column_end":32},"name":"into_string_lossless","qualname":"<NullString>::into_string_lossless","value":"pub fn into_string_lossless(Self)\n-> Result<String, alloc::string::FromUtf8Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":74098,"byte_end":74109,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"into_string","qualname":"<NullWideString>::into_string","value":"pub fn into_string(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":74188,"byte_end":74208,"line_start":98,"line_end":98,"column_start":12,"column_end":32},"name":"into_string_lossless","qualname":"<NullWideString>::into_string_lossless","value":"pub fn into_string_lossless(Self)\n-> Result<String, alloc::string::FromUtf16Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":420},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binary_template.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binary_template","qualname":"::binary_template","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binary_template.rs","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":757},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4495,"byte_end":4518,"line_start":150,"line_end":150,"column_start":1,"column_end":24}},{"value":"cfg(feature = \"debug_template\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4519,"byte_end":4553,"line_start":151,"line_end":151,"column_start":1,"column_end":35}},{"value":"allow(unused_must_use)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binary_template.rs","byte_start":79756,"byte_end":79782,"line_start":1,"line_end":1,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":446},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binary_template.rs","byte_start":81630,"byte_end":81645,"line_start":55,"line_end":55,"column_start":8,"column_end":23},"name":"set_output_file","qualname":"::binary_template::set_output_file","value":"pub fn set_output_file<P: AsRef<Path>>(P) -> std::io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":448},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binary_template.rs","byte_start":81772,"byte_end":81782,"line_start":60,"line_end":60,"column_start":8,"column_end":18},"name":"set_output","qualname":"::binary_template::set_output","value":"pub fn set_output<W: Write + Send + 'static>(W)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":450},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binary_template.rs","byte_start":81924,"byte_end":81936,"line_start":65,"line_end":65,"column_start":8,"column_end":20},"name":"unset_output","qualname":"::binary_template::unset_output","value":"pub fn unset_output()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":451},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binary_template.rs","byte_start":81985,"byte_end":81996,"line_start":69,"line_end":69,"column_start":8,"column_end":19},"name":"write_named","qualname":"::binary_template::write_named","value":"pub fn write_named(Endian, u64, &str, &str)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":452},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binary_template.rs","byte_start":82614,"byte_end":82631,"line_start":92,"line_end":92,"column_start":8,"column_end":25},"name":"get_next_var_name","qualname":"::binary_template::get_next_var_name","value":"pub fn get_next_var_name() -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":453},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binary_template.rs","byte_start":82752,"byte_end":82766,"line_start":97,"line_end":97,"column_start":8,"column_end":22},"name":"get_next_color","qualname":"::binary_template::get_next_color","value":"pub fn get_next_color() -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":454},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binary_template.rs","byte_start":82898,"byte_end":82916,"line_start":102,"line_end":102,"column_start":8,"column_end":26},"name":"write_start_struct","qualname":"::binary_template::write_start_struct","value":"pub fn write_start_struct(&str)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":455},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binary_template.rs","byte_start":83208,"byte_end":83221,"line_start":117,"line_end":117,"column_start":8,"column_end":21},"name":"write_comment","qualname":"::binary_template::write_comment","value":"pub fn write_comment(&str)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":456},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binary_template.rs","byte_start":83420,"byte_end":83436,"line_start":127,"line_end":127,"column_start":8,"column_end":24},"name":"write_end_struct","qualname":"::binary_template::write_end_struct","value":"pub fn write_end_struct(Option<&str>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":457},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binary_template.rs","byte_start":83686,"byte_end":83691,"line_start":139,"line_end":139,"column_start":8,"column_end":13},"name":"write","qualname":"::binary_template::write","value":"pub fn write(Endian, u64, &str)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":458},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binary_template.rs","byte_start":83840,"byte_end":83855,"line_start":145,"line_end":145,"column_start":8,"column_end":23},"name":"write_vec_named","qualname":"::binary_template::write_vec_named","value":"pub fn write_vec_named(Endian, u64, &str, usize, &str)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":459},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binary_template.rs","byte_start":84490,"byte_end":84499,"line_start":168,"line_end":168,"column_start":8,"column_end":17},"name":"write_vec","qualname":"::binary_template::write_vec","value":"pub fn write_vec(Endian, u64, &str, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":579},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":5276,"byte_end":5285,"line_start":179,"line_end":179,"column_start":10,"column_end":19},"name":"BinResult","qualname":"::BinResult","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A Result for any binread function that can return an error\n","sig":null,"attributes":[{"value":"/ A Result for any binread function that can return an error","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":5204,"byte_end":5266,"line_start":178,"line_end":178,"column_start":1,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":581},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":5537,"byte_end":5544,"line_start":183,"line_end":183,"column_start":11,"column_end":18},"name":"BinRead","qualname":"::BinRead","value":"BinRead: Sized","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":591}],"decl_id":null,"docs":" A `BinRead` trait allows reading a structure from anything that implements [`io::Read`](io::Read) and [`io::Seek`](io::Seek)\n BinRead is implemented on the type to be read out of the given reader\n","sig":null,"attributes":[{"value":"/ A `BinRead` trait allows reading a structure from anything that implements [`io::Read`](io::Read) and [`io::Seek`](io::Seek)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":5324,"byte_end":5452,"line_start":181,"line_end":181,"column_start":1,"column_end":129}},{"value":"/ BinRead is implemented on the type to be read out of the given reader","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":5453,"byte_end":5526,"line_start":182,"line_end":182,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":582},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":5808,"byte_end":5812,"line_start":187,"line_end":187,"column_start":10,"column_end":14},"name":"Args","qualname":"::BinRead::Args","value":"type Args: Any + Copy;","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" The type of arguments needed to be supplied in order to read this type, usually a tuple.","sig":null,"attributes":[{"value":"/ The type of arguments needed to be supplied in order to read this type, usually a tuple.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":5558,"byte_end":5650,"line_start":184,"line_end":184,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":5655,"byte_end":5658,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** For types that don't require any arguments, use the unit (`()`) type. This will allow [`read`](BinRead::read) to be used.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":5663,"byte_end":5798,"line_start":186,"line_end":186,"column_start":5,"column_end":140}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":6027,"byte_end":6031,"line_start":193,"line_end":193,"column_start":8,"column_end":12},"name":"read","qualname":"::BinRead::read","value":"pub fn read<R: Read + Seek>(&mut R) -> BinResult<Self>","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" Read the type from the reader while assuming no arguments have been passed","sig":null,"attributes":[{"value":"/ Read the type from the reader while assuming no arguments have been passed","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":5831,"byte_end":5909,"line_start":189,"line_end":189,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":5914,"byte_end":5917,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":5922,"byte_end":5934,"line_start":191,"line_end":191,"column_start":5,"column_end":17}},{"value":"/ Panics if there is no [`args_default`](BinRead::args_default) implementation","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":5939,"byte_end":6019,"line_start":192,"line_end":192,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":6400,"byte_end":6409,"line_start":203,"line_end":203,"column_start":8,"column_end":17},"name":"read_args","qualname":"::BinRead::read_args","value":"pub fn read_args<R: Read + Seek>(&mut R, Self::Args) -> BinResult<Self>","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" Read the type from the reader using the specified arguments\n","sig":null,"attributes":[{"value":"/ Read the type from the reader using the specified arguments","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":6329,"byte_end":6392,"line_start":202,"line_end":202,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":6599,"byte_end":6611,"line_start":208,"line_end":208,"column_start":8,"column_end":20},"name":"read_options","qualname":"::BinRead::read_options","value":"pub fn read_options<R: Read + Seek>(&mut R, &ReadOptions, Self::Args)\n-> BinResult<Self>","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" Read the type from the reader\n","sig":null,"attributes":[{"value":"/ Read the type from the reader","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":6558,"byte_end":6591,"line_start":207,"line_end":207,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":6744,"byte_end":6755,"line_start":214,"line_end":214,"column_start":8,"column_end":19},"name":"after_parse","qualname":"::BinRead::after_parse","value":"pub fn after_parse<R: Read +\n                   Seek>(&mut Self, &mut R, &ReadOptions, Self::Args)\n-> BinResult<()>","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":7080,"byte_end":7092,"line_start":225,"line_end":225,"column_start":8,"column_end":20},"name":"args_default","qualname":"::BinRead::args_default","value":"pub fn args_default() -> Option<Self::Args>","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" The default arguments to be used when using the [`read`](BinRead::read) shortcut method.\n Override this for any type that optionally requries arguments\n","sig":null,"attributes":[{"value":"/ The default arguments to be used when using the [`read`](BinRead::read) shortcut method.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":6910,"byte_end":7002,"line_start":223,"line_end":223,"column_start":5,"column_end":97}},{"value":"/ Override this for any type that optionally requries arguments","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":7007,"byte_end":7072,"line_start":224,"line_end":224,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":592},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":7999,"byte_end":8011,"line_start":251,"line_end":251,"column_start":11,"column_end":23},"name":"BinReaderExt","qualname":"::BinReaderExt","value":"BinReaderExt: Read + Seek + Sized","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":607}],"decl_id":null,"docs":" An extension trait for [`io::Read`](io::Read) to provide methods for reading a value directly","sig":null,"attributes":[{"value":"/ An extension trait for [`io::Read`](io::Read) to provide methods for reading a value directly","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":7476,"byte_end":7573,"line_start":236,"line_end":236,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":7574,"byte_end":7577,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":7578,"byte_end":7592,"line_start":238,"line_end":238,"column_start":1,"column_end":15}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":7593,"byte_end":7604,"line_start":239,"line_end":239,"column_start":1,"column_end":12}},{"value":"/ use binread::prelude::*; // BinReadExt is in the prelude","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":7605,"byte_end":7665,"line_start":240,"line_end":240,"column_start":1,"column_end":61}},{"value":"/ use binread::endian::LE;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":7666,"byte_end":7694,"line_start":241,"line_end":241,"column_start":1,"column_end":29}},{"value":"/ use binread::io::Cursor;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":7695,"byte_end":7723,"line_start":242,"line_end":242,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":7724,"byte_end":7727,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ let mut reader = Cursor::new(b\"\\x07\\0\\0\\0\\xCC\\0\\0\\x05\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":7728,"byte_end":7788,"line_start":244,"line_end":244,"column_start":1,"column_end":61}},{"value":"/ let x: u32 = reader.read_le().unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":7789,"byte_end":7832,"line_start":245,"line_end":245,"column_start":1,"column_end":44}},{"value":"/ let y: u16 = reader.read_type(LE).unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":7833,"byte_end":7880,"line_start":246,"line_end":246,"column_start":1,"column_end":48}},{"value":"/ let z = reader.read_be::<u16>().unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":7881,"byte_end":7926,"line_start":247,"line_end":247,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":7927,"byte_end":7930,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ assert_eq!((x, y, z), (7u32, 0xCCu16, 5u16));","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":7931,"byte_end":7980,"line_start":249,"line_end":249,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":7981,"byte_end":7988,"line_start":250,"line_end":250,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":8114,"byte_end":8123,"line_start":253,"line_end":253,"column_start":8,"column_end":17},"name":"read_type","qualname":"::BinReaderExt::read_type","value":"pub fn read_type<T: BinRead>(&mut Self, Endian) -> BinResult<T>","parent":{"krate":0,"index":592},"children":[],"decl_id":null,"docs":" Read the given type from the reader using the given endianness.\n","sig":null,"attributes":[{"value":"/ Read the given type from the reader using the given endianness.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":8039,"byte_end":8106,"line_start":252,"line_end":252,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":8657,"byte_end":8664,"line_start":271,"line_end":271,"column_start":8,"column_end":15},"name":"read_be","qualname":"::BinReaderExt::read_be","value":"pub fn read_be<T: BinRead>(&mut Self) -> BinResult<T>","parent":{"krate":0,"index":592},"children":[],"decl_id":null,"docs":" Read the given type from the reader with big endian byteorder\n","sig":null,"attributes":[{"value":"/ Read the given type from the reader with big endian byteorder","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":8584,"byte_end":8649,"line_start":270,"line_end":270,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":8829,"byte_end":8836,"line_start":276,"line_end":276,"column_start":8,"column_end":15},"name":"read_le","qualname":"::BinReaderExt::read_le","value":"pub fn read_le<T: BinRead>(&mut Self) -> BinResult<T>","parent":{"krate":0,"index":592},"children":[],"decl_id":null,"docs":" Read the given type from the reader with little endian byteorder\n","sig":null,"attributes":[{"value":"/ Read the given type from the reader with little endian byteorder","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":8753,"byte_end":8821,"line_start":275,"line_end":275,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":9001,"byte_end":9008,"line_start":281,"line_end":281,"column_start":8,"column_end":15},"name":"read_ne","qualname":"::BinReaderExt::read_ne","value":"pub fn read_ne<T: BinRead>(&mut Self) -> BinResult<T>","parent":{"krate":0,"index":592},"children":[],"decl_id":null,"docs":" Read the given type from the reader with the native byteorder\n","sig":null,"attributes":[{"value":"/ Read the given type from the reader with the native byteorder","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":8928,"byte_end":8993,"line_start":280,"line_end":280,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":9177,"byte_end":9191,"line_start":286,"line_end":286,"column_start":8,"column_end":22},"name":"read_type_args","qualname":"::BinReaderExt::read_type_args","value":"pub fn read_type_args<T: BinRead>(&mut Self, Endian, T::Args) -> BinResult<T>","parent":{"krate":0,"index":592},"children":[],"decl_id":null,"docs":" Read `T` from the reader with the given byte order and arguments.\n","sig":null,"attributes":[{"value":"/ Read `T` from the reader with the given byte order and arguments.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":9100,"byte_end":9169,"line_start":285,"line_end":285,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":9615,"byte_end":9627,"line_start":300,"line_end":300,"column_start":8,"column_end":20},"name":"read_be_args","qualname":"::BinReaderExt::read_be_args","value":"pub fn read_be_args<T: BinRead>(&mut Self, T::Args) -> BinResult<T>","parent":{"krate":0,"index":592},"children":[],"decl_id":null,"docs":" Read `T` from the reader, assuming big-endian byte order, using the\n given arguments.\n","sig":null,"attributes":[{"value":"/ Read `T` from the reader, assuming big-endian byte order, using the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":9511,"byte_end":9582,"line_start":298,"line_end":298,"column_start":5,"column_end":76}},{"value":"/ given arguments.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":9587,"byte_end":9607,"line_start":299,"line_end":299,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":9849,"byte_end":9861,"line_start":306,"line_end":306,"column_start":8,"column_end":20},"name":"read_le_args","qualname":"::BinReaderExt::read_le_args","value":"pub fn read_le_args<T: BinRead>(&mut Self, T::Args) -> BinResult<T>","parent":{"krate":0,"index":592},"children":[],"decl_id":null,"docs":" Read `T` from the reader, assuming little-endian byte order, using the\n given arguments.\n","sig":null,"attributes":[{"value":"/ Read `T` from the reader, assuming little-endian byte order, using the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":9742,"byte_end":9816,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/ given arguments.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":9821,"byte_end":9841,"line_start":305,"line_end":305,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":10086,"byte_end":10098,"line_start":312,"line_end":312,"column_start":8,"column_end":20},"name":"read_ne_args","qualname":"::BinReaderExt::read_ne_args","value":"pub fn read_ne_args<T: BinRead>(&mut Self, T::Args) -> BinResult<T>","parent":{"krate":0,"index":592},"children":[],"decl_id":null,"docs":" Read `T` from the reader, assuming native-endian byte order, using the\n given arguments.\n","sig":null,"attributes":[{"value":"/ Read `T` from the reader, assuming native-endian byte order, using the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":9979,"byte_end":10053,"line_start":310,"line_end":310,"column_start":5,"column_end":79}},{"value":"/ given arguments.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":10058,"byte_end":10078,"line_start":311,"line_end":311,"column_start":5,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":611},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":10404,"byte_end":10411,"line_start":321,"line_end":321,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":618}],"decl_id":null,"docs":" The collection of traits and types you'll likely need when working with binread and are\n unlikely to cause name conflicts.\n","sig":null,"attributes":[{"value":"/ The collection of traits and types you'll likely need when working with binread and are","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":10266,"byte_end":10357,"line_start":319,"line_end":319,"column_start":1,"column_end":92}},{"value":"/ unlikely to cause name conflicts.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":10358,"byte_end":10395,"line_start":320,"line_end":320,"column_start":1,"column_end":38}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/endian.rs","byte_start":43733,"byte_end":43739,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/endian.rs","byte_start":43970,"byte_end":43976,"line_start":26,"line_end":26,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":45487,"byte_end":45492,"line_start":31,"line_end":31,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":45870,"byte_end":45875,"line_start":43,"line_end":43,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":45998,"byte_end":46003,"line_start":50,"line_end":50,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":46044,"byte_end":46049,"line_start":54,"line_end":54,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":46905,"byte_end":46910,"line_start":76,"line_end":76,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":51197,"byte_end":51204,"line_start":75,"line_end":75,"column_start":71,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":52786,"byte_end":52793,"line_start":130,"line_end":130,"column_start":59,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":54327,"byte_end":54334,"line_start":176,"line_end":176,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":54796,"byte_end":54803,"line_start":191,"line_end":191,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":55104,"byte_end":55111,"line_start":202,"line_end":202,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":55471,"byte_end":55478,"line_start":216,"line_end":216,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":61917,"byte_end":61922,"line_start":7,"line_end":7,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62503,"byte_end":62508,"line_start":41,"line_end":41,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/mod.rs","byte_start":61294,"byte_end":61295,"line_start":23,"line_end":23,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":63723,"byte_end":63731,"line_start":23,"line_end":23,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":64312,"byte_end":64320,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":64435,"byte_end":64443,"line_start":57,"line_end":57,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":64555,"byte_end":64563,"line_start":63,"line_end":63,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":64690,"byte_end":64698,"line_start":69,"line_end":69,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":64872,"byte_end":64880,"line_start":78,"line_end":78,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66718,"byte_end":66728,"line_start":36,"line_end":36,"column_start":70,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":68869,"byte_end":68879,"line_start":107,"line_end":107,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":69035,"byte_end":69045,"line_start":113,"line_end":113,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":69201,"byte_end":69211,"line_start":121,"line_end":121,"column_start":54,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":71613,"byte_end":71616,"line_start":15,"line_end":15,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73825,"byte_end":73835,"line_start":83,"line_end":83,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":74070,"byte_end":74084,"line_start":93,"line_end":93,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":74342,"byte_end":74356,"line_start":103,"line_end":103,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":74515,"byte_end":74525,"line_start":109,"line_end":109,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":74669,"byte_end":74672,"line_start":115,"line_end":115,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":74768,"byte_end":74771,"line_start":121,"line_end":121,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":74853,"byte_end":74856,"line_start":127,"line_end":127,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":75327,"byte_end":75341,"line_start":147,"line_end":147,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":76385,"byte_end":76395,"line_start":181,"line_end":181,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":77328,"byte_end":77338,"line_start":214,"line_end":214,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":77499,"byte_end":77513,"line_start":220,"line_end":220,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":77684,"byte_end":77694,"line_start":226,"line_end":226,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":77815,"byte_end":77829,"line_start":234,"line_end":234,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":77943,"byte_end":77953,"line_start":242,"line_end":242,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":78076,"byte_end":78090,"line_start":248,"line_end":248,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binread_impls.rs","byte_start":87444,"byte_end":87447,"line_start":76,"line_end":76,"column_start":59,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binread_impls.rs","byte_start":93944,"byte_end":93947,"line_start":282,"line_end":282,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binread_impls.rs","byte_start":94224,"byte_end":94230,"line_start":294,"line_end":294,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binread_impls.rs","byte_start":94815,"byte_end":94826,"line_start":321,"line_end":321,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":10260,"byte_end":10261,"line_start":317,"line_end":317,"column_start":47,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4267,"byte_end":4276,"line_start":134,"line_end":134,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4287,"byte_end":4296,"line_start":136,"line_end":136,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":45}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4306,"byte_end":4312,"line_start":137,"line_end":137,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":49}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4322,"byte_end":4327,"line_start":138,"line_end":138,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":64}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4337,"byte_end":4345,"line_start":139,"line_end":139,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":110}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4355,"byte_end":4362,"line_start":140,"line_end":140,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":171}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4372,"byte_end":4374,"line_start":141,"line_end":141,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":226}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/mod.rs","byte_start":60895,"byte_end":60900,"line_start":4,"line_end":4,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":227}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/mod.rs","byte_start":60910,"byte_end":60917,"line_start":5,"line_end":5,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":239}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4399,"byte_end":4406,"line_start":143,"line_end":143,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":275}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4431,"byte_end":4440,"line_start":145,"line_end":145,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":277}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4450,"byte_end":4460,"line_start":146,"line_end":146,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":310}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4485,"byte_end":4492,"line_start":148,"line_end":148,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":357}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":4562,"byte_end":4577,"line_start":152,"line_end":152,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":420}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/endian.rs","byte_start":43733,"byte_end":43739,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":7547},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/endian.rs","byte_start":43970,"byte_end":43976,"line_start":26,"line_end":26,"column_start":18,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":621},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":45487,"byte_end":45492,"line_start":31,"line_end":31,"column_start":6,"column_end":11},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":45870,"byte_end":45875,"line_start":43,"line_end":43,"column_start":26,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":45998,"byte_end":46003,"line_start":50,"line_end":50,"column_start":28,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":66},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":46044,"byte_end":46049,"line_start":54,"line_end":54,"column_start":21,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/error.rs","byte_start":46905,"byte_end":46910,"line_start":76,"line_end":76,"column_start":23,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":51197,"byte_end":51204,"line_start":75,"line_end":75,"column_start":71,"column_end":78},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":122},"to":{"krate":0,"index":581}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":52786,"byte_end":52793,"line_start":130,"line_end":130,"column_start":59,"column_end":66},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":53772,"byte_end":53776,"line_start":156,"line_end":156,"column_start":25,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":2999},"to":{"krate":0,"index":151}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":54327,"byte_end":54334,"line_start":176,"line_end":176,"column_start":48,"column_end":55},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":54796,"byte_end":54803,"line_start":191,"line_end":191,"column_start":51,"column_end":58},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":55104,"byte_end":55111,"line_start":202,"line_end":202,"column_start":30,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/file_ptr.rs","byte_start":55471,"byte_end":55478,"line_start":216,"line_end":216,"column_start":47,"column_end":54},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":61917,"byte_end":61922,"line_start":7,"line_end":7,"column_start":21,"column_end":26},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":228},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/error.rs","byte_start":62503,"byte_end":62508,"line_start":41,"line_end":41,"column_start":6,"column_end":11},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/io/mod.rs","byte_start":61294,"byte_end":61295,"line_start":23,"line_end":23,"column_start":34,"column_end":35},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":274},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":63723,"byte_end":63731,"line_start":23,"line_end":23,"column_start":30,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":282},"to":{"krate":0,"index":581}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":64312,"byte_end":64320,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":64435,"byte_end":64443,"line_start":57,"line_end":57,"column_start":33,"column_end":41},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":64555,"byte_end":64563,"line_start":63,"line_end":63,"column_start":36,"column_end":44},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":64690,"byte_end":64698,"line_start":69,"line_end":69,"column_start":26,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/pos_value.rs","byte_start":64872,"byte_end":64880,"line_start":78,"line_end":78,"column_start":43,"column_end":51},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":66718,"byte_end":66728,"line_start":36,"line_end":36,"column_start":70,"column_end":80},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":68869,"byte_end":68879,"line_start":107,"line_end":107,"column_start":58,"column_end":68},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":331},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":69035,"byte_end":69045,"line_start":113,"line_end":113,"column_start":51,"column_end":61},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":331},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/punctuated.rs","byte_start":69201,"byte_end":69211,"line_start":121,"line_end":121,"column_start":54,"column_end":64},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":331},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":71613,"byte_end":71616,"line_start":15,"line_end":15,"column_start":18,"column_end":21},"kind":{"Impl":{"id":36}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":581}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":73825,"byte_end":73835,"line_start":83,"line_end":83,"column_start":6,"column_end":16},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":74070,"byte_end":74084,"line_start":93,"line_end":93,"column_start":6,"column_end":20},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":74342,"byte_end":74356,"line_start":103,"line_end":103,"column_start":32,"column_end":46},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":736},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":74515,"byte_end":74525,"line_start":109,"line_end":109,"column_start":31,"column_end":41},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":725},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":74669,"byte_end":74672,"line_start":115,"line_end":115,"column_start":31,"column_end":34},"kind":{"Impl":{"id":41}},"from":{"krate":5,"index":7014},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":74768,"byte_end":74771,"line_start":121,"line_end":121,"column_start":27,"column_end":30},"kind":{"Impl":{"id":42}},"from":{"krate":5,"index":7014},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":74853,"byte_end":74856,"line_start":127,"line_end":127,"column_start":18,"column_end":21},"kind":{"Impl":{"id":43}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":581}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":75327,"byte_end":75341,"line_start":147,"line_end":147,"column_start":18,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":736},"to":{"krate":0,"index":581}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":76385,"byte_end":76395,"line_start":181,"line_end":181,"column_start":18,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":725},"to":{"krate":0,"index":581}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":77328,"byte_end":77338,"line_start":214,"line_end":214,"column_start":21,"column_end":31},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":725},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":77499,"byte_end":77513,"line_start":220,"line_end":220,"column_start":21,"column_end":35},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":736},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":77684,"byte_end":77694,"line_start":226,"line_end":226,"column_start":27,"column_end":37},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":725},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":77815,"byte_end":77829,"line_start":234,"line_end":234,"column_start":27,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":736},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":77943,"byte_end":77953,"line_start":242,"line_end":242,"column_start":19,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":725},"to":{"krate":5,"index":5678}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/strings.rs","byte_start":78076,"byte_end":78090,"line_start":248,"line_end":248,"column_start":19,"column_end":33},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":736},"to":{"krate":5,"index":5678}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binread_impls.rs","byte_start":87444,"byte_end":87447,"line_start":76,"line_end":76,"column_start":59,"column_end":62},"kind":{"Impl":{"id":65}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":581}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binread_impls.rs","byte_start":93944,"byte_end":93947,"line_start":282,"line_end":282,"column_start":30,"column_end":33},"kind":{"Impl":{"id":66}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":581}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binread_impls.rs","byte_start":94224,"byte_end":94230,"line_start":294,"line_end":294,"column_start":30,"column_end":36},"kind":{"Impl":{"id":67}},"from":{"krate":2,"index":36703},"to":{"krate":0,"index":581}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/binread_impls.rs","byte_start":94815,"byte_end":94826,"line_start":321,"line_end":321,"column_start":35,"column_end":46},"kind":{"Impl":{"id":68}},"from":{"krate":2,"index":3007},"to":{"krate":0,"index":581}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":5546,"byte_end":5551,"line_start":183,"line_end":183,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":581}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":8013,"byte_end":8017,"line_start":251,"line_end":251,"column_start":25,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":4331},"to":{"krate":0,"index":592}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":8020,"byte_end":8024,"line_start":251,"line_end":251,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":4410},"to":{"krate":0,"index":592}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":8027,"byte_end":8032,"line_start":251,"line_end":251,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":592}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/binread-2.2.0/src/lib.rs","byte_start":10260,"byte_end":10261,"line_start":317,"line_end":317,"column_start":47,"column_end":48},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":610},"to":{"krate":0,"index":592}}]}