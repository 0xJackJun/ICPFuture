{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8","program":"/Users/quanrong/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","candid","--edition=2018","/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"cdk\"","-C","metadata=c9b4a8910c9129fe","-C","extra-filename=-c9b4a8910c9129fe","--out-dir","/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps","-L","dependency=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps","--extern","anyhow=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/libanyhow-dd2e68b1d9549c90.rmeta","--extern","binread=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/libbinread-d399ee0cf0a9891d.rmeta","--extern","byteorder=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/libbyteorder-bc3ea1b22b9f987d.rmeta","--extern","candid_derive=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/libcandid_derive-038c872ce43d4132.dylib","--extern","codespan_reporting=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/libcodespan_reporting-6ca9029756e9e4a5.rmeta","--extern","hex=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/libhex-8fb7da550b197f93.rmeta","--extern","ic_types=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/libic_types-ed4083618381e1bc.rmeta","--extern","lalrpop_util=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/liblalrpop_util-34f7759e72d61db4.rmeta","--extern","leb128=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/libleb128-3eb11eafef3141e8.rmeta","--extern","logos=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/liblogos-60e57fe68da36a60.rmeta","--extern","num_bigint=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/libnum_bigint-26f421300de46a28.rmeta","--extern","num_traits=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/libnum_traits-cae3205f442be49c.rmeta","--extern","num_enum=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/libnum_enum-d9b9f5e7b6695dc7.rmeta","--extern","paste=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/libpaste-7d281ada0019c8a4.dylib","--extern","pretty=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/libpretty-620a7eab4b96e41c.rmeta","--extern","serde=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/libserde-677870c9f3df6a47.rmeta","--extern","serde_bytes=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/libserde_bytes-14a495b9cf997694.rmeta","--extern","thiserror=/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/libthiserror-65ba011a9ba87775.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/quanrong/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/deps/libcandid-c9b4a8910c9129fe.rmeta"},"prelude":{"crate_id":{"name":"candid","disambiguator":[1855169105843296352,0]},"crate_root":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src","external_crates":[{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7101137524639191865,0]}},{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","num":2,"id":{"name":"core","disambiguator":[1887987468260230341,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11423829060327785168,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11467597086512816709,0]}},{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","num":5,"id":{"name":"alloc","disambiguator":[11478090127832647137,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[16011649288231704614,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12732930576792739361,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11329576585081918948,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17189205392791100154,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2953602047458512213,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[4833631622402917298,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[2052285648718182991,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16253613530580249776,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[5745760535571076062,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[7876989589743503273,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[14488000063334320346,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[5084180220498965168,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","num":18,"id":{"name":"candid_derive","disambiguator":[3085843847809285178,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","num":19,"id":{"name":"serde","disambiguator":[18372569490868754891,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","num":20,"id":{"name":"serde_derive","disambiguator":[5038614614948411660,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/candid.rs","num":21,"id":{"name":"pretty","disambiguator":[17776953041398377713,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/candid.rs","num":22,"id":{"name":"typed_arena","disambiguator":[8091911605311459454,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/candid.rs","num":23,"id":{"name":"arrayvec","disambiguator":[1899937843826166798,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","num":24,"id":{"name":"codespan_reporting","disambiguator":[17856523270995395684,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","num":25,"id":{"name":"termcolor","disambiguator":[2750904603382977460,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","num":26,"id":{"name":"unicode_width","disambiguator":[11502265504561236512,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","num":27,"id":{"name":"thiserror","disambiguator":[14941770180288179320,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","num":28,"id":{"name":"thiserror_impl","disambiguator":[6738404347363796130,0]}},{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","num":29,"id":{"name":"lalrpop_util","disambiguator":[5511409459142588954,0]}},{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","num":30,"id":{"name":"regex","disambiguator":[9050296342597439272,0]}},{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","num":31,"id":{"name":"regex_syntax","disambiguator":[12878828224363205474,0]}},{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","num":32,"id":{"name":"aho_corasick","disambiguator":[18437427627501423170,0]}},{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","num":33,"id":{"name":"memchr","disambiguator":[18147983922030061795,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","num":34,"id":{"name":"binread","disambiguator":[17485534558570168021,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","num":35,"id":{"name":"lazy_static","disambiguator":[11258297254033253449,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","num":36,"id":{"name":"binread_derive","disambiguator":[9282606392196794066,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","num":37,"id":{"name":"rustversion","disambiguator":[16871001068848726566,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","num":38,"id":{"name":"ic_types","disambiguator":[16332812914807608916,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","num":39,"id":{"name":"sha2","disambiguator":[8202007770647459461,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","num":40,"id":{"name":"block_buffer","disambiguator":[7918364931267657039,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","num":41,"id":{"name":"generic_array","disambiguator":[6904933969923639998,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","num":42,"id":{"name":"typenum","disambiguator":[1867200228163571331,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","num":43,"id":{"name":"digest","disambiguator":[12463156136767059905,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","num":44,"id":{"name":"opaque_debug","disambiguator":[17066883303145383391,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","num":45,"id":{"name":"cfg_if","disambiguator":[6336041959052512431,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/javascript.rs","num":46,"id":{"name":"hex","disambiguator":[7923574926375000180,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","num":47,"id":{"name":"serde_bytes","disambiguator":[12334603105030288277,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","num":48,"id":{"name":"base32","disambiguator":[13178017795669044351,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","num":49,"id":{"name":"crc32fast","disambiguator":[7272481264238860022,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","num":50,"id":{"name":"num_enum","disambiguator":[2299963268862757223,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","num":51,"id":{"name":"num_enum_derive","disambiguator":[2653891042639017511,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","num":52,"id":{"name":"derivative","disambiguator":[16048015948489123256,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/subtype.rs","num":53,"id":{"name":"anyhow","disambiguator":[1820047812217008451,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","num":54,"id":{"name":"num_bigint","disambiguator":[6483882261180458753,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","num":55,"id":{"name":"num_integer","disambiguator":[8399085103245557848,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","num":56,"id":{"name":"num_traits","disambiguator":[6718522560933761139,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","num":57,"id":{"name":"logos","disambiguator":[12606456044296473060,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","num":58,"id":{"name":"logos_derive","disambiguator":[17229032027784949011,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","num":59,"id":{"name":"byteorder","disambiguator":[10480941312989298326,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","num":60,"id":{"name":"leb128","disambiguator":[850094574119581529,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","num":61,"id":{"name":"paste","disambiguator":[4798587479005538703,0]}}],"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":0,"byte_end":13960,"line_start":1,"line_end":346,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":197},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12821,"byte_end":12834,"line_start":301,"line_end":301,"column_start":25,"column_end":38},"alias_span":null,"name":"candid_method","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":199},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12836,"byte_end":12850,"line_start":301,"line_end":301,"column_start":40,"column_end":54},"alias_span":null,"name":"export_service","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":196},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12852,"byte_end":12862,"line_start":301,"line_end":301,"column_start":56,"column_end":66},"alias_span":null,"name":"CandidType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":1538},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12880,"byte_end":12891,"line_start":302,"line_end":302,"column_start":16,"column_end":27},"alias_span":null,"name":"Deserialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1258},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12880,"byte_end":12891,"line_start":302,"line_end":302,"column_start":16,"column_end":27},"alias_span":null,"name":"Deserialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":14447,"byte_end":14458,"line_start":12,"line_end":12,"column_start":15,"column_end":26},"alias_span":null,"name":"idl_to_rust","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":176},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12928,"byte_end":12941,"line_start":305,"line_end":305,"column_start":18,"column_end":31},"alias_span":null,"name":"generate_code","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":525},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12994,"byte_end":13006,"line_start":310,"line_end":310,"column_start":17,"column_end":29},"alias_span":null,"name":"pretty_parse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":528},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13008,"byte_end":13019,"line_start":310,"line_end":310,"column_start":31,"column_end":42},"alias_span":null,"name":"pretty_read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2223},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13021,"byte_end":13026,"line_start":310,"line_end":310,"column_start":44,"column_end":49},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":499},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13028,"byte_end":13034,"line_start":310,"line_end":310,"column_start":51,"column_end":57},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":38,"index":0},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":76167,"byte_end":76175,"line_start":7,"line_end":7,"column_start":9,"column_end":17},"alias_span":null,"name":"ic_types","value":"","parent":{"krate":0,"index":544}},{"kind":"Use","ref_id":{"krate":0,"index":781},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":76273,"byte_end":76281,"line_start":14,"line_end":14,"column_start":26,"column_end":34},"alias_span":null,"name":"get_type","value":"","parent":{"krate":0,"index":544}},{"kind":"Use","ref_id":{"krate":0,"index":2878},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":76283,"byte_end":76288,"line_start":14,"line_end":14,"column_start":36,"column_end":41},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":544}},{"kind":"Use","ref_id":{"krate":0,"index":2895},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":76290,"byte_end":76298,"line_start":14,"line_end":14,"column_start":43,"column_end":51},"alias_span":null,"name":"Function","value":"","parent":{"krate":0,"index":544}},{"kind":"Use","ref_id":{"krate":0,"index":2861},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":76300,"byte_end":76305,"line_start":14,"line_end":14,"column_start":53,"column_end":58},"alias_span":null,"name":"Label","value":"","parent":{"krate":0,"index":544}},{"kind":"Use","ref_id":{"krate":0,"index":2780},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":76307,"byte_end":76311,"line_start":14,"line_end":14,"column_start":60,"column_end":64},"alias_span":null,"name":"Type","value":"","parent":{"krate":0,"index":544}},{"kind":"Use","ref_id":{"krate":0,"index":2754},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":76313,"byte_end":76319,"line_start":14,"line_end":14,"column_start":66,"column_end":72},"alias_span":null,"name":"TypeId","value":"","parent":{"krate":0,"index":544}},{"kind":"Use","ref_id":{"krate":38,"index":390},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/principal.rs","byte_start":125274,"byte_end":125283,"line_start":3,"line_end":3,"column_start":19,"column_end":28},"alias_span":null,"name":"Principal","value":"","parent":{"krate":0,"index":1022}},{"kind":"Use","ref_id":{"krate":0,"index":1168},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13068,"byte_end":13078,"line_start":313,"line_end":313,"column_start":16,"column_end":26},"alias_span":null,"name":"CandidType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3034},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13110,"byte_end":13113,"line_start":315,"line_end":315,"column_start":14,"column_end":17},"alias_span":null,"name":"Int","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3035},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13110,"byte_end":13113,"line_start":315,"line_end":315,"column_start":14,"column_end":17},"alias_span":null,"name":"Int","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3057},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13115,"byte_end":13118,"line_start":315,"line_end":315,"column_start":19,"column_end":22},"alias_span":null,"name":"Nat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3058},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13115,"byte_end":13118,"line_start":315,"line_end":315,"column_start":19,"column_end":22},"alias_span":null,"name":"Nat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":38,"index":390},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13136,"byte_end":13145,"line_start":316,"line_end":316,"column_start":16,"column_end":25},"alias_span":null,"name":"Principal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4030},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13163,"byte_end":13167,"line_start":317,"line_end":317,"column_start":17,"column_end":21},"alias_span":null,"name":"Func","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4041},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13169,"byte_end":13176,"line_start":317,"line_end":317,"column_start":23,"column_end":30},"alias_span":null,"name":"Service","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4060},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13194,"byte_end":13199,"line_start":318,"line_end":318,"column_start":16,"column_end":21},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4051},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13201,"byte_end":13209,"line_start":318,"line_end":318,"column_start":23,"column_end":31},"alias_span":null,"name":"Reserved","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4052},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13201,"byte_end":13209,"line_start":318,"line_end":318,"column_start":23,"column_end":31},"alias_span":null,"name":"Reserved","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4427},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11265461,"byte_end":11265470,"line_start":6578,"line_end":6578,"column_start":29,"column_end":38},"alias_span":null,"name":"ArgParser","value":"","parent":{"krate":0,"index":1235}},{"kind":"Use","ref_id":{"krate":0,"index":5084},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11519688,"byte_end":11519698,"line_start":13185,"line_end":13185,"column_start":30,"column_end":40},"alias_span":null,"name":"ArgsParser","value":"","parent":{"krate":0,"index":1235}},{"kind":"Use","ref_id":{"krate":0,"index":5741},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11764749,"byte_end":11764762,"line_start":19569,"line_end":19569,"column_start":33,"column_end":46},"alias_span":null,"name":"IDLProgParser","value":"","parent":{"krate":0,"index":1235}},{"kind":"Use","ref_id":{"krate":0,"index":6398},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12013359,"byte_end":12013369,"line_start":26044,"line_end":26044,"column_start":30,"column_end":40},"alias_span":null,"name":"TestParser","value":"","parent":{"krate":0,"index":1235}},{"kind":"Use","ref_id":{"krate":0,"index":7055},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12252882,"byte_end":12252891,"line_start":32286,"line_end":32286,"column_start":29,"column_end":38},"alias_span":null,"name":"TypParser","value":"","parent":{"krate":0,"index":1235}},{"kind":"Use","ref_id":{"krate":0,"index":7712},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12492512,"byte_end":12492522,"line_start":38533,"line_end":38533,"column_start":30,"column_end":40},"alias_span":null,"name":"TypsParser","value":"","parent":{"krate":0,"index":1235}},{"kind":"Use","ref_id":{"krate":0,"index":235},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/pretty.rs","byte_start":184328,"byte_end":184336,"line_start":8,"line_end":8,"column_start":34,"column_end":42},"alias_span":null,"name":"pp_label","value":"","parent":{"krate":0,"index":1535}},{"kind":"Use","ref_id":{"krate":0,"index":9390},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13255,"byte_end":13262,"line_start":322,"line_end":322,"column_start":24,"column_end":31},"alias_span":null,"name":"IDLProg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1533},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13289,"byte_end":13299,"line_start":323,"line_end":323,"column_start":26,"column_end":36},"alias_span":null,"name":"check_file","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1530},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13301,"byte_end":13311,"line_start":323,"line_end":323,"column_start":38,"column_end":48},"alias_span":null,"name":"check_prog","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1534},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13313,"byte_end":13330,"line_start":323,"line_end":323,"column_start":50,"column_end":67},"alias_span":null,"name":"pretty_check_file","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9520},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13332,"byte_end":13339,"line_start":323,"line_end":323,"column_start":69,"column_end":76},"alias_span":null,"name":"TypeEnv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9521},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13332,"byte_end":13339,"line_start":323,"line_end":323,"column_start":69,"column_end":76},"alias_span":null,"name":"TypeEnv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9490},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13365,"byte_end":13372,"line_start":324,"line_end":324,"column_start":24,"column_end":31},"alias_span":null,"name":"IDLArgs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2150},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13455,"byte_end":13466,"line_start":331,"line_end":331,"column_start":17,"column_end":28},"alias_span":null,"name":"decode_args","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2153},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13468,"byte_end":13478,"line_start":331,"line_end":331,"column_start":30,"column_end":40},"alias_span":null,"name":"decode_one","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2159},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13480,"byte_end":13491,"line_start":331,"line_end":331,"column_start":42,"column_end":53},"alias_span":null,"name":"encode_args","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2161},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13493,"byte_end":13503,"line_start":331,"line_end":331,"column_start":55,"column_end":65},"alias_span":null,"name":"encode_one","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2156},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13505,"byte_end":13515,"line_start":331,"line_end":331,"column_start":67,"column_end":77},"alias_span":null,"name":"write_args","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":0,"byte_end":13960,"line_start":1,"line_end":346,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":461},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":1206},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1217},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1224},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1234},{"krate":0,"index":1670},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1677},{"krate":0,"index":1680},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1686},{"krate":0,"index":1689},{"krate":0,"index":1766},{"krate":0,"index":2009},{"krate":0,"index":2131},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2179},{"krate":0,"index":2182},{"krate":0,"index":2185},{"krate":0,"index":2188},{"krate":0,"index":2191},{"krate":0,"index":2219}],"decl_id":null,"docs":" # Candid","sig":null,"attributes":[{"value":"/ # Candid","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":0,"byte_end":12,"line_start":1,"line_end":1,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13,"byte_end":16,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Candid is an interface description language (IDL) for interacting with _canisters_ (also known as _services_ or _actors_) running on the Internet Computer.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":17,"byte_end":176,"line_start":3,"line_end":3,"column_start":1,"column_end":160}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":177,"byte_end":180,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ There are three common ways that you might find yourself needing to work with Candid in Rust.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":181,"byte_end":278,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"/ - As a typed Rust data structure. When you write canisters or frontend in Rust, you want to have a seamless way of converting data between Rust and Candid.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":279,"byte_end":438,"line_start":6,"line_end":6,"column_start":1,"column_end":160}},{"value":"/ - As an untyped Candid value. When you write generic tools for the Internet Computer without knowing the type of the Candid data.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":439,"byte_end":572,"line_start":7,"line_end":7,"column_start":1,"column_end":134}},{"value":"/ - As text data. When you get the data from CLI or read from a file, you can use the provided parser to send/receive messages.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":573,"byte_end":702,"line_start":8,"line_end":8,"column_start":1,"column_end":130}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":703,"byte_end":706,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Candid provides efficient, flexible and safe ways of converting data between each of these representations.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":707,"byte_end":818,"line_start":10,"line_end":10,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":819,"byte_end":822,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Note that if you are using the [Rust CDK](https://github.com/dfinity/cdk-rs/) to develop Rust canisters, it is encouraged to","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":823,"byte_end":951,"line_start":12,"line_end":12,"column_start":1,"column_end":129}},{"value":"/ use the Candid crate from `ic_cdk::export::candid` to avoid version mismatch.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":952,"byte_end":1033,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1034,"byte_end":1037,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ## Operating on native Rust values","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1038,"byte_end":1076,"line_start":15,"line_end":15,"column_start":1,"column_end":39}},{"value":"/ We are using a builder pattern to encode/decode Candid messages, see [`candid::ser::IDLBuilder`](ser/struct.IDLBuilder.html) for serialization and [`candid::de::IDLDeserialize`](de/struct.IDLDeserialize.html) for deserialization.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1077,"byte_end":1310,"line_start":16,"line_end":16,"column_start":1,"column_end":234}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1311,"byte_end":1314,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1315,"byte_end":1322,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ // Serialize 10 numbers to Candid binary format","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1323,"byte_end":1374,"line_start":19,"line_end":19,"column_start":1,"column_end":52}},{"value":"/ let mut ser = candid::ser::IDLBuilder::new();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1375,"byte_end":1424,"line_start":20,"line_end":20,"column_start":1,"column_end":50}},{"value":"/ for i in 0..10 {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1425,"byte_end":1445,"line_start":21,"line_end":21,"column_start":1,"column_end":21}},{"value":"/   ser.arg(&i)?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1446,"byte_end":1465,"line_start":22,"line_end":22,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1466,"byte_end":1471,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ let bytes: Vec<u8> = ser.serialize_to_vec()?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1472,"byte_end":1521,"line_start":24,"line_end":24,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1522,"byte_end":1525,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ // Deserialize Candid message and verify the values match","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1526,"byte_end":1587,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/ let mut de = candid::de::IDLDeserialize::new(&bytes)?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1588,"byte_end":1646,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1647,"byte_end":1665,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ while !de.is_done() {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1666,"byte_end":1691,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"/   let x = de.get_value::<i32>()?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1692,"byte_end":1729,"line_start":30,"line_end":30,"column_start":1,"column_end":38}},{"value":"/   assert_eq!(x, i);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1730,"byte_end":1753,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/   i += 1;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1754,"byte_end":1767,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1768,"byte_end":1773,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ de.done()?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1774,"byte_end":1789,"line_start":34,"line_end":34,"column_start":1,"column_end":16}},{"value":"/ # Ok::<(), candid::Error>(())","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1790,"byte_end":1823,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1824,"byte_end":1831,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1832,"byte_end":1835,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Candid provides functions for encoding/decoding a Candid message in a type-safe way.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1836,"byte_end":1924,"line_start":38,"line_end":38,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1925,"byte_end":1928,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1929,"byte_end":1936,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use candid::{encode_args, decode_args};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1937,"byte_end":1980,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/ // Serialize two values [(42, \"text\")] and (42u32, \"text\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":1981,"byte_end":2043,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ let bytes: Vec<u8> = encode_args((&[(42, \"text\")], &(42u32, \"text\")))?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2044,"byte_end":2119,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ // Deserialize the first value as type Vec<(i32, &str)>,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2120,"byte_end":2180,"line_start":44,"line_end":44,"column_start":1,"column_end":61}},{"value":"/ // and the second value as type (u32, String)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2181,"byte_end":2230,"line_start":45,"line_end":45,"column_start":1,"column_end":50}},{"value":"/ let (a, b): (Vec<(i32, &str)>, (u32, String)) = decode_args(&bytes)?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2231,"byte_end":2304,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2305,"byte_end":2308,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a, [(42, \"text\")]);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2309,"byte_end":2343,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(b, (42u32, \"text\".to_string()));","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2344,"byte_end":2391,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/ # Ok::<(), candid::Error>(())","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2392,"byte_end":2425,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2426,"byte_end":2433,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2434,"byte_end":2437,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ We also provide macros for encoding/decoding Candid message in a convenient way.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2438,"byte_end":2522,"line_start":53,"line_end":53,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2523,"byte_end":2526,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2527,"byte_end":2534,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use candid::{Encode, Decode};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2535,"byte_end":2568,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/ // Serialize two values [(42, \"text\")] and (42u32, \"text\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2569,"byte_end":2631,"line_start":57,"line_end":57,"column_start":1,"column_end":63}},{"value":"/ let bytes: Vec<u8> = Encode!(&[(42, \"text\")], &(42u32, \"text\"))?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2632,"byte_end":2701,"line_start":58,"line_end":58,"column_start":1,"column_end":70}},{"value":"/ // Deserialize the first value as type Vec<(i32, &str)>,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2702,"byte_end":2762,"line_start":59,"line_end":59,"column_start":1,"column_end":61}},{"value":"/ // and the second value as type (u32, String)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2763,"byte_end":2812,"line_start":60,"line_end":60,"column_start":1,"column_end":50}},{"value":"/ let (a, b) = Decode!(&bytes, Vec<(i32, &str)>, (u32, String))?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2813,"byte_end":2880,"line_start":61,"line_end":61,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2881,"byte_end":2884,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a, [(42, \"text\")]);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2885,"byte_end":2919,"line_start":63,"line_end":63,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(b, (42u32, \"text\".to_string()));","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2920,"byte_end":2967,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/ # Ok::<(), candid::Error>(())","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":2968,"byte_end":3001,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":3002,"byte_end":3009,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":3010,"byte_end":3013,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ The [`Encode!`](macro.Encode.html) macro takes a sequence of Rust values, and returns a binary format `Vec<u8>` that can be sent over the wire.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":3014,"byte_end":3161,"line_start":68,"line_end":68,"column_start":1,"column_end":148}},{"value":"/ The [`Decode!`](macro.Decode.html) macro takes the binary message and a sequence of Rust types that you want to decode into, and returns a tuple","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":3162,"byte_end":3310,"line_start":69,"line_end":69,"column_start":1,"column_end":149}},{"value":"/ of Rust values of the given types.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":3311,"byte_end":3349,"line_start":70,"line_end":70,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":3350,"byte_end":3353,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Note that a fixed Candid message may be decoded in multiple Rust types. For example,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":3354,"byte_end":3442,"line_start":72,"line_end":72,"column_start":1,"column_end":89}},{"value":"/ we can decode a Candid `text` type into either `String` or `&str` in Rust.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":3443,"byte_end":3521,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":3522,"byte_end":3525,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ## Operating on user defined struct/enum","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":3526,"byte_end":3570,"line_start":75,"line_end":75,"column_start":1,"column_end":45}},{"value":"/ We use trait [`CandidType`](types/trait.CandidType.html) for serialization. Deserialization requires both [`CandidType`](types/trait.CandidType.html) and Serde's [`Deserialize`](trait.Deserialize.html) trait.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":3571,"byte_end":3783,"line_start":76,"line_end":76,"column_start":1,"column_end":213}},{"value":"/ Any type that implements these two traits can be used for serialization and deserialization.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":3784,"byte_end":3880,"line_start":77,"line_end":77,"column_start":1,"column_end":97}},{"value":"/ This includes built-in Rust standard library types like `Vec<T>` and `Result<T, E>`, as well as any structs","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":3881,"byte_end":3992,"line_start":78,"line_end":78,"column_start":1,"column_end":112}},{"value":"/ or enums annotated with `#[derive(CandidType, Deserialize)]`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":3993,"byte_end":4058,"line_start":79,"line_end":79,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4059,"byte_end":4062,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ We do not use Serde's `Serialize` trait because Candid requires serializing types along with the values.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4063,"byte_end":4171,"line_start":81,"line_end":81,"column_start":1,"column_end":109}},{"value":"/ This is difficult to achieve in `Serialize`, especially for enum types. Besides serialization, [`CandidType`](types/trait.CandidType.html)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4172,"byte_end":4314,"line_start":82,"line_end":82,"column_start":1,"column_end":143}},{"value":"/ trait also converts Rust type to Candid type defined as [`candid::types::Type`](types/internal/enum.Type.html).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4315,"byte_end":4430,"line_start":83,"line_end":83,"column_start":1,"column_end":116}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4431,"byte_end":4438,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ use candid::{Encode, Decode, CandidType, Deserialize};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4439,"byte_end":4497,"line_start":85,"line_end":85,"column_start":1,"column_end":59}},{"value":"/ #[derive(CandidType, Deserialize)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4498,"byte_end":4536,"line_start":86,"line_end":86,"column_start":1,"column_end":39}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4537,"byte_end":4570,"line_start":87,"line_end":87,"column_start":1,"column_end":34}},{"value":"/ enum List {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4571,"byte_end":4586,"line_start":88,"line_end":88,"column_start":1,"column_end":16}},{"value":"/     #[serde(rename = \"nil\")]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4587,"byte_end":4619,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/     Nil,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4620,"byte_end":4632,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/     #[serde(with = \"serde_bytes\")]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4633,"byte_end":4671,"line_start":91,"line_end":91,"column_start":1,"column_end":39}},{"value":"/     Node(Vec<u8>),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4672,"byte_end":4694,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/     Cons(i32, Box<List>),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4695,"byte_end":4724,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4725,"byte_end":4730,"line_start":94,"line_end":94,"column_start":1,"column_end":6}},{"value":"/ let list = List::Cons(42, Box::new(List::Nil));","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4731,"byte_end":4782,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4783,"byte_end":4786,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let bytes = Encode!(&list)?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4787,"byte_end":4819,"line_start":97,"line_end":97,"column_start":1,"column_end":33}},{"value":"/ let res = Decode!(&bytes, List)?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4820,"byte_end":4857,"line_start":98,"line_end":98,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(res, list);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4858,"byte_end":4884,"line_start":99,"line_end":99,"column_start":1,"column_end":27}},{"value":"/ # Ok::<(), candid::Error>(())","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4885,"byte_end":4918,"line_start":100,"line_end":100,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4919,"byte_end":4926,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ We support serde's rename attributes for each field, namely `#[serde(rename = \"foo\")]`","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":4927,"byte_end":5017,"line_start":102,"line_end":102,"column_start":1,"column_end":91}},{"value":"/ and `#[serde(rename(serialize = \"foo\", deserialize = \"foo\"))]`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":5018,"byte_end":5085,"line_start":103,"line_end":103,"column_start":1,"column_end":68}},{"value":"/ This is useful when interoperating between Rust and Motoko canisters involving variant types, because","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":5086,"byte_end":5191,"line_start":104,"line_end":104,"column_start":1,"column_end":106}},{"value":"/ they use different naming conventions for field names.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":5192,"byte_end":5250,"line_start":105,"line_end":105,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":5251,"byte_end":5254,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ We support `#[serde(with = \"serde_bytes\")]` for efficient handling of `&[u8]` and `Vec<u8>`. You can","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":5255,"byte_end":5359,"line_start":107,"line_end":107,"column_start":1,"column_end":105}},{"value":"/ also use the wrapper type `serde_bytes::ByteBuf` and `serde_bytes::Bytes`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":5360,"byte_end":5438,"line_start":108,"line_end":108,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":5439,"byte_end":5442,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Note that if you are deriving `Deserialize` trait from Candid, you need to import `serde` as a dependency in","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":5443,"byte_end":5555,"line_start":110,"line_end":110,"column_start":1,"column_end":113}},{"value":"/ your project, as the derived implementation will refer to the `serde` crate.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":5556,"byte_end":5636,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":5637,"byte_end":5640,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ## Operating on big integers","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":5641,"byte_end":5673,"line_start":113,"line_end":113,"column_start":1,"column_end":33}},{"value":"/ To support big integer types [`Candid::Int`](types/number/struct.Int.html) and [`Candid::Nat`](types/number/struct.Nat.html),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":5674,"byte_end":5803,"line_start":114,"line_end":114,"column_start":1,"column_end":130}},{"value":"/ we use the `num_bigint` crate. We provide interface to convert `i64`, `u64`, `&str` and `&[u8]` to big integers.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":5804,"byte_end":5920,"line_start":115,"line_end":115,"column_start":1,"column_end":117}},{"value":"/ You can also use `i128` and `u128` to represent Candid `int` and `nat` types respectively (decoding will fail if","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":5921,"byte_end":6037,"line_start":116,"line_end":116,"column_start":1,"column_end":117}},{"value":"/ the number is more than 128 bits).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6038,"byte_end":6076,"line_start":117,"line_end":117,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6077,"byte_end":6084,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/ use candid::{Int, Nat, Encode, Decode};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6085,"byte_end":6128,"line_start":119,"line_end":119,"column_start":1,"column_end":44}},{"value":"/ let x = \"-10000000000000000000\".parse::<Int>()?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6129,"byte_end":6181,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/ let bytes = Encode!(&Nat::from(1024), &x)?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6182,"byte_end":6229,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/ let (a, b) = Decode!(&bytes, Nat, Int)?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6230,"byte_end":6274,"line_start":122,"line_end":122,"column_start":1,"column_end":45}},{"value":"/ let (c, d) = Decode!(&bytes, u128, i128)?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6275,"byte_end":6321,"line_start":123,"line_end":123,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(a + 1, 1025);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6322,"byte_end":6350,"line_start":124,"line_end":124,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(b, Int::parse(b\"-10000000000000000000\")?);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6351,"byte_end":6408,"line_start":125,"line_end":125,"column_start":1,"column_end":58}},{"value":"/ # Ok::<(), candid::Error>(())","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6409,"byte_end":6442,"line_start":126,"line_end":126,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6443,"byte_end":6450,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6451,"byte_end":6454,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ## Operating on untyped Candid values","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6455,"byte_end":6496,"line_start":129,"line_end":129,"column_start":1,"column_end":42}},{"value":"/ Any valid Candid value can be manipulated in an recursive enum representation [`candid::parser::value::IDLValue`](parser/value/enum.IDLValue.html).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6497,"byte_end":6648,"line_start":130,"line_end":130,"column_start":1,"column_end":152}},{"value":"/ We use `ser.value_arg(v)` and `de.get_value::<IDLValue>()` for encoding and decoding the value.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6649,"byte_end":6748,"line_start":131,"line_end":131,"column_start":1,"column_end":100}},{"value":"/ The use of Rust value and `IDLValue` can be intermixed.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6749,"byte_end":6808,"line_start":132,"line_end":132,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6809,"byte_end":6812,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6813,"byte_end":6820,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/ use candid::parser::value::IDLValue;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6821,"byte_end":6861,"line_start":135,"line_end":135,"column_start":1,"column_end":41}},{"value":"/ // Serialize Rust value Some(42u8) and IDLValue \"hello\"","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6862,"byte_end":6921,"line_start":136,"line_end":136,"column_start":1,"column_end":60}},{"value":"/ let bytes = candid::ser::IDLBuilder::new()","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6922,"byte_end":6968,"line_start":137,"line_end":137,"column_start":1,"column_end":47}},{"value":"/     .arg(&Some(42u8))?","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6969,"byte_end":6995,"line_start":138,"line_end":138,"column_start":1,"column_end":27}},{"value":"/     .value_arg(&IDLValue::Text(\"hello\".to_string()))?","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":6996,"byte_end":7053,"line_start":139,"line_end":139,"column_start":1,"column_end":58}},{"value":"/     .serialize_to_vec()?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7054,"byte_end":7083,"line_start":140,"line_end":140,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7084,"byte_end":7087,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ // Deserialize the first Rust value into IDLValue,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7088,"byte_end":7142,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/ // and the second IDLValue into Rust value","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7143,"byte_end":7189,"line_start":143,"line_end":143,"column_start":1,"column_end":47}},{"value":"/ let mut de = candid::de::IDLDeserialize::new(&bytes)?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7190,"byte_end":7248,"line_start":144,"line_end":144,"column_start":1,"column_end":59}},{"value":"/ let x = de.get_value::<IDLValue>()?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7249,"byte_end":7289,"line_start":145,"line_end":145,"column_start":1,"column_end":41}},{"value":"/ let y = de.get_value::<&str>()?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7290,"byte_end":7326,"line_start":146,"line_end":146,"column_start":1,"column_end":37}},{"value":"/ de.done()?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7327,"byte_end":7342,"line_start":147,"line_end":147,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7343,"byte_end":7346,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(x, IDLValue::Opt(Box::new(IDLValue::Nat8(42))));","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7347,"byte_end":7410,"line_start":149,"line_end":149,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(y, \"hello\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7411,"byte_end":7438,"line_start":150,"line_end":150,"column_start":1,"column_end":28}},{"value":"/ # Ok::<(), candid::Error>(())","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7439,"byte_end":7472,"line_start":151,"line_end":151,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7473,"byte_end":7480,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7481,"byte_end":7484,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ We provide a data structure [`candid::IDLArgs`](parser/value/struct.IDLArgs.html) to represent a sequence of `IDLValue`s,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7485,"byte_end":7610,"line_start":154,"line_end":154,"column_start":1,"column_end":126}},{"value":"/ and use `to_bytes()` and `from_bytes()` to encode and decode Candid messages.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7611,"byte_end":7692,"line_start":155,"line_end":155,"column_start":1,"column_end":82}},{"value":"/ We also provide a parser to parse Candid values in text format.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7693,"byte_end":7760,"line_start":156,"line_end":156,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7761,"byte_end":7764,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7765,"byte_end":7772,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/ use candid::{IDLArgs, TypeEnv};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7773,"byte_end":7808,"line_start":159,"line_end":159,"column_start":1,"column_end":36}},{"value":"/ // Candid values represented in text format","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7809,"byte_end":7856,"line_start":160,"line_end":160,"column_start":1,"column_end":48}},{"value":"/ let text_value = r#\"","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7857,"byte_end":7881,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/      (42, opt true, vec {1;2;3},","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7882,"byte_end":7918,"line_start":162,"line_end":162,"column_start":1,"column_end":37}},{"value":"/       opt record {label=\"text\"; 42=\"haha\"})","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7919,"byte_end":7966,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/ \"#;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7967,"byte_end":7974,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7975,"byte_end":7978,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ // Parse text format into IDLArgs for serialization","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":7979,"byte_end":8034,"line_start":166,"line_end":166,"column_start":1,"column_end":56}},{"value":"/ let args: IDLArgs = text_value.parse()?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8035,"byte_end":8079,"line_start":167,"line_end":167,"column_start":1,"column_end":45}},{"value":"/ let encoded: Vec<u8> = args.to_bytes()?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8080,"byte_end":8124,"line_start":168,"line_end":168,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8125,"byte_end":8128,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ // Deserialize into IDLArgs","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8129,"byte_end":8160,"line_start":170,"line_end":170,"column_start":1,"column_end":32}},{"value":"/ let decoded: IDLArgs = IDLArgs::from_bytes(&encoded)?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8161,"byte_end":8219,"line_start":171,"line_end":171,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(encoded, decoded.to_bytes()?);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8220,"byte_end":8265,"line_start":172,"line_end":172,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8266,"byte_end":8269,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ // Convert IDLArgs to text format","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8270,"byte_end":8307,"line_start":174,"line_end":174,"column_start":1,"column_end":38}},{"value":"/ let output: String = decoded.to_string();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8308,"byte_end":8353,"line_start":175,"line_end":175,"column_start":1,"column_end":46}},{"value":"/ let parsed_args: IDLArgs = output.parse()?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8354,"byte_end":8401,"line_start":176,"line_end":176,"column_start":1,"column_end":48}},{"value":"/ let annotated_args = args.annotate_types(true, &TypeEnv::new(), &parsed_args.get_types())?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8402,"byte_end":8497,"line_start":177,"line_end":177,"column_start":1,"column_end":96}},{"value":"/ assert_eq!(annotated_args, parsed_args);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8498,"byte_end":8542,"line_start":178,"line_end":178,"column_start":1,"column_end":45}},{"value":"/ # Ok::<(), candid::Error>(())","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8543,"byte_end":8576,"line_start":179,"line_end":179,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8577,"byte_end":8584,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/ Note that when parsing Candid values, we assume the number literals are always of type `Int`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8585,"byte_end":8682,"line_start":181,"line_end":181,"column_start":1,"column_end":98}},{"value":"/ This can be changed by providing the type of the method arguments, which can usually be obtained","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8683,"byte_end":8783,"line_start":182,"line_end":182,"column_start":1,"column_end":101}},{"value":"/ by parsing a Candid file in the following section.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8784,"byte_end":8838,"line_start":183,"line_end":183,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8839,"byte_end":8842,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ## Operating on Candid AST","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8843,"byte_end":8873,"line_start":185,"line_end":185,"column_start":1,"column_end":31}},{"value":"/ We provide a parser and type checker for Candid files specifying the service interface.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8874,"byte_end":8965,"line_start":186,"line_end":186,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8966,"byte_end":8969,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8970,"byte_end":8977,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ use candid::{IDLProg, TypeEnv, check_prog, types::Type};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":8978,"byte_end":9038,"line_start":189,"line_end":189,"column_start":1,"column_end":61}},{"value":"/ let did_file = r#\"","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9039,"byte_end":9061,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/     type List = opt record { head: int; tail: List };","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9062,"byte_end":9119,"line_start":191,"line_end":191,"column_start":1,"column_end":58}},{"value":"/     type byte = nat8;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9120,"byte_end":9145,"line_start":192,"line_end":192,"column_start":1,"column_end":26}},{"value":"/     service : {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9146,"byte_end":9165,"line_start":193,"line_end":193,"column_start":1,"column_end":20}},{"value":"/       f : (byte, int, nat, int8) -> (List);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9166,"byte_end":9213,"line_start":194,"line_end":194,"column_start":1,"column_end":48}},{"value":"/       g : (List) -> (int) query;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9214,"byte_end":9250,"line_start":195,"line_end":195,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9251,"byte_end":9260,"line_start":196,"line_end":196,"column_start":1,"column_end":10}},{"value":"/ \"#;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9261,"byte_end":9268,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9269,"byte_end":9272,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ // Parse did file into an AST","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9273,"byte_end":9306,"line_start":199,"line_end":199,"column_start":1,"column_end":34}},{"value":"/ let ast: IDLProg = did_file.parse()?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9307,"byte_end":9348,"line_start":200,"line_end":200,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9349,"byte_end":9352,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ // Pretty-print AST","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9353,"byte_end":9376,"line_start":202,"line_end":202,"column_start":1,"column_end":24}},{"value":"/ let pretty: String = candid::parser::types::to_pretty(&ast, 80);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9377,"byte_end":9445,"line_start":203,"line_end":203,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9446,"byte_end":9449,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ // Type checking a given .did file","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9450,"byte_end":9488,"line_start":205,"line_end":205,"column_start":1,"column_end":39}},{"value":"/ // let (env, opt_actor) = check_file(\"a.did\")?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9489,"byte_end":9540,"line_start":206,"line_end":206,"column_start":1,"column_end":52}},{"value":"/ // Or alternatively, use check_prog to check in-memory did file","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9541,"byte_end":9608,"line_start":207,"line_end":207,"column_start":1,"column_end":68}},{"value":"/ // Note that file import is ignored by check_prog.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9609,"byte_end":9663,"line_start":208,"line_end":208,"column_start":1,"column_end":55}},{"value":"/ let mut env = TypeEnv::new();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9664,"byte_end":9697,"line_start":209,"line_end":209,"column_start":1,"column_end":34}},{"value":"/ let actor: Type = check_prog(&mut env, &ast)?.unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9698,"byte_end":9757,"line_start":210,"line_end":210,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9758,"byte_end":9761,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ let method = env.get_method(&actor, \"g\").unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9762,"byte_end":9816,"line_start":212,"line_end":212,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(method.is_query(), true);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9817,"byte_end":9857,"line_start":213,"line_end":213,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(method.args, vec![Type::Var(\"List\".to_string())]);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9858,"byte_end":9923,"line_start":214,"line_end":214,"column_start":1,"column_end":66}},{"value":"/ # Ok::<(), candid::Error>(())","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9924,"byte_end":9957,"line_start":215,"line_end":215,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9958,"byte_end":9965,"line_start":216,"line_end":216,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9966,"byte_end":9969,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Serializing untyped Candid values with type annotations.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":9970,"byte_end":10033,"line_start":218,"line_end":218,"column_start":1,"column_end":64}},{"value":"/ With type signatures from the Candid file, [`candid::IDLArgs`](parser/value/struct.IDLArgs.html)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10034,"byte_end":10134,"line_start":219,"line_end":219,"column_start":1,"column_end":101}},{"value":"/ uses `to_bytes_with_types` function to serialize arguments directed by the Candid types.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10135,"byte_end":10227,"line_start":220,"line_end":220,"column_start":1,"column_end":93}},{"value":"/ This is useful when serializing different number types and recursive types.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10228,"byte_end":10307,"line_start":221,"line_end":221,"column_start":1,"column_end":80}},{"value":"/ There is no need to use types for deserialization as the types are available in the Candid message.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10308,"byte_end":10411,"line_start":222,"line_end":222,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10412,"byte_end":10415,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10416,"byte_end":10423,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"/ use candid::{IDLArgs, parser::value::IDLValue};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10424,"byte_end":10475,"line_start":225,"line_end":225,"column_start":1,"column_end":52}},{"value":"/ # use candid::{IDLProg, TypeEnv, check_prog};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10476,"byte_end":10525,"line_start":226,"line_end":226,"column_start":1,"column_end":50}},{"value":"/ # let did_file = r#\"","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10526,"byte_end":10550,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/ #    type List = opt record { head: int; tail: List };","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10551,"byte_end":10609,"line_start":228,"line_end":228,"column_start":1,"column_end":59}},{"value":"/ #    type byte = nat8;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10610,"byte_end":10636,"line_start":229,"line_end":229,"column_start":1,"column_end":27}},{"value":"/ #    service : {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10637,"byte_end":10657,"line_start":230,"line_end":230,"column_start":1,"column_end":21}},{"value":"/ #      f : (byte, int, nat, int8) -> (List);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10658,"byte_end":10706,"line_start":231,"line_end":231,"column_start":1,"column_end":49}},{"value":"/ #      g : (List) -> (int) query;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10707,"byte_end":10744,"line_start":232,"line_end":232,"column_start":1,"column_end":38}},{"value":"/ #    }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10745,"byte_end":10755,"line_start":233,"line_end":233,"column_start":1,"column_end":11}},{"value":"/ # \"#;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10756,"byte_end":10765,"line_start":234,"line_end":234,"column_start":1,"column_end":10}},{"value":"/ # let ast = did_file.parse::<IDLProg>()?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10766,"byte_end":10811,"line_start":235,"line_end":235,"column_start":1,"column_end":46}},{"value":"/ # let mut env = TypeEnv::new();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10812,"byte_end":10847,"line_start":236,"line_end":236,"column_start":1,"column_end":36}},{"value":"/ # let actor = check_prog(&mut env, &ast)?.unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10848,"byte_end":10903,"line_start":237,"line_end":237,"column_start":1,"column_end":56}},{"value":"/ // Get method type f : (byte, int, nat, int8) -> (List)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10904,"byte_end":10963,"line_start":238,"line_end":238,"column_start":1,"column_end":60}},{"value":"/ let method = env.get_method(&actor, \"f\").unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":10964,"byte_end":11018,"line_start":239,"line_end":239,"column_start":1,"column_end":55}},{"value":"/ let args = \"(42, 42, 42, 42)\".parse::<IDLArgs>()?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11019,"byte_end":11073,"line_start":240,"line_end":240,"column_start":1,"column_end":55}},{"value":"/ // Serialize arguments with candid types","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11074,"byte_end":11118,"line_start":241,"line_end":241,"column_start":1,"column_end":45}},{"value":"/ let encoded = args.to_bytes_with_types(&env, &method.args)?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11119,"byte_end":11183,"line_start":242,"line_end":242,"column_start":1,"column_end":65}},{"value":"/ let decoded = IDLArgs::from_bytes(&encoded)?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11184,"byte_end":11233,"line_start":243,"line_end":243,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(decoded.args,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11234,"byte_end":11262,"line_start":244,"line_end":244,"column_start":1,"column_end":29}},{"value":"/        vec![IDLValue::Nat8(42),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11263,"byte_end":11298,"line_start":245,"line_end":245,"column_start":1,"column_end":36}},{"value":"/             IDLValue::Int(42.into()),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11299,"byte_end":11340,"line_start":246,"line_end":246,"column_start":1,"column_end":42}},{"value":"/             IDLValue::Nat(42.into()),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11341,"byte_end":11382,"line_start":247,"line_end":247,"column_start":1,"column_end":42}},{"value":"/             IDLValue::Int8(42)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11383,"byte_end":11417,"line_start":248,"line_end":248,"column_start":1,"column_end":35}},{"value":"/            ]);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11418,"byte_end":11436,"line_start":249,"line_end":249,"column_start":1,"column_end":19}},{"value":"/ # Ok::<(), candid::Error>(())","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11437,"byte_end":11470,"line_start":250,"line_end":250,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11471,"byte_end":11478,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11479,"byte_end":11482,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ ## Building the library as a JS/Wasm package","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11483,"byte_end":11531,"line_start":253,"line_end":253,"column_start":1,"column_end":49}},{"value":"/ With the help of `wasm-bindgen` and `wasm-pack`, we can build the library as a Wasm binary and run in the browser.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11532,"byte_end":11650,"line_start":254,"line_end":254,"column_start":1,"column_end":119}},{"value":"/ This is useful for client-side UIs and parsing did files in JavaScript.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11651,"byte_end":11726,"line_start":255,"line_end":255,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11727,"byte_end":11730,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ Create a new project with the following `Cargo.toml`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11731,"byte_end":11788,"line_start":257,"line_end":257,"column_start":1,"column_end":58}},{"value":"/ ```toml","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11789,"byte_end":11800,"line_start":258,"line_end":258,"column_start":1,"column_end":12}},{"value":"/ [lib]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11801,"byte_end":11810,"line_start":259,"line_end":259,"column_start":1,"column_end":10}},{"value":"/ crate-type = [\"cdylib\"]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11811,"byte_end":11838,"line_start":260,"line_end":260,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11839,"byte_end":11842,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ [dependencies]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11843,"byte_end":11861,"line_start":262,"line_end":262,"column_start":1,"column_end":19}},{"value":"/ wasm-bindgen = \"0.2\"","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11862,"byte_end":11886,"line_start":263,"line_end":263,"column_start":1,"column_end":25}},{"value":"/ candid = \"0.7.0\"","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11887,"byte_end":11907,"line_start":264,"line_end":264,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11908,"byte_end":11911,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ [profile.release]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11912,"byte_end":11933,"line_start":266,"line_end":266,"column_start":1,"column_end":22}},{"value":"/ lto = true","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11934,"byte_end":11948,"line_start":267,"line_end":267,"column_start":1,"column_end":15}},{"value":"/ opt-level = 'z'","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11949,"byte_end":11968,"line_start":268,"line_end":268,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11969,"byte_end":11976,"line_start":269,"line_end":269,"column_start":1,"column_end":8}},{"value":"/ Expose the methods in `lib.rs`","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":11977,"byte_end":12011,"line_start":270,"line_end":270,"column_start":1,"column_end":35}},{"value":"/ ```ignore","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12012,"byte_end":12025,"line_start":271,"line_end":271,"column_start":1,"column_end":14}},{"value":"/ use candid::{check_prog, IDLProg, TypeEnv};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12026,"byte_end":12073,"line_start":272,"line_end":272,"column_start":1,"column_end":48}},{"value":"/ use wasm_bindgen::prelude::*;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12074,"byte_end":12107,"line_start":273,"line_end":273,"column_start":1,"column_end":34}},{"value":"/ #[wasm_bindgen]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12108,"byte_end":12127,"line_start":274,"line_end":274,"column_start":1,"column_end":20}},{"value":"/ pub fn did_to_js(prog: String) -> Option<String> {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12128,"byte_end":12182,"line_start":275,"line_end":275,"column_start":1,"column_end":55}},{"value":"/   let ast = prog.parse::<IDLProg>().ok()?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12183,"byte_end":12229,"line_start":276,"line_end":276,"column_start":1,"column_end":47}},{"value":"/   let mut env = TypeEnv::new();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12230,"byte_end":12265,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/   let actor = check_prog(&mut env, &ast).ok()?;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12266,"byte_end":12317,"line_start":278,"line_end":278,"column_start":1,"column_end":52}},{"value":"/   Some(candid::bindings::javascript::compile(&env, &actor))","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12318,"byte_end":12381,"line_start":279,"line_end":279,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12382,"byte_end":12387,"line_start":280,"line_end":280,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12388,"byte_end":12395,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ### Building","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12396,"byte_end":12412,"line_start":282,"line_end":282,"column_start":1,"column_end":17}},{"value":"/ ```shell","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12413,"byte_end":12425,"line_start":283,"line_end":283,"column_start":1,"column_end":13}},{"value":"/ cargo install wasm-pack","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12426,"byte_end":12453,"line_start":284,"line_end":284,"column_start":1,"column_end":28}},{"value":"/ wasm-pack build --target bundler","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12454,"byte_end":12490,"line_start":285,"line_end":285,"column_start":1,"column_end":37}},{"value":"/ wasm-opt --strip-debug -Oz pkg/didc_bg.wasm -o pkg/didc_bg.wasm","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12491,"byte_end":12558,"line_start":286,"line_end":286,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12559,"byte_end":12566,"line_start":287,"line_end":287,"column_start":1,"column_end":8}},{"value":"/ ### Usage","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12567,"byte_end":12580,"line_start":288,"line_end":288,"column_start":1,"column_end":14}},{"value":"/ ```js","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12581,"byte_end":12590,"line_start":289,"line_end":289,"column_start":1,"column_end":10}},{"value":"/ const didc = import(\"pkg/didc\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12591,"byte_end":12627,"line_start":290,"line_end":290,"column_start":1,"column_end":37}},{"value":"/ didc.then((mod) => {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12628,"byte_end":12652,"line_start":291,"line_end":291,"column_start":1,"column_end":25}},{"value":"/   const service = \"service : {}\";","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12653,"byte_end":12690,"line_start":292,"line_end":292,"column_start":1,"column_end":38}},{"value":"/   const js = mod.did_to_js(service);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12691,"byte_end":12731,"line_start":293,"line_end":293,"column_start":1,"column_end":41}},{"value":"/ });","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12732,"byte_end":12739,"line_start":294,"line_end":294,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12740,"byte_end":12747,"line_start":295,"line_end":295,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12748,"byte_end":12751,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12752,"byte_end":12755,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"allow(clippy :: upper_case_acronyms)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12757,"byte_end":12795,"line_start":299,"line_end":299,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codegen","qualname":"::codegen","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":176}],"decl_id":null,"docs":" Provide code generation functions and types for generating code from a Candid file.","sig":null,"attributes":[{"value":"/ Provide code generation functions and types for generating code from a Candid file.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":13962,"byte_end":14049,"line_start":1,"line_end":1,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":14050,"byte_end":14053,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Each language will have its own module under this one, and a `idl_to_${language}`","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":14054,"byte_end":14139,"line_start":3,"line_end":3,"column_start":1,"column_end":86}},{"value":"/ function should be exported for simplicity.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":14140,"byte_end":14187,"line_start":4,"line_end":4,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":14188,"byte_end":14191,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The LanguageBinding is available to all and can be used to configure generation for","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":14192,"byte_end":14279,"line_start":6,"line_end":6,"column_start":1,"column_end":88}},{"value":"/ languages that are unsupported.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":14280,"byte_end":14315,"line_start":7,"line_end":7,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":39},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rust","qualname":"::codegen::rust","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":93},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":106},{"krate":0,"index":110},{"krate":0,"index":138}],"decl_id":null,"docs":" Language binding for generating Rust code from a Candid file.","sig":null,"attributes":[{"value":"/ Language binding for generating Rust code from a Candid file.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":21402,"byte_end":21467,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":21468,"byte_end":21471,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This generates a `pub trait Actor { ... }` code for the service (if there is one) and","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":21472,"byte_end":21561,"line_start":3,"line_end":3,"column_start":1,"column_end":90}},{"value":"/ a list of `pub type TypeX = ...` for each type declaration in a Candid file.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":21562,"byte_end":21642,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":21643,"byte_end":21646,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The Actor name can be configured, as well as whether to use u128/i128 for","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":21647,"byte_end":21724,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ natural/integer numbers.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":21725,"byte_end":21753,"line_start":7,"line_end":7,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":82},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":22030,"byte_end":22040,"line_start":15,"line_end":15,"column_start":8,"column_end":18},"name":"is_keyword","qualname":"::codegen::rust::is_keyword","value":"pub fn is_keyword(&str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if id is a rust keyword.\n","sig":null,"attributes":[{"value":"/ Returns true if id is a rust keyword.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":21981,"byte_end":22022,"line_start":14,"line_end":14,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":83},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":22854,"byte_end":22871,"line_start":31,"line_end":31,"column_start":8,"column_end":25},"name":"candid_id_to_rust","qualname":"::codegen::rust::candid_id_to_rust","value":"pub fn candid_id_to_rust(&str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Transforms a Candid ID into a valid Rust ID (as a string).\n In case a string cannot be used as an ID in Rust, this will replace it with a\n IDL Hash value of the ID, surrounged by `_` (e.g. `_12345_`).\n If the string is a valid Rust\n","sig":null,"attributes":[{"value":"/ Transforms a Candid ID into a valid Rust ID (as a string).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":22602,"byte_end":22664,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/ In case a string cannot be used as an ID in Rust, this will replace it with a","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":22665,"byte_end":22746,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/ IDL Hash value of the ID, surrounged by `_` (e.g. `_12345_`).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":22747,"byte_end":22812,"line_start":29,"line_end":29,"column_start":1,"column_end":66}},{"value":"/ If the string is a valid Rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":22813,"byte_end":22846,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":86},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":23522,"byte_end":23534,"line_start":49,"line_end":49,"column_start":11,"column_end":23},"name":"RustBindings","qualname":"::codegen::rust::RustBindings","value":"RustBindings","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":91}],"decl_id":null,"docs":" Allow extra bindings to be passed in for Rust generation. This is higher level\n bindings than languages ones.","sig":null,"attributes":[{"value":"/ Allow extra bindings to be passed in for Rust generation. This is higher level","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":23248,"byte_end":23330,"line_start":44,"line_end":44,"column_start":1,"column_end":83}},{"value":"/ bindings than languages ones.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":23331,"byte_end":23364,"line_start":45,"line_end":45,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":23365,"byte_end":23368,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The default implementation provided maps to a trait definition where functions are","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":23369,"byte_end":23455,"line_start":47,"line_end":47,"column_start":1,"column_end":87}},{"value":"/ empty and return Future<Output = ...> if necessary.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":23456,"byte_end":23511,"line_start":48,"line_end":48,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":23544,"byte_end":23549,"line_start":50,"line_end":50,"column_start":8,"column_end":13},"name":"actor","qualname":"::codegen::rust::RustBindings::actor","value":"pub fn actor(&Self, &str, &[String]) -> Result<String>","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":24012,"byte_end":24031,"line_start":66,"line_end":66,"column_start":8,"column_end":27},"name":"actor_function_body","qualname":"::codegen::rust::RustBindings::actor_function_body","value":"pub fn actor_function_body(&Self, &str, &[(String, String)], &str, bool)\n-> Result<String>","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":24231,"byte_end":24245,"line_start":76,"line_end":76,"column_start":8,"column_end":22},"name":"actor_function","qualname":"::codegen::rust::RustBindings::actor_function","value":"pub fn actor_function(&Self, &str, &[(String, String)], &[String], bool)\n-> Result<String>","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":25693,"byte_end":25699,"line_start":128,"line_end":128,"column_start":8,"column_end":14},"name":"record","qualname":"::codegen::rust::RustBindings::record","value":"pub fn record(&Self, &str, &[(String, String)]) -> Result<String>","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":93},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":26079,"byte_end":26085,"line_start":141,"line_end":141,"column_start":12,"column_end":18},"name":"Config","qualname":"::codegen::rust::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":26601,"byte_end":26616,"line_start":163,"line_end":163,"column_start":12,"column_end":27},"name":"with_actor_name","qualname":"<Config>::with_actor_name","value":"pub fn with_actor_name(Self, String) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":26719,"byte_end":26735,"line_start":167,"line_end":167,"column_start":12,"column_end":28},"name":"with_bigint_type","qualname":"<Config>::with_bigint_type","value":"pub fn with_bigint_type(Self, String) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":26847,"byte_end":26864,"line_start":171,"line_end":171,"column_start":12,"column_end":29},"name":"with_biguint_type","qualname":"<Config>::with_biguint_type","value":"pub fn with_biguint_type(Self, String) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":26977,"byte_end":26990,"line_start":175,"line_end":175,"column_start":12,"column_end":25},"name":"with_bindings","qualname":"<Config>::with_bindings","value":"pub fn with_bindings(Self, Box<dyn RustBindings>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":138},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":33984,"byte_end":33995,"line_start":381,"line_end":381,"column_start":8,"column_end":19},"name":"idl_to_rust","qualname":"::codegen::rust::idl_to_rust","value":"pub fn idl_to_rust(&IDLProg, &Config) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Takes an IDL string and returns a Rust string, unformatted.\n","sig":null,"attributes":[{"value":"/ Takes an IDL string and returns a Rust string, unformatted.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":33913,"byte_end":33976,"line_start":380,"line_end":380,"column_start":1,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":144},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":14519,"byte_end":14534,"line_start":16,"line_end":16,"column_start":11,"column_end":26},"name":"LanguageBinding","qualname":"::codegen::LanguageBinding","value":"LanguageBinding","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":175}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":14599,"byte_end":14604,"line_start":18,"line_end":18,"column_start":8,"column_end":13},"name":"start","qualname":"::codegen::LanguageBinding::start","value":"pub fn start(&Self) -> Result<()>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Called when the program starts to be analyzed.\n","sig":null,"attributes":[{"value":"/ Called when the program starts to be analyzed.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":14541,"byte_end":14591,"line_start":17,"line_end":17,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":14811,"byte_end":14815,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"done","qualname":"::codegen::LanguageBinding::done","value":"pub fn done(&Self, String) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Called when the code generation is done, with the output intended.\n The return value of this function will be the actual string outputted.\n","sig":null,"attributes":[{"value":"/ Called when the code generation is done, with the output intended.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":14654,"byte_end":14724,"line_start":22,"line_end":22,"column_start":5,"column_end":75}},{"value":"/ The return value of this function will be the actual string outputted.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":14729,"byte_end":14803,"line_start":23,"line_end":23,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":14956,"byte_end":14962,"line_start":29,"line_end":29,"column_start":8,"column_end":14},"name":"header","qualname":"::codegen::LanguageBinding::header","value":"pub fn header(&Self) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" The header string that will be prepended to the output.\n","sig":null,"attributes":[{"value":"/ The header string that will be prepended to the output.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":14889,"byte_end":14948,"line_start":28,"line_end":28,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":15093,"byte_end":15099,"line_start":34,"line_end":34,"column_start":8,"column_end":14},"name":"footer","qualname":"::codegen::LanguageBinding::footer","value":"pub fn footer(&Self) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" The footer string that will be appended to the output.\n","sig":null,"attributes":[{"value":"/ The footer string that will be appended to the output.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":15027,"byte_end":15085,"line_start":33,"line_end":33,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":15312,"byte_end":15317,"line_start":40,"line_end":40,"column_start":8,"column_end":13},"name":"usage","qualname":"::codegen::LanguageBinding::usage","value":"pub fn usage(&Self, &IDLType) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" This method is called when a type is used as a right hand side. By default\n it forwards it to a specialized method for each type.\n","sig":null,"attributes":[{"value":"/ This method is called when a type is used as a right hand side. By default","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":15164,"byte_end":15242,"line_start":38,"line_end":38,"column_start":5,"column_end":83}},{"value":"/ it forwards it to a specialized method for each type.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":15247,"byte_end":15304,"line_start":39,"line_end":39,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":16102,"byte_end":16112,"line_start":56,"line_end":56,"column_start":8,"column_end":18},"name":"usage_prim","qualname":"::codegen::LanguageBinding::usage_prim","value":"pub fn usage_prim(&Self, &PrimType) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" String to use when using a primary type as a right hand side.\n","sig":null,"attributes":[{"value":"/ String to use when using a primary type as a right hand side.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":16029,"byte_end":16094,"line_start":55,"line_end":55,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":16233,"byte_end":16242,"line_start":59,"line_end":59,"column_start":8,"column_end":17},"name":"usage_var","qualname":"::codegen::LanguageBinding::usage_var","value":"pub fn usage_var(&Self, &str) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" String to use when using a var reference as a right hand side.\n","sig":null,"attributes":[{"value":"/ String to use when using a var reference as a right hand side.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":16159,"byte_end":16225,"line_start":58,"line_end":58,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":16359,"byte_end":16369,"line_start":62,"line_end":62,"column_start":8,"column_end":18},"name":"usage_func","qualname":"::codegen::LanguageBinding::usage_func","value":"pub fn usage_func(&Self, &FuncType) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" String to use when using a function type as a right hand side.\n","sig":null,"attributes":[{"value":"/ String to use when using a function type as a right hand side.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":16285,"byte_end":16351,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":16493,"byte_end":16502,"line_start":65,"line_end":65,"column_start":8,"column_end":17},"name":"usage_opt","qualname":"::codegen::LanguageBinding::usage_opt","value":"pub fn usage_opt(&Self, &IDLType) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" String to use when using an optional type as a right hand side.\n","sig":null,"attributes":[{"value":"/ String to use when using an optional type as a right hand side.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":16418,"byte_end":16485,"line_start":64,"line_end":64,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":16620,"byte_end":16629,"line_start":68,"line_end":68,"column_start":8,"column_end":17},"name":"usage_vec","qualname":"::codegen::LanguageBinding::usage_vec","value":"pub fn usage_vec(&Self, &IDLType) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" String to use when using a vector type as a right hand side.\n","sig":null,"attributes":[{"value":"/ String to use when using a vector type as a right hand side.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":16548,"byte_end":16612,"line_start":67,"line_end":67,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":16747,"byte_end":16759,"line_start":71,"line_end":71,"column_start":8,"column_end":20},"name":"usage_record","qualname":"::codegen::LanguageBinding::usage_record","value":"pub fn usage_record(&Self, &[TypeField]) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" String to use when using a record type as a right hand side.\n","sig":null,"attributes":[{"value":"/ String to use when using a record type as a right hand side.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":16675,"byte_end":16739,"line_start":70,"line_end":70,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":16886,"byte_end":16899,"line_start":74,"line_end":74,"column_start":8,"column_end":21},"name":"usage_variant","qualname":"::codegen::LanguageBinding::usage_variant","value":"pub fn usage_variant(&Self, &[TypeField]) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" String to use when using a variant type as a right hand side.\n","sig":null,"attributes":[{"value":"/ String to use when using a variant type as a right hand side.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":16813,"byte_end":16878,"line_start":73,"line_end":73,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":17026,"byte_end":17039,"line_start":77,"line_end":77,"column_start":8,"column_end":21},"name":"usage_service","qualname":"::codegen::LanguageBinding::usage_service","value":"pub fn usage_service(&Self, &[Binding]) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" String to use when using a service type as a right hand side.\n","sig":null,"attributes":[{"value":"/ String to use when using a service type as a right hand side.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":16953,"byte_end":17018,"line_start":76,"line_end":76,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":17294,"byte_end":17301,"line_start":82,"line_end":82,"column_start":8,"column_end":15},"name":"declare","qualname":"::codegen::LanguageBinding::declare","value":"pub fn declare(&Self, &str, &IDLType) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" String to use when declaring a type. This receives the ID of the type,\n and the right hand side of the type itself. By default it forwards it to a\n specialized method for each type.\n","sig":null,"attributes":[{"value":"/ String to use when declaring a type. This receives the ID of the type,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":17087,"byte_end":17161,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/ and the right hand side of the type itself. By default it forwards it to a","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":17166,"byte_end":17244,"line_start":80,"line_end":80,"column_start":5,"column_end":83}},{"value":"/ specialized method for each type.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":17249,"byte_end":17286,"line_start":81,"line_end":81,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":18129,"byte_end":18141,"line_start":98,"line_end":98,"column_start":8,"column_end":20},"name":"declare_prim","qualname":"::codegen::LanguageBinding::declare_prim","value":"pub fn declare_prim(&Self, &str, &PrimType) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Function called when declaring a primary type.\n","sig":null,"attributes":[{"value":"/ Function called when declaring a primary type.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":18071,"byte_end":18121,"line_start":97,"line_end":97,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":18262,"byte_end":18273,"line_start":101,"line_end":101,"column_start":8,"column_end":19},"name":"declare_var","qualname":"::codegen::LanguageBinding::declare_var","value":"pub fn declare_var(&Self, &str, &str) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Function called when declaring a var reference type.\n","sig":null,"attributes":[{"value":"/ Function called when declaring a var reference type.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":18198,"byte_end":18254,"line_start":100,"line_end":100,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":18385,"byte_end":18397,"line_start":104,"line_end":104,"column_start":8,"column_end":20},"name":"declare_func","qualname":"::codegen::LanguageBinding::declare_func","value":"pub fn declare_func(&Self, &str, &FuncType) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Function called when declaring a function type.\n","sig":null,"attributes":[{"value":"/ Function called when declaring a function type.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":18326,"byte_end":18377,"line_start":103,"line_end":103,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":18515,"byte_end":18526,"line_start":107,"line_end":107,"column_start":8,"column_end":19},"name":"declare_opt","qualname":"::codegen::LanguageBinding::declare_opt","value":"pub fn declare_opt(&Self, &str, &IDLType) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Function called when declaring a optional type.\n","sig":null,"attributes":[{"value":"/ Function called when declaring a optional type.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":18456,"byte_end":18507,"line_start":106,"line_end":106,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":18639,"byte_end":18650,"line_start":110,"line_end":110,"column_start":8,"column_end":19},"name":"declare_vec","qualname":"::codegen::LanguageBinding::declare_vec","value":"pub fn declare_vec(&Self, &str, &IDLType) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Function called when declaring a vector type.\n","sig":null,"attributes":[{"value":"/ Function called when declaring a vector type.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":18582,"byte_end":18631,"line_start":109,"line_end":109,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":18763,"byte_end":18777,"line_start":113,"line_end":113,"column_start":8,"column_end":22},"name":"declare_record","qualname":"::codegen::LanguageBinding::declare_record","value":"pub fn declare_record(&Self, &str, &[TypeField]) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Function called when declaring a record type.\n","sig":null,"attributes":[{"value":"/ Function called when declaring a record type.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":18706,"byte_end":18755,"line_start":112,"line_end":112,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":18899,"byte_end":18914,"line_start":116,"line_end":116,"column_start":8,"column_end":23},"name":"declare_variant","qualname":"::codegen::LanguageBinding::declare_variant","value":"pub fn declare_variant(&Self, &str, &[TypeField]) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Function called when declaring a variant type.\n","sig":null,"attributes":[{"value":"/ Function called when declaring a variant type.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":18841,"byte_end":18891,"line_start":115,"line_end":115,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":19036,"byte_end":19051,"line_start":119,"line_end":119,"column_start":8,"column_end":23},"name":"declare_service","qualname":"::codegen::LanguageBinding::declare_service","value":"pub fn declare_service(&Self, &str, &[Binding]) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Function called when declaring a service type.\n","sig":null,"attributes":[{"value":"/ Function called when declaring a service type.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":18978,"byte_end":19028,"line_start":118,"line_end":118,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":19170,"byte_end":19188,"line_start":122,"line_end":122,"column_start":8,"column_end":26},"name":"declaration_import","qualname":"::codegen::LanguageBinding::declaration_import","value":"pub fn declaration_import(&Self, &str) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Function called when an import statement is used.\n","sig":null,"attributes":[{"value":"/ Function called when an import statement is used.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":19109,"byte_end":19162,"line_start":121,"line_end":121,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":19331,"byte_end":19350,"line_start":127,"line_end":127,"column_start":8,"column_end":27},"name":"declaration_binding","qualname":"::codegen::LanguageBinding::declaration_binding","value":"pub fn declaration_binding(&Self, &Binding) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Function called when a declaration binding is used.\n","sig":null,"attributes":[{"value":"/ Function called when a declaration binding is used.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":19268,"byte_end":19323,"line_start":126,"line_end":126,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":19522,"byte_end":19534,"line_start":132,"line_end":132,"column_start":8,"column_end":20},"name":"declarations","qualname":"::codegen::LanguageBinding::declarations","value":"pub fn declarations(&Self, &[Dec]) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Function called for all declarations in a Candid file.\n","sig":null,"attributes":[{"value":"/ Function called for all declarations in a Candid file.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":19456,"byte_end":19514,"line_start":131,"line_end":131,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":20120,"byte_end":20127,"line_start":146,"line_end":146,"column_start":8,"column_end":15},"name":"service","qualname":"::codegen::LanguageBinding::service","value":"pub fn service(&Self, &[Binding]) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Function called when declaring the service (or actor) of a candid file. By default\n returns the result of calling `service_binding` on all bindings, and returning a\n string separated by `\\n`.\n","sig":null,"attributes":[{"value":"/ Function called when declaring the service (or actor) of a candid file. By default","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":19903,"byte_end":19989,"line_start":143,"line_end":143,"column_start":5,"column_end":91}},{"value":"/ returns the result of calling `service_binding` on all bindings, and returning a","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":19994,"byte_end":20078,"line_start":144,"line_end":144,"column_start":5,"column_end":89}},{"value":"/ string separated by `\\n`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":20083,"byte_end":20112,"line_start":145,"line_end":145,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":20556,"byte_end":20571,"line_start":158,"line_end":158,"column_start":8,"column_end":23},"name":"service_binding","qualname":"::codegen::LanguageBinding::service_binding","value":"pub fn service_binding(&Self, &str, &FuncType) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Function called when declaring a binding inside a service.\n","sig":null,"attributes":[{"value":"/ Function called when declaring a binding inside a service.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":20486,"byte_end":20548,"line_start":157,"line_end":157,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":20709,"byte_end":20713,"line_start":161,"line_end":161,"column_start":8,"column_end":12},"name":"prog","qualname":"::codegen::LanguageBinding::prog","value":"pub fn prog(&Self, &IDLProg) -> Result<String>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" The main function which is called when starting the code generation.\n","sig":null,"attributes":[{"value":"/ The main function which is called when starting the code generation.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":20629,"byte_end":20701,"line_start":160,"line_end":160,"column_start":5,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":176},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":21251,"byte_end":21264,"line_start":179,"line_end":179,"column_start":8,"column_end":21},"name":"generate_code","qualname":"::codegen::generate_code","value":"pub fn generate_code<Binding: LanguageBinding>(&IDLProg, Binding)\n-> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Generates code using the passed language binding.\n","sig":null,"attributes":[{"value":"/ Generates code using the passed language binding.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":21190,"byte_end":21243,"line_start":178,"line_end":178,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":181},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bindings","qualname":"::bindings","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/mod.rs","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":204},{"krate":0,"index":249},{"krate":0,"index":365},{"krate":0,"index":410}],"decl_id":null,"docs":" Candid bindings for different languages.\n","sig":null,"attributes":[{"value":"/ Candid bindings for different languages.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/mod.rs","byte_start":34142,"byte_end":34186,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":182},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/analysis.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"analysis","qualname":"::bindings::analysis","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/analysis.rs","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":199}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":192},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/analysis.rs","byte_start":34567,"byte_end":34577,"line_start":6,"line_end":6,"column_start":8,"column_end":18},"name":"chase_type","qualname":"::bindings::analysis::chase_type","value":"pub fn chase_type<'a>(&mut BTreeSet<&'a str>, &mut Vec<&'a str>, &'a TypeEnv,\n                      &'a Type) -> crate::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Same as chase_actor, with seen set as part of the type. Used for chasing type names from type definitions.\n","sig":null,"attributes":[{"value":"/ Same as chase_actor, with seen set as part of the type. Used for chasing type names from type definitions.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/analysis.rs","byte_start":34449,"byte_end":34559,"line_start":5,"line_end":5,"column_start":1,"column_end":111}}]},{"kind":"Function","id":{"krate":0,"index":195},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/analysis.rs","byte_start":35817,"byte_end":35828,"line_start":50,"line_end":50,"column_start":8,"column_end":19},"name":"chase_actor","qualname":"::bindings::analysis::chase_actor","value":"pub fn chase_actor<'a>(&'a TypeEnv, &'a Type) -> crate::Result<Vec<&'a str>>","parent":null,"children":[],"decl_id":null,"docs":" Gather type definitions mentioned in actor, return the non-recursive type names in topological order.\n Recursive types can appear in any order.\n","sig":null,"attributes":[{"value":"/ Gather type definitions mentioned in actor, return the non-recursive type names in topological order.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/analysis.rs","byte_start":35659,"byte_end":35764,"line_start":48,"line_end":48,"column_start":1,"column_end":106}},{"value":"/ Recursive types can appear in any order.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/analysis.rs","byte_start":35765,"byte_end":35809,"line_start":49,"line_end":49,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":197},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/analysis.rs","byte_start":36039,"byte_end":36050,"line_start":57,"line_end":57,"column_start":8,"column_end":19},"name":"chase_types","qualname":"::bindings::analysis::chase_types","value":"pub fn chase_types<'a>(&'a TypeEnv, &'a [Type]) -> crate::Result<Vec<&'a str>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":199},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/analysis.rs","byte_start":36388,"byte_end":36397,"line_start":67,"line_end":67,"column_start":8,"column_end":17},"name":"infer_rec","qualname":"::bindings::analysis::infer_rec","value":"pub fn infer_rec<'a>(&'a TypeEnv, &'a [&'a str])\n-> crate::Result<BTreeSet<&'a str>>","parent":null,"children":[],"decl_id":null,"docs":" Given a `def_list` produced by the `chase_actor` function, infer which types are recursive\n","sig":null,"attributes":[{"value":"/ Given a `def_list` produced by the `chase_actor` function, infer which types are recursive","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/analysis.rs","byte_start":36286,"byte_end":36380,"line_start":66,"line_end":66,"column_start":1,"column_end":95}}]},{"kind":"Mod","id":{"krate":0,"index":204},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/candid.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"candid","qualname":"::bindings::candid","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/candid.rs","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":232},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/candid.rs","byte_start":39152,"byte_end":39157,"line_start":74,"line_end":74,"column_start":8,"column_end":13},"name":"pp_ty","qualname":"::bindings::candid::pp_ty","value":"pub fn pp_ty(&Type) -> RcDoc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":235},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/candid.rs","byte_start":40840,"byte_end":40848,"line_start":122,"line_end":122,"column_start":8,"column_end":16},"name":"pp_label","qualname":"::bindings::candid::pp_label","value":"pub fn pp_label(&Label) -> RcDoc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":239},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/candid.rs","byte_start":41420,"byte_end":41431,"line_start":143,"line_end":143,"column_start":8,"column_end":19},"name":"pp_function","qualname":"::bindings::candid::pp_function","value":"pub fn pp_function(&Function) -> RcDoc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":248},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/candid.rs","byte_start":42809,"byte_end":42816,"line_start":195,"line_end":195,"column_start":8,"column_end":15},"name":"compile","qualname":"::bindings::candid::compile","value":"pub fn compile(&TypeEnv, &Option<Type>) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":249},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/javascript.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"javascript","qualname":"::bindings::javascript","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/javascript.rs","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":337}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":305},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/javascript.rs","byte_start":48877,"byte_end":48884,"line_start":234,"line_end":234,"column_start":8,"column_end":15},"name":"compile","qualname":"::bindings::javascript::compile","value":"pub fn compile(&TypeEnv, &Option<Type>) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":307},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/javascript.rs","byte_start":50538,"byte_end":50543,"line_start":270,"line_end":270,"column_start":9,"column_end":14},"name":"value","qualname":"::bindings::javascript::value","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/javascript.rs","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":336}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":332},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/javascript.rs","byte_start":51457,"byte_end":51465,"line_start":303,"line_end":303,"column_start":12,"column_end":20},"name":"pp_value","qualname":"::bindings::javascript::value::pp_value","value":"pub fn pp_value(&IDLValue) -> RcDoc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":336},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/javascript.rs","byte_start":53211,"byte_end":53218,"line_start":344,"line_end":344,"column_start":12,"column_end":19},"name":"pp_args","qualname":"::bindings::javascript::value::pp_args","value":"pub fn pp_args(&IDLArgs) -> RcDoc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":337},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/javascript.rs","byte_start":53359,"byte_end":53363,"line_start":350,"line_end":350,"column_start":9,"column_end":13},"name":"test","qualname":"::bindings::javascript::test","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/javascript.rs","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":363}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":363},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/javascript.rs","byte_start":54339,"byte_end":54352,"line_start":378,"line_end":378,"column_start":12,"column_end":25},"name":"test_generate","qualname":"::bindings::javascript::test::test_generate","value":"pub fn test_generate(Test) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":365},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/motoko.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"motoko","qualname":"::bindings::motoko","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/motoko.rs","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":409}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":409},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/motoko.rs","byte_start":62851,"byte_end":62858,"line_start":223,"line_end":223,"column_start":8,"column_end":15},"name":"compile","qualname":"::bindings::motoko::compile","value":"pub fn compile(&TypeEnv, &Option<Type>) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":410},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/typescript.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"typescript","qualname":"::bindings::typescript","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/typescript.rs","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":459}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":459},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/typescript.rs","byte_start":68549,"byte_end":68556,"line_start":155,"line_end":155,"column_start":8,"column_end":15},"name":"compile","qualname":"::bindings::typescript::compile","value":"pub fn compile(&TypeEnv, &Option<Type>) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":461},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2226},{"krate":0,"index":2231},{"krate":0,"index":2240},{"krate":0,"index":2242},{"krate":0,"index":501},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":525},{"krate":0,"index":528}],"decl_id":null,"docs":" `candid::Result<T> = Result<T, candid::Error>>`\n","sig":null,"attributes":[{"value":"/ `candid::Result<T> = Result<T, candid::Error>>`","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":69066,"byte_end":69117,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":499},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":69402,"byte_end":69408,"line_start":12,"line_end":12,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2246},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":69537,"byte_end":69542,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Parse","qualname":"::error::Error::Parse","value":"Error::Parse(token::ParserError)","parent":{"krate":0,"index":2223},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Candid parser error: {0}\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":69496,"byte_end":69532,"line_start":16,"line_end":16,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2249},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":69739,"byte_end":69746,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"Binread","qualname":"::error::Error::Binread","value":"Error::Binread(Vec<Label<()>>)","parent":{"krate":0,"index":2223},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"binary parser error: {}\",.0.get(0).map(| f | format!\n                                                (\"{} at byte offset {}\",\n                                                 f.message, f.range.start /\n                                                 2)).unwrap_or_else(||\n                                                                    \"io error\".to_string()))","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":69577,"byte_end":69734,"line_start":19,"line_end":19,"column_start":5,"column_end":162}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2252},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":69795,"byte_end":69801,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Custom","qualname":"::error::Error::Custom","value":"Error::Custom(anyhow::Error)","parent":{"krate":0,"index":2223},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":69769,"byte_end":69790,"line_start":22,"line_end":22,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":2223},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":69484,"byte_end":69489,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    Parse(token::ParserError),\n    Binread(Vec<Label<()>>),\n    Custom(anyhow::Error),\n}","parent":null,"children":[{"krate":0,"index":2246},{"krate":0,"index":2249},{"krate":0,"index":2252}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":69853,"byte_end":69856,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"msg","qualname":"<Error>::msg","value":"pub fn msg<T: ToString>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":69961,"byte_end":69967,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"report","qualname":"<Error>::report","value":"pub fn report(&Self) -> Diagnostic<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":525},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":74772,"byte_end":74784,"line_start":171,"line_end":171,"column_start":8,"column_end":20},"name":"pretty_parse","qualname":"::error::pretty_parse","value":"pub fn pretty_parse<T>(&str, &str) -> Result<T> where T: std::str::FromStr<Err\n= Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":528},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":75182,"byte_end":75193,"line_start":184,"line_end":184,"column_start":8,"column_end":19},"name":"pretty_read","qualname":"::error::pretty_read","value":"pub fn pretty_read<T>(&mut std::io::Cursor<&[u8]>) -> Result<T> where\nT: binread::BinRead","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":544},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":698},{"krate":0,"index":783},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":1022},{"krate":0,"index":1044},{"krate":0,"index":1113},{"krate":0,"index":1168},{"krate":0,"index":1174},{"krate":0,"index":1201}],"decl_id":null,"docs":" Provides Candid type conversion and serialization.\n  * `CandidType` trait converts a Rust type to Candid type `types::Type`. The implementation for user-defined data types can be derived from `candid_derive` crate.\n  * `Serializer` trait serializes a Rust value to Candid binary format.\n    We do not use Serde's `Serialize` trait because Candid requires serializing types along with the values.\n    This is difficult to achieve in `Serialize`, especially for enum types.\n","sig":null,"attributes":[{"value":"/ Provides Candid type conversion and serialization.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":75670,"byte_end":75724,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/  * `CandidType` trait converts a Rust type to Candid type `types::Type`. The implementation for user-defined data types can be derived from `candid_derive` crate.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":75725,"byte_end":75891,"line_start":2,"line_end":2,"column_start":1,"column_end":167}},{"value":"/  * `Serializer` trait serializes a Rust value to Candid binary format.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":75892,"byte_end":75966,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/    We do not use Serde's `Serialize` trait because Candid requires serializing types along with the values.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":75967,"byte_end":76078,"line_start":4,"line_end":4,"column_start":1,"column_end":112}},{"value":"/    This is difficult to achieve in `Serialize`, especially for enum types.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":76079,"byte_end":76157,"line_start":5,"line_end":5,"column_start":1,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":698},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"internal","qualname":"::types::internal","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":2754},{"krate":0,"index":2757},{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2763},{"krate":0,"index":2764},{"krate":0,"index":2766},{"krate":0,"index":2769},{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":2771},{"krate":0,"index":2774},{"krate":0,"index":723},{"krate":0,"index":2776},{"krate":0,"index":2778},{"krate":0,"index":726},{"krate":0,"index":2780},{"krate":0,"index":2847},{"krate":0,"index":2849},{"krate":0,"index":2850},{"krate":0,"index":2853},{"krate":0,"index":2856},{"krate":0,"index":2857},{"krate":0,"index":2859},{"krate":0,"index":740},{"krate":0,"index":750},{"krate":0,"index":2861},{"krate":0,"index":2871},{"krate":0,"index":2873},{"krate":0,"index":2874},{"krate":0,"index":2876},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":2878},{"krate":0,"index":2881},{"krate":0,"index":2883},{"krate":0,"index":2884},{"krate":0,"index":2887},{"krate":0,"index":2890},{"krate":0,"index":2891},{"krate":0,"index":2893},{"krate":0,"index":2895},{"krate":0,"index":2899},{"krate":0,"index":2901},{"krate":0,"index":2902},{"krate":0,"index":2905},{"krate":0,"index":2908},{"krate":0,"index":2909},{"krate":0,"index":2911},{"krate":0,"index":761},{"krate":0,"index":763},{"krate":0,"index":2913},{"krate":0,"index":2986},{"krate":0,"index":2988},{"krate":0,"index":2989},{"krate":0,"index":2991},{"krate":0,"index":3019},{"krate":0,"index":765},{"krate":0,"index":767},{"krate":0,"index":3022},{"krate":0,"index":3026},{"krate":0,"index":3030},{"krate":0,"index":771},{"krate":0,"index":773},{"krate":0,"index":775},{"krate":0,"index":777},{"krate":0,"index":779},{"krate":0,"index":781}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2754},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":93290,"byte_end":93296,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"TypeId","qualname":"::types::internal::TypeId","value":"TypeId { name }","parent":null,"children":[{"krate":0,"index":2755},{"krate":0,"index":2756}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2756},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":93322,"byte_end":93326,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"name","qualname":"::types::internal::TypeId::name","value":"&'static str","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":93369,"byte_end":93371,"line_start":17,"line_end":17,"column_start":12,"column_end":14},"name":"of","qualname":"<TypeId>::of","value":"pub fn of<T: ?Sized>() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2776},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":96036,"byte_end":96049,"line_start":82,"line_end":82,"column_start":12,"column_end":25},"name":"TypeContainer","qualname":"::types::internal::TypeContainer","value":"TypeContainer { env }","parent":null,"children":[{"krate":0,"index":2777}],"decl_id":null,"docs":" Used for `candid_derive::export_service` to generate `TypeEnv` from `Type`.","sig":null,"attributes":[{"value":"/ Used for `candid_derive::export_service` to generate `TypeEnv` from `Type`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":95182,"byte_end":95261,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":95262,"byte_end":95265,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ It performs a global rewriting of `Type` to resolve:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":95266,"byte_end":95322,"line_start":72,"line_end":72,"column_start":1,"column_end":57}},{"value":"/ * Duplicate type names in different modules/namespaces.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":95323,"byte_end":95382,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/ * Give different names to instantiated polymorphic types.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":95383,"byte_end":95444,"line_start":74,"line_end":74,"column_start":1,"column_end":62}},{"value":"/ * Find the type name of a recursive node `Knot(TypeId)` and convert to `Var` node.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":95445,"byte_end":95531,"line_start":75,"line_end":75,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":95532,"byte_end":95535,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ There are some drawbacks of this approach:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":95536,"byte_end":95582,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"/ * The type name is based on `type_name::<T>()`, whose format is unspecified and long. We use some regex to shorten the name.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":95583,"byte_end":95711,"line_start":78,"line_end":78,"column_start":1,"column_end":129}},{"value":"/ * Several Rust types can map to the same Candid type, and we only get to remember one name (currently we choose the shortest name). As a result, some of the type names in Rust is lost.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":95712,"byte_end":95900,"line_start":79,"line_end":79,"column_start":1,"column_end":189}},{"value":"/ * Unless we do equivalence checking, recursive types can be unrolled and assigned to multiple names.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":95901,"byte_end":96005,"line_start":80,"line_end":80,"column_start":1,"column_end":105}}]},{"kind":"Field","id":{"krate":0,"index":2777},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":96060,"byte_end":96063,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"name":"env","qualname":"::types::internal::TypeContainer::env","value":"parser::typing::TypeEnv","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":96115,"byte_end":96118,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeContainer>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":96222,"byte_end":96225,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"add","qualname":"<TypeContainer>::add","value":"pub fn add<T: CandidType>(&mut Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2781},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":98959,"byte_end":98963,"line_start":165,"line_end":165,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::internal::Type::Null","value":"Type::Null","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2783},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":98969,"byte_end":98973,"line_start":166,"line_end":166,"column_start":5,"column_end":9},"name":"Bool","qualname":"::types::internal::Type::Bool","value":"Type::Bool","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2785},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":98979,"byte_end":98982,"line_start":167,"line_end":167,"column_start":5,"column_end":8},"name":"Nat","qualname":"::types::internal::Type::Nat","value":"Type::Nat","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2787},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":98988,"byte_end":98991,"line_start":168,"line_end":168,"column_start":5,"column_end":8},"name":"Int","qualname":"::types::internal::Type::Int","value":"Type::Int","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2789},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":98997,"byte_end":99001,"line_start":169,"line_end":169,"column_start":5,"column_end":9},"name":"Nat8","qualname":"::types::internal::Type::Nat8","value":"Type::Nat8","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2791},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99007,"byte_end":99012,"line_start":170,"line_end":170,"column_start":5,"column_end":10},"name":"Nat16","qualname":"::types::internal::Type::Nat16","value":"Type::Nat16","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2793},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99018,"byte_end":99023,"line_start":171,"line_end":171,"column_start":5,"column_end":10},"name":"Nat32","qualname":"::types::internal::Type::Nat32","value":"Type::Nat32","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2795},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99029,"byte_end":99034,"line_start":172,"line_end":172,"column_start":5,"column_end":10},"name":"Nat64","qualname":"::types::internal::Type::Nat64","value":"Type::Nat64","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2797},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99040,"byte_end":99044,"line_start":173,"line_end":173,"column_start":5,"column_end":9},"name":"Int8","qualname":"::types::internal::Type::Int8","value":"Type::Int8","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2799},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99050,"byte_end":99055,"line_start":174,"line_end":174,"column_start":5,"column_end":10},"name":"Int16","qualname":"::types::internal::Type::Int16","value":"Type::Int16","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2801},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99061,"byte_end":99066,"line_start":175,"line_end":175,"column_start":5,"column_end":10},"name":"Int32","qualname":"::types::internal::Type::Int32","value":"Type::Int32","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2803},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99072,"byte_end":99077,"line_start":176,"line_end":176,"column_start":5,"column_end":10},"name":"Int64","qualname":"::types::internal::Type::Int64","value":"Type::Int64","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2805},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99083,"byte_end":99090,"line_start":177,"line_end":177,"column_start":5,"column_end":12},"name":"Float32","qualname":"::types::internal::Type::Float32","value":"Type::Float32","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2807},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99096,"byte_end":99103,"line_start":178,"line_end":178,"column_start":5,"column_end":12},"name":"Float64","qualname":"::types::internal::Type::Float64","value":"Type::Float64","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2809},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99109,"byte_end":99113,"line_start":179,"line_end":179,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::internal::Type::Text","value":"Type::Text","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2811},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99119,"byte_end":99127,"line_start":180,"line_end":180,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::types::internal::Type::Reserved","value":"Type::Reserved","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2813},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99133,"byte_end":99138,"line_start":181,"line_end":181,"column_start":5,"column_end":10},"name":"Empty","qualname":"::types::internal::Type::Empty","value":"Type::Empty","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2815},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99144,"byte_end":99148,"line_start":182,"line_end":182,"column_start":5,"column_end":9},"name":"Knot","qualname":"::types::internal::Type::Knot","value":"Type::Knot(TypeId)","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2818},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99195,"byte_end":99198,"line_start":183,"line_end":183,"column_start":5,"column_end":8},"name":"Var","qualname":"::types::internal::Type::Var","value":"Type::Var(String)","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2821},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99247,"byte_end":99254,"line_start":184,"line_end":184,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::types::internal::Type::Unknown","value":"Type::Unknown","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2823},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99260,"byte_end":99263,"line_start":185,"line_end":185,"column_start":5,"column_end":8},"name":"Opt","qualname":"::types::internal::Type::Opt","value":"Type::Opt(Box<Type>)","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2826},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99280,"byte_end":99283,"line_start":186,"line_end":186,"column_start":5,"column_end":8},"name":"Vec","qualname":"::types::internal::Type::Vec","value":"Type::Vec(Box<Type>)","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2829},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99300,"byte_end":99306,"line_start":187,"line_end":187,"column_start":5,"column_end":11},"name":"Record","qualname":"::types::internal::Type::Record","value":"Type::Record(Vec<Field>)","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2832},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99324,"byte_end":99331,"line_start":188,"line_end":188,"column_start":5,"column_end":12},"name":"Variant","qualname":"::types::internal::Type::Variant","value":"Type::Variant(Vec<Field>)","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2835},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99349,"byte_end":99353,"line_start":189,"line_end":189,"column_start":5,"column_end":9},"name":"Func","qualname":"::types::internal::Type::Func","value":"Type::Func(Function)","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2838},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99369,"byte_end":99376,"line_start":190,"line_end":190,"column_start":5,"column_end":12},"name":"Service","qualname":"::types::internal::Type::Service","value":"Type::Service(Vec<(String, Type)>)","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2841},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99403,"byte_end":99408,"line_start":191,"line_end":191,"column_start":5,"column_end":10},"name":"Class","qualname":"::types::internal::Type::Class","value":"Type::Class(Vec<Type>, Box<Type>)","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2845},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99436,"byte_end":99445,"line_start":192,"line_end":192,"column_start":5,"column_end":14},"name":"Principal","qualname":"::types::internal::Type::Principal","value":"Type::Principal","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2780},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":98948,"byte_end":98952,"line_start":164,"line_end":164,"column_start":10,"column_end":14},"name":"Type","qualname":"::types::internal::Type","value":"pub enum Type {\n    Null,\n    Bool,\n    Nat,\n    Int,\n    Nat8,\n    Nat16,\n    Nat32,\n    Nat64,\n    Int8,\n    Int16,\n    Int32,\n    Int64,\n    Float32,\n    Float64,\n    Text,\n    Reserved,\n    Empty,\n    Knot(TypeId),\n    Var(String),\n    Unknown,\n    Opt(Box<Type>),\n    Vec(Box<Type>),\n    Record(Vec<Field>),\n    Variant(Vec<Field>),\n    Func(Function),\n    Service(Vec<(String, Type)>),\n    Class(Vec<Type>, Box<Type>),\n    Principal,\n}","parent":null,"children":[{"krate":0,"index":2781},{"krate":0,"index":2783},{"krate":0,"index":2785},{"krate":0,"index":2787},{"krate":0,"index":2789},{"krate":0,"index":2791},{"krate":0,"index":2793},{"krate":0,"index":2795},{"krate":0,"index":2797},{"krate":0,"index":2799},{"krate":0,"index":2801},{"krate":0,"index":2803},{"krate":0,"index":2805},{"krate":0,"index":2807},{"krate":0,"index":2809},{"krate":0,"index":2811},{"krate":0,"index":2813},{"krate":0,"index":2815},{"krate":0,"index":2818},{"krate":0,"index":2821},{"krate":0,"index":2823},{"krate":0,"index":2826},{"krate":0,"index":2829},{"krate":0,"index":2832},{"krate":0,"index":2835},{"krate":0,"index":2838},{"krate":0,"index":2841},{"krate":0,"index":2845}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99843,"byte_end":99848,"line_start":208,"line_end":208,"column_start":12,"column_end":17},"name":"subst","qualname":"<Type>::subst","value":"pub fn subst(Self, &std::collections::BTreeMap<String, String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2862},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":101586,"byte_end":101588,"line_start":259,"line_end":259,"column_start":5,"column_end":7},"name":"Id","qualname":"::types::internal::Label::Id","value":"Label::Id(u32)","parent":{"krate":0,"index":2861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2865},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":101599,"byte_end":101604,"line_start":260,"line_end":260,"column_start":5,"column_end":10},"name":"Named","qualname":"::types::internal::Label::Named","value":"Label::Named(String)","parent":{"krate":0,"index":2861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2868},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":101618,"byte_end":101625,"line_start":261,"line_end":261,"column_start":5,"column_end":12},"name":"Unnamed","qualname":"::types::internal::Label::Unnamed","value":"Label::Unnamed(u32)","parent":{"krate":0,"index":2861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2861},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":101574,"byte_end":101579,"line_start":258,"line_end":258,"column_start":10,"column_end":15},"name":"Label","qualname":"::types::internal::Label","value":"pub enum Label { Id(u32), Named(String), Unnamed(u32), }","parent":null,"children":[{"krate":0,"index":2862},{"krate":0,"index":2865},{"krate":0,"index":2868}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":101659,"byte_end":101665,"line_start":265,"line_end":265,"column_start":12,"column_end":18},"name":"get_id","qualname":"<Label>::get_id","value":"pub fn get_id(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2878},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":102475,"byte_end":102480,"line_start":298,"line_end":298,"column_start":12,"column_end":17},"name":"Field","qualname":"::types::internal::Field","value":"Field { id, ty }","parent":null,"children":[{"krate":0,"index":2879},{"krate":0,"index":2880}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2879},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":102491,"byte_end":102493,"line_start":299,"line_end":299,"column_start":9,"column_end":11},"name":"id","qualname":"::types::internal::Field::id","value":"types::internal::Label","parent":{"krate":0,"index":2878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2880},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":102510,"byte_end":102512,"line_start":300,"line_end":300,"column_start":9,"column_end":11},"name":"ty","qualname":"::types::internal::Field::ty","value":"types::internal::Type","parent":{"krate":0,"index":2878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2895},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":102579,"byte_end":102587,"line_start":304,"line_end":304,"column_start":12,"column_end":20},"name":"Function","qualname":"::types::internal::Function","value":"Function { modes, args, rets }","parent":null,"children":[{"krate":0,"index":2896},{"krate":0,"index":2897},{"krate":0,"index":2898}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2896},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":102598,"byte_end":102603,"line_start":305,"line_end":305,"column_start":9,"column_end":14},"name":"modes","qualname":"::types::internal::Function::modes","value":"std::vec::Vec<parser::types::FuncMode>","parent":{"krate":0,"index":2895},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2897},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":102650,"byte_end":102654,"line_start":306,"line_end":306,"column_start":9,"column_end":13},"name":"args","qualname":"::types::internal::Function::args","value":"std::vec::Vec<types::internal::Type>","parent":{"krate":0,"index":2895},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2898},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":102675,"byte_end":102679,"line_start":307,"line_end":307,"column_start":9,"column_end":13},"name":"rets","qualname":"::types::internal::Function::rets","value":"std::vec::Vec<types::internal::Type>","parent":{"krate":0,"index":2895},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":102960,"byte_end":102968,"line_start":319,"line_end":319,"column_start":12,"column_end":20},"name":"is_query","qualname":"<Function>::is_query","value":"pub fn is_query(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":765},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":103558,"byte_end":103570,"line_start":353,"line_end":353,"column_start":8,"column_end":20},"name":"is_primitive","qualname":"::types::internal::is_primitive","value":"pub fn is_primitive(&Type) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":767},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":104152,"byte_end":104158,"line_start":370,"line_end":370,"column_start":8,"column_end":14},"name":"unroll","qualname":"::types::internal::unroll","value":"pub fn unroll(&Type) -> Type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":781},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":105933,"byte_end":105941,"line_start":436,"line_end":436,"column_start":8,"column_end":16},"name":"get_type","qualname":"::types::internal::get_type","value":"pub fn get_type<T>(&T) -> Type where T: CandidType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":783},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/subtype.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"subtype","qualname":"::types::subtype","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/subtype.rs","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":814},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":827}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":817},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/subtype.rs","byte_start":106194,"byte_end":106199,"line_start":7,"line_end":7,"column_start":10,"column_end":15},"name":"Gamma","qualname":"::types::subtype::Gamma","value":"HashSet<(Type, Type)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":818},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/subtype.rs","byte_start":106255,"byte_end":106262,"line_start":10,"line_end":10,"column_start":8,"column_end":15},"name":"subtype","qualname":"::types::subtype::subtype","value":"pub fn subtype(&mut Gamma, &TypeEnv, &Type, &Type) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Check if t1 <: t2\n","sig":null,"attributes":[{"value":"/ Check if t1 <: t2","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/subtype.rs","byte_start":106226,"byte_end":106247,"line_start":9,"line_end":9,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":848},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"number","qualname":"::types::number","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":3034},{"krate":0,"index":3037},{"krate":0,"index":3039},{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3044},{"krate":0,"index":3045},{"krate":0,"index":3048},{"krate":0,"index":3050},{"krate":0,"index":3052},{"krate":0,"index":3055},{"krate":0,"index":3057},{"krate":0,"index":3060},{"krate":0,"index":3062},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3067},{"krate":0,"index":3068},{"krate":0,"index":3071},{"krate":0,"index":3073},{"krate":0,"index":3075},{"krate":0,"index":3078},{"krate":0,"index":892},{"krate":0,"index":894},{"krate":0,"index":896},{"krate":0,"index":898},{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":919},{"krate":0,"index":921},{"krate":0,"index":926},{"krate":0,"index":931},{"krate":0,"index":943},{"krate":0,"index":955},{"krate":0,"index":963},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":3080},{"krate":0,"index":3082},{"krate":0,"index":3084},{"krate":0,"index":3086},{"krate":0,"index":3088},{"krate":0,"index":3090},{"krate":0,"index":3092},{"krate":0,"index":3094},{"krate":0,"index":3096},{"krate":0,"index":3098},{"krate":0,"index":3100},{"krate":0,"index":3102},{"krate":0,"index":3104},{"krate":0,"index":3106},{"krate":0,"index":3108},{"krate":0,"index":3110},{"krate":0,"index":3112},{"krate":0,"index":3114},{"krate":0,"index":3116},{"krate":0,"index":3118},{"krate":0,"index":3120},{"krate":0,"index":3122},{"krate":0,"index":3124},{"krate":0,"index":3126},{"krate":0,"index":3128},{"krate":0,"index":3130},{"krate":0,"index":3132},{"krate":0,"index":3134},{"krate":0,"index":3136},{"krate":0,"index":3138},{"krate":0,"index":3140},{"krate":0,"index":3142},{"krate":0,"index":3144},{"krate":0,"index":3146},{"krate":0,"index":3148},{"krate":0,"index":3150},{"krate":0,"index":3152},{"krate":0,"index":3154},{"krate":0,"index":3156},{"krate":0,"index":3158},{"krate":0,"index":3160},{"krate":0,"index":3162},{"krate":0,"index":3164},{"krate":0,"index":3166},{"krate":0,"index":3168},{"krate":0,"index":3170},{"krate":0,"index":3172},{"krate":0,"index":3174},{"krate":0,"index":3176},{"krate":0,"index":3178},{"krate":0,"index":3180},{"krate":0,"index":3182},{"krate":0,"index":3184},{"krate":0,"index":3186},{"krate":0,"index":3188},{"krate":0,"index":3191},{"krate":0,"index":3194},{"krate":0,"index":3197},{"krate":0,"index":3200},{"krate":0,"index":3203},{"krate":0,"index":3206},{"krate":0,"index":3209},{"krate":0,"index":3212},{"krate":0,"index":3215},{"krate":0,"index":3218},{"krate":0,"index":3220},{"krate":0,"index":3222},{"krate":0,"index":3224},{"krate":0,"index":3226},{"krate":0,"index":3228},{"krate":0,"index":3230},{"krate":0,"index":3232},{"krate":0,"index":3235},{"krate":0,"index":3238},{"krate":0,"index":3241},{"krate":0,"index":3244},{"krate":0,"index":3247},{"krate":0,"index":3250},{"krate":0,"index":3253},{"krate":0,"index":3256},{"krate":0,"index":3259},{"krate":0,"index":3262},{"krate":0,"index":3264},{"krate":0,"index":3266},{"krate":0,"index":3268},{"krate":0,"index":3270},{"krate":0,"index":3272},{"krate":0,"index":3274},{"krate":0,"index":3276},{"krate":0,"index":3279},{"krate":0,"index":3282},{"krate":0,"index":3285},{"krate":0,"index":3288},{"krate":0,"index":3291},{"krate":0,"index":3294},{"krate":0,"index":3297},{"krate":0,"index":3300},{"krate":0,"index":3303},{"krate":0,"index":3306},{"krate":0,"index":3308},{"krate":0,"index":3310},{"krate":0,"index":3312},{"krate":0,"index":3314},{"krate":0,"index":3316},{"krate":0,"index":3318},{"krate":0,"index":3320},{"krate":0,"index":3323},{"krate":0,"index":3326},{"krate":0,"index":3329},{"krate":0,"index":3332},{"krate":0,"index":3335},{"krate":0,"index":3338},{"krate":0,"index":3341},{"krate":0,"index":3344},{"krate":0,"index":3347},{"krate":0,"index":3350},{"krate":0,"index":3352},{"krate":0,"index":3354},{"krate":0,"index":3356},{"krate":0,"index":3358},{"krate":0,"index":3360},{"krate":0,"index":3362},{"krate":0,"index":3364},{"krate":0,"index":3367},{"krate":0,"index":3370},{"krate":0,"index":3373},{"krate":0,"index":3376},{"krate":0,"index":3379},{"krate":0,"index":3382},{"krate":0,"index":3385},{"krate":0,"index":3388},{"krate":0,"index":3391},{"krate":0,"index":3394},{"krate":0,"index":3396},{"krate":0,"index":3398},{"krate":0,"index":3400},{"krate":0,"index":3402},{"krate":0,"index":3404},{"krate":0,"index":3406},{"krate":0,"index":3408},{"krate":0,"index":3411},{"krate":0,"index":3414},{"krate":0,"index":3417},{"krate":0,"index":3420},{"krate":0,"index":3423},{"krate":0,"index":3426},{"krate":0,"index":3429},{"krate":0,"index":3432},{"krate":0,"index":3435},{"krate":0,"index":3438},{"krate":0,"index":3440},{"krate":0,"index":3442},{"krate":0,"index":3444},{"krate":0,"index":3446},{"krate":0,"index":3448},{"krate":0,"index":3450},{"krate":0,"index":3452},{"krate":0,"index":3455},{"krate":0,"index":3458},{"krate":0,"index":3461},{"krate":0,"index":3464},{"krate":0,"index":3467},{"krate":0,"index":3470},{"krate":0,"index":3473},{"krate":0,"index":3476},{"krate":0,"index":3479},{"krate":0,"index":3482},{"krate":0,"index":3484},{"krate":0,"index":3486},{"krate":0,"index":3488},{"krate":0,"index":3490},{"krate":0,"index":3492},{"krate":0,"index":3494},{"krate":0,"index":3496},{"krate":0,"index":3499},{"krate":0,"index":3502},{"krate":0,"index":3505},{"krate":0,"index":3508},{"krate":0,"index":3511},{"krate":0,"index":3514},{"krate":0,"index":3517},{"krate":0,"index":3520},{"krate":0,"index":3523},{"krate":0,"index":3526},{"krate":0,"index":3528},{"krate":0,"index":3530},{"krate":0,"index":3532},{"krate":0,"index":3534},{"krate":0,"index":3536},{"krate":0,"index":3538},{"krate":0,"index":3540},{"krate":0,"index":3543},{"krate":0,"index":3546},{"krate":0,"index":3549},{"krate":0,"index":3552},{"krate":0,"index":3555},{"krate":0,"index":3558},{"krate":0,"index":3561},{"krate":0,"index":3564},{"krate":0,"index":3567},{"krate":0,"index":3570},{"krate":0,"index":3572},{"krate":0,"index":3574},{"krate":0,"index":3576},{"krate":0,"index":3578},{"krate":0,"index":3580},{"krate":0,"index":3582},{"krate":0,"index":3584},{"krate":0,"index":3587},{"krate":0,"index":3590},{"krate":0,"index":3593},{"krate":0,"index":3596},{"krate":0,"index":3599},{"krate":0,"index":3602},{"krate":0,"index":3605},{"krate":0,"index":3608},{"krate":0,"index":3611},{"krate":0,"index":3614},{"krate":0,"index":3616},{"krate":0,"index":3618},{"krate":0,"index":3620},{"krate":0,"index":3622},{"krate":0,"index":3624},{"krate":0,"index":3626},{"krate":0,"index":3628},{"krate":0,"index":3631},{"krate":0,"index":3634},{"krate":0,"index":3637},{"krate":0,"index":3640},{"krate":0,"index":3643},{"krate":0,"index":3646},{"krate":0,"index":3649},{"krate":0,"index":3652},{"krate":0,"index":3655},{"krate":0,"index":3658},{"krate":0,"index":3660},{"krate":0,"index":3662},{"krate":0,"index":3664},{"krate":0,"index":3666},{"krate":0,"index":3668},{"krate":0,"index":3670},{"krate":0,"index":3672},{"krate":0,"index":3675},{"krate":0,"index":3678},{"krate":0,"index":3681},{"krate":0,"index":3684},{"krate":0,"index":3687},{"krate":0,"index":3690},{"krate":0,"index":3693},{"krate":0,"index":3696},{"krate":0,"index":3699},{"krate":0,"index":3702},{"krate":0,"index":3704},{"krate":0,"index":3706},{"krate":0,"index":3708},{"krate":0,"index":3710},{"krate":0,"index":3712},{"krate":0,"index":3714},{"krate":0,"index":3716},{"krate":0,"index":3719},{"krate":0,"index":3722},{"krate":0,"index":3725},{"krate":0,"index":3728},{"krate":0,"index":3731},{"krate":0,"index":3734},{"krate":0,"index":3737},{"krate":0,"index":3740},{"krate":0,"index":3743},{"krate":0,"index":3746},{"krate":0,"index":3748},{"krate":0,"index":3750},{"krate":0,"index":3752},{"krate":0,"index":3754},{"krate":0,"index":3756},{"krate":0,"index":3758},{"krate":0,"index":3760},{"krate":0,"index":3763},{"krate":0,"index":3766},{"krate":0,"index":3769},{"krate":0,"index":3772},{"krate":0,"index":3775},{"krate":0,"index":3778},{"krate":0,"index":3781},{"krate":0,"index":3784},{"krate":0,"index":3787},{"krate":0,"index":3790},{"krate":0,"index":3792},{"krate":0,"index":3794},{"krate":0,"index":3796},{"krate":0,"index":3798},{"krate":0,"index":3800},{"krate":0,"index":3802},{"krate":0,"index":3804},{"krate":0,"index":3807},{"krate":0,"index":3810},{"krate":0,"index":3813},{"krate":0,"index":3816},{"krate":0,"index":3819},{"krate":0,"index":3822},{"krate":0,"index":3825},{"krate":0,"index":3828},{"krate":0,"index":3831},{"krate":0,"index":3834},{"krate":0,"index":3836},{"krate":0,"index":3838},{"krate":0,"index":3840},{"krate":0,"index":3842},{"krate":0,"index":3844},{"krate":0,"index":3846},{"krate":0,"index":3848},{"krate":0,"index":3851},{"krate":0,"index":3854},{"krate":0,"index":3857},{"krate":0,"index":3860},{"krate":0,"index":3863},{"krate":0,"index":3866},{"krate":0,"index":3869},{"krate":0,"index":3872},{"krate":0,"index":3875},{"krate":0,"index":3878},{"krate":0,"index":3880},{"krate":0,"index":3882},{"krate":0,"index":3884},{"krate":0,"index":3886},{"krate":0,"index":3888},{"krate":0,"index":3890},{"krate":0,"index":3892},{"krate":0,"index":3895},{"krate":0,"index":3898},{"krate":0,"index":3901},{"krate":0,"index":3904},{"krate":0,"index":3907},{"krate":0,"index":3910},{"krate":0,"index":3913},{"krate":0,"index":3916},{"krate":0,"index":3919},{"krate":0,"index":3922},{"krate":0,"index":3924},{"krate":0,"index":3926},{"krate":0,"index":3928},{"krate":0,"index":3930},{"krate":0,"index":3932},{"krate":0,"index":3934},{"krate":0,"index":3936},{"krate":0,"index":3939},{"krate":0,"index":3942},{"krate":0,"index":3945},{"krate":0,"index":3948},{"krate":0,"index":3951},{"krate":0,"index":3954},{"krate":0,"index":3957},{"krate":0,"index":3960},{"krate":0,"index":3963},{"krate":0,"index":3966},{"krate":0,"index":3968},{"krate":0,"index":3970},{"krate":0,"index":3972},{"krate":0,"index":3974},{"krate":0,"index":3976},{"krate":0,"index":3978},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":3980},{"krate":0,"index":3983},{"krate":0,"index":3986},{"krate":0,"index":3989},{"krate":0,"index":3992},{"krate":0,"index":3995},{"krate":0,"index":3997},{"krate":0,"index":3999},{"krate":0,"index":4001},{"krate":0,"index":4003},{"krate":0,"index":4005},{"krate":0,"index":4008},{"krate":0,"index":4011},{"krate":0,"index":4014},{"krate":0,"index":4017},{"krate":0,"index":4020},{"krate":0,"index":4022},{"krate":0,"index":4024},{"krate":0,"index":4026},{"krate":0,"index":4028},{"krate":0,"index":993},{"krate":0,"index":995},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1017},{"krate":0,"index":1020}],"decl_id":null,"docs":" Data structure for Candid type Int, Nat, supporting big integer with LEB128 encoding.\n","sig":null,"attributes":[{"value":"/ Data structure for Candid type Int, Nat, supporting big integer with LEB128 encoding.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":110929,"byte_end":111018,"line_start":1,"line_end":1,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":3034},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":111296,"byte_end":111299,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"Int","qualname":"::types::number::Int","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3036},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":111300,"byte_end":111310,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"0","qualname":"::types::number::Int::0","value":"num_bigint::BigInt","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3057},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":111395,"byte_end":111398,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"Nat","qualname":"::types::number::Nat","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3059},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":111399,"byte_end":111410,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"0","qualname":"::types::number::Nat::0","value":"num_bigint::BigUint","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":112118,"byte_end":112123,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"parse","qualname":"<Int>::parse","value":"pub fn parse(&[u8]) -> crate::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":112097,"byte_end":112106,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":112321,"byte_end":112326,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"parse","qualname":"<Nat>::parse","value":"pub fn parse(&[u8]) -> crate::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":112300,"byte_end":112309,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":115865,"byte_end":115871,"line_start":198,"line_end":198,"column_start":12,"column_end":18},"name":"encode","qualname":"<Nat>::encode","value":"pub fn encode<W: ?Sized>(&Self, &mut W) -> crate::Result<()> where W: ?Sized +\nio::Write","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":116478,"byte_end":116484,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"decode","qualname":"<Nat>::decode","value":"pub fn decode<R>(&mut R) -> crate::Result<Self> where R: io::Read","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":116971,"byte_end":116977,"line_start":239,"line_end":239,"column_start":12,"column_end":18},"name":"encode","qualname":"<Int>::encode","value":"pub fn encode<W: ?Sized>(&Self, &mut W) -> crate::Result<()> where W: ?Sized +\nio::Write","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":117705,"byte_end":117711,"line_start":264,"line_end":264,"column_start":12,"column_end":18},"name":"decode","qualname":"<Int>::decode","value":"pub fn decode<R>(&mut R) -> crate::Result<Self> where R: io::Read","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/principal.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"principal","qualname":"::types::principal","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/principal.rs","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1033},{"krate":0,"index":1036},{"krate":0,"index":1039}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1044},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reference.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"reference","qualname":"::types::reference","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reference.rs","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1049},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1065},{"krate":0,"index":1068},{"krate":0,"index":1071},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1078},{"krate":0,"index":4030},{"krate":0,"index":4033},{"krate":0,"index":4034},{"krate":0,"index":4037},{"krate":0,"index":4039},{"krate":0,"index":4041},{"krate":0,"index":4043},{"krate":0,"index":4044},{"krate":0,"index":4047},{"krate":0,"index":4049},{"krate":0,"index":1081},{"krate":0,"index":1085},{"krate":0,"index":1089},{"krate":0,"index":1101}],"decl_id":null,"docs":" Data structure for Candid value Func and Service\n","sig":null,"attributes":[{"value":"/ Data structure for Candid value Func and Service","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reference.rs","byte_start":125609,"byte_end":125661,"line_start":1,"line_end":1,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":4030},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reference.rs","byte_start":125886,"byte_end":125890,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Func","qualname":"::types::reference::Func","value":"Func { principal, method }","parent":null,"children":[{"krate":0,"index":4031},{"krate":0,"index":4032}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4031},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reference.rs","byte_start":125901,"byte_end":125910,"line_start":11,"line_end":11,"column_start":9,"column_end":18},"name":"principal","qualname":"::types::reference::Func::principal","value":"ic_types::Principal","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4032},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reference.rs","byte_start":125931,"byte_end":125937,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"method","qualname":"::types::reference::Func::method","value":"std::string::String","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4041},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reference.rs","byte_start":125995,"byte_end":126002,"line_start":15,"line_end":15,"column_start":12,"column_end":19},"name":"Service","qualname":"::types::reference::Service","value":"Service { principal }","parent":null,"children":[{"krate":0,"index":4042}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4042},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reference.rs","byte_start":126013,"byte_end":126022,"line_start":16,"line_end":16,"column_start":9,"column_end":18},"name":"principal","qualname":"::types::reference::Service::principal","value":"ic_types::Principal","parent":{"krate":0,"index":4041},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1113},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reserved.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"reserved","qualname":"::types::reserved","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reserved.rs","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1124},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1131},{"krate":0,"index":1134},{"krate":0,"index":1137},{"krate":0,"index":1140},{"krate":0,"index":4051},{"krate":0,"index":4053},{"krate":0,"index":4054},{"krate":0,"index":4056},{"krate":0,"index":4058},{"krate":0,"index":4060},{"krate":0,"index":4061},{"krate":0,"index":4062},{"krate":0,"index":4064},{"krate":0,"index":1143},{"krate":0,"index":1148},{"krate":0,"index":1153},{"krate":0,"index":1158}],"decl_id":null,"docs":" Data structure for Candid type Reserved and Empty.\n","sig":null,"attributes":[{"value":"/ Data structure for Candid type Reserved and Empty.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reserved.rs","byte_start":128726,"byte_end":128780,"line_start":1,"line_end":1,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":4051},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reserved.rs","byte_start":128953,"byte_end":128961,"line_start":8,"line_end":8,"column_start":12,"column_end":20},"name":"Reserved","qualname":"::types::reserved::Reserved","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4060},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reserved.rs","byte_start":129000,"byte_end":129005,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Empty","qualname":"::types::reserved::Empty","value":"pub enum Empty { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1168},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":76406,"byte_end":76416,"line_start":21,"line_end":21,"column_start":11,"column_end":21},"name":"CandidType","qualname":"::types::CandidType","value":"CandidType","parent":null,"children":[{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":76458,"byte_end":76460,"line_start":23,"line_end":23,"column_start":8,"column_end":10},"name":"ty","qualname":"::types::CandidType::ty","value":"pub fn ty() -> Type","parent":{"krate":0,"index":1168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":76931,"byte_end":76933,"line_start":38,"line_end":38,"column_start":8,"column_end":10},"name":"id","qualname":"::types::CandidType::id","value":"pub fn id() -> TypeId","parent":{"krate":0,"index":1168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":76990,"byte_end":76993,"line_start":41,"line_end":41,"column_start":8,"column_end":11},"name":"_ty","qualname":"::types::CandidType::_ty","value":"pub fn _ty() -> Type","parent":{"krate":0,"index":1168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":77053,"byte_end":77066,"line_start":43,"line_end":43,"column_start":8,"column_end":21},"name":"idl_serialize","qualname":"::types::CandidType::idl_serialize","value":"pub fn idl_serialize<S>(&Self, S) -> Result<(), S::Error> where S: Serializer","parent":{"krate":0,"index":1168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1174},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":77162,"byte_end":77172,"line_start":48,"line_end":48,"column_start":11,"column_end":21},"name":"Serializer","qualname":"::types::Serializer","value":"Serializer: Sized","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":77191,"byte_end":77196,"line_start":49,"line_end":49,"column_start":10,"column_end":15},"name":"Error","qualname":"::types::Serializer::Error","value":"type Error: Error;","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":77214,"byte_end":77222,"line_start":50,"line_end":50,"column_start":10,"column_end":18},"name":"Compound","qualname":"::types::Serializer::Compound","value":"type Compound: Compound<Error = Self::Error>;","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":77262,"byte_end":77276,"line_start":51,"line_end":51,"column_start":8,"column_end":22},"name":"serialize_bool","qualname":"::types::Serializer::serialize_bool","value":"pub fn serialize_bool(Self, bool) -> Result<(), Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":77327,"byte_end":77340,"line_start":52,"line_end":52,"column_start":8,"column_end":21},"name":"serialize_int","qualname":"::types::Serializer::serialize_int","value":"pub fn serialize_int(Self, &crate::Int) -> Result<(), Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":77398,"byte_end":77411,"line_start":53,"line_end":53,"column_start":8,"column_end":21},"name":"serialize_nat","qualname":"::types::Serializer::serialize_nat","value":"pub fn serialize_nat(Self, &crate::Nat) -> Result<(), Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":77469,"byte_end":77483,"line_start":54,"line_end":54,"column_start":8,"column_end":22},"name":"serialize_nat8","qualname":"::types::Serializer::serialize_nat8","value":"pub fn serialize_nat8(Self, u8) -> Result<(), Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":77532,"byte_end":77547,"line_start":55,"line_end":55,"column_start":8,"column_end":23},"name":"serialize_nat16","qualname":"::types::Serializer::serialize_nat16","value":"pub fn serialize_nat16(Self, u16) -> Result<(), Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":77597,"byte_end":77612,"line_start":56,"line_end":56,"column_start":8,"column_end":23},"name":"serialize_nat32","qualname":"::types::Serializer::serialize_nat32","value":"pub fn serialize_nat32(Self, u32) -> Result<(), Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":77662,"byte_end":77677,"line_start":57,"line_end":57,"column_start":8,"column_end":23},"name":"serialize_nat64","qualname":"::types::Serializer::serialize_nat64","value":"pub fn serialize_nat64(Self, u64) -> Result<(), Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":77727,"byte_end":77741,"line_start":58,"line_end":58,"column_start":8,"column_end":22},"name":"serialize_int8","qualname":"::types::Serializer::serialize_int8","value":"pub fn serialize_int8(Self, i8) -> Result<(), Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":77790,"byte_end":77805,"line_start":59,"line_end":59,"column_start":8,"column_end":23},"name":"serialize_int16","qualname":"::types::Serializer::serialize_int16","value":"pub fn serialize_int16(Self, i16) -> Result<(), Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":77855,"byte_end":77870,"line_start":60,"line_end":60,"column_start":8,"column_end":23},"name":"serialize_int32","qualname":"::types::Serializer::serialize_int32","value":"pub fn serialize_int32(Self, i32) -> Result<(), Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":77920,"byte_end":77935,"line_start":61,"line_end":61,"column_start":8,"column_end":23},"name":"serialize_int64","qualname":"::types::Serializer::serialize_int64","value":"pub fn serialize_int64(Self, i64) -> Result<(), Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":77985,"byte_end":78002,"line_start":62,"line_end":62,"column_start":8,"column_end":25},"name":"serialize_float32","qualname":"::types::Serializer::serialize_float32","value":"pub fn serialize_float32(Self, f32) -> Result<(), Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":78052,"byte_end":78069,"line_start":63,"line_end":63,"column_start":8,"column_end":25},"name":"serialize_float64","qualname":"::types::Serializer::serialize_float64","value":"pub fn serialize_float64(Self, f64) -> Result<(), Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":78119,"byte_end":78133,"line_start":64,"line_end":64,"column_start":8,"column_end":22},"name":"serialize_text","qualname":"::types::Serializer::serialize_text","value":"pub fn serialize_text(Self, &str) -> Result<(), Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":78184,"byte_end":78198,"line_start":65,"line_end":65,"column_start":8,"column_end":22},"name":"serialize_null","qualname":"::types::Serializer::serialize_null","value":"pub fn serialize_null(Self, ()) -> Result<(), Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":78247,"byte_end":78262,"line_start":66,"line_end":66,"column_start":8,"column_end":23},"name":"serialize_empty","qualname":"::types::Serializer::serialize_empty","value":"pub fn serialize_empty(Self) -> Result<(), Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":78304,"byte_end":78320,"line_start":67,"line_end":67,"column_start":8,"column_end":24},"name":"serialize_option","qualname":"::types::Serializer::serialize_option","value":"pub fn serialize_option<T: ?Sized>(Self, Option<&T>)\n-> Result<(), Self::Error> where T: CandidType","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":78420,"byte_end":78436,"line_start":70,"line_end":70,"column_start":8,"column_end":24},"name":"serialize_struct","qualname":"::types::Serializer::serialize_struct","value":"pub fn serialize_struct(Self) -> Result<Self::Compound, Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":78490,"byte_end":78503,"line_start":71,"line_end":71,"column_start":8,"column_end":21},"name":"serialize_vec","qualname":"::types::Serializer::serialize_vec","value":"pub fn serialize_vec(Self, usize) -> Result<Self::Compound, Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":78569,"byte_end":78583,"line_start":72,"line_end":72,"column_start":8,"column_end":22},"name":"serialize_blob","qualname":"::types::Serializer::serialize_blob","value":"pub fn serialize_blob(Self, &[u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":78635,"byte_end":78652,"line_start":73,"line_end":73,"column_start":8,"column_end":25},"name":"serialize_variant","qualname":"::types::Serializer::serialize_variant","value":"pub fn serialize_variant(Self, u64) -> Result<Self::Compound, Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":78718,"byte_end":78737,"line_start":74,"line_end":74,"column_start":8,"column_end":27},"name":"serialize_principal","qualname":"::types::Serializer::serialize_principal","value":"pub fn serialize_principal(Self, &[u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":78789,"byte_end":78807,"line_start":75,"line_end":75,"column_start":8,"column_end":26},"name":"serialize_function","qualname":"::types::Serializer::serialize_function","value":"pub fn serialize_function(Self, &[u8], &str) -> Result<(), Self::Error>","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1201},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":78877,"byte_end":78885,"line_start":78,"line_end":78,"column_start":11,"column_end":19},"name":"Compound","qualname":"::types::Compound","value":"Compound","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1205}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1202},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":78897,"byte_end":78902,"line_start":79,"line_end":79,"column_start":10,"column_end":15},"name":"Error","qualname":"::types::Compound::Error","value":"type Error;","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":78911,"byte_end":78928,"line_start":80,"line_end":80,"column_start":8,"column_end":25},"name":"serialize_element","qualname":"::types::Compound::serialize_element","value":"pub fn serialize_element<T: ?Sized>(&mut Self, &T) -> Result<(), Self::Error>\nwhere T: CandidType","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":79221,"byte_end":79235,"line_start":86,"line_end":86,"column_start":8,"column_end":22},"name":"serialize_blob","qualname":"::types::Compound::serialize_blob","value":"pub fn serialize_blob(&mut Self, &[u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parser","qualname":"::parser","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/mod.rs","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1276},{"krate":0,"index":1322},{"krate":0,"index":1447},{"krate":0,"index":1535},{"krate":0,"index":1586}],"decl_id":null,"docs":" Provides parser for Candid type and value.\n  * `str.parse::<IDLProg>()` parses the Candid signature file to Candid AST.\n  * `str.parse::<IDLArgs>()` parses the Candid value in text format to a struct `IDLArg` that can be used for serialization and deserialization between Candid and an enum type `IDLValue` in Rust.\n","sig":null,"attributes":[{"value":"/ Provides parser for Candid type and value.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/mod.rs","byte_start":130378,"byte_end":130424,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"/  * `str.parse::<IDLProg>()` parses the Candid signature file to Candid AST.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/mod.rs","byte_start":130425,"byte_end":130504,"line_start":2,"line_end":2,"column_start":1,"column_end":80}},{"value":"/  * `str.parse::<IDLArgs>()` parses the Candid value in text format to a struct `IDLArg` that can be used for serialization and deserialization between Candid and an enum type `IDLValue` in Rust.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/mod.rs","byte_start":130505,"byte_end":130703,"line_start":3,"line_end":3,"column_start":1,"column_end":199}}]},{"kind":"Mod","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/grammar.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"grammar","qualname":"::parser::grammar","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/grammar.rs","parent":null,"children":[{"krate":0,"index":4066},{"krate":0,"index":4067},{"krate":0,"index":4070},{"krate":0,"index":4073},{"krate":0,"index":4076},{"krate":0,"index":4077},{"krate":0,"index":4079},{"krate":0,"index":4080},{"krate":0,"index":4083},{"krate":0,"index":4084},{"krate":0,"index":4086},{"krate":0,"index":4087},{"krate":0,"index":4090},{"krate":0,"index":4093},{"krate":0,"index":4096},{"krate":0,"index":4099},{"krate":0,"index":4102},{"krate":0,"index":4105},{"krate":0,"index":4108},{"krate":0,"index":4111},{"krate":0,"index":4114},{"krate":0,"index":4115},{"krate":0,"index":4118},{"krate":0,"index":4121},{"krate":0,"index":4124},{"krate":0,"index":4125},{"krate":0,"index":4128},{"krate":0,"index":4131},{"krate":0,"index":4134},{"krate":0,"index":4137},{"krate":0,"index":4138},{"krate":0,"index":4141},{"krate":0,"index":4144},{"krate":0,"index":4145},{"krate":0,"index":4148},{"krate":0,"index":4149},{"krate":0,"index":4150},{"krate":0,"index":4804},{"krate":0,"index":4807},{"krate":0,"index":5461},{"krate":0,"index":5464},{"krate":0,"index":6118},{"krate":0,"index":6121},{"krate":0,"index":6775},{"krate":0,"index":6778},{"krate":0,"index":7432},{"krate":0,"index":7435},{"krate":0,"index":8089},{"krate":0,"index":8092},{"krate":0,"index":8093},{"krate":0,"index":8094},{"krate":0,"index":8095},{"krate":0,"index":8096},{"krate":0,"index":8097},{"krate":0,"index":8098},{"krate":0,"index":8099},{"krate":0,"index":8100},{"krate":0,"index":8101},{"krate":0,"index":8102},{"krate":0,"index":8104},{"krate":0,"index":8105},{"krate":0,"index":8106},{"krate":0,"index":8107},{"krate":0,"index":8112},{"krate":0,"index":8113},{"krate":0,"index":8115},{"krate":0,"index":8117},{"krate":0,"index":8119},{"krate":0,"index":8120},{"krate":0,"index":8121},{"krate":0,"index":8122},{"krate":0,"index":8123},{"krate":0,"index":8124},{"krate":0,"index":8125},{"krate":0,"index":8128},{"krate":0,"index":8129},{"krate":0,"index":8131},{"krate":0,"index":8133},{"krate":0,"index":8135},{"krate":0,"index":8136},{"krate":0,"index":8137},{"krate":0,"index":8138},{"krate":0,"index":8139},{"krate":0,"index":8140},{"krate":0,"index":8141},{"krate":0,"index":8142},{"krate":0,"index":8143},{"krate":0,"index":8144},{"krate":0,"index":8145},{"krate":0,"index":8146},{"krate":0,"index":8147},{"krate":0,"index":8152},{"krate":0,"index":8156},{"krate":0,"index":8157},{"krate":0,"index":8158},{"krate":0,"index":8159},{"krate":0,"index":8160},{"krate":0,"index":8161},{"krate":0,"index":8162},{"krate":0,"index":8163},{"krate":0,"index":8164},{"krate":0,"index":8165},{"krate":0,"index":8166},{"krate":0,"index":8167},{"krate":0,"index":8168},{"krate":0,"index":8169},{"krate":0,"index":8170},{"krate":0,"index":8171},{"krate":0,"index":8172},{"krate":0,"index":8173},{"krate":0,"index":8174},{"krate":0,"index":8178},{"krate":0,"index":8179},{"krate":0,"index":8180},{"krate":0,"index":8181},{"krate":0,"index":8182},{"krate":0,"index":8183},{"krate":0,"index":8184},{"krate":0,"index":8185},{"krate":0,"index":8186},{"krate":0,"index":8187},{"krate":0,"index":8188},{"krate":0,"index":8189},{"krate":0,"index":8190},{"krate":0,"index":8191},{"krate":0,"index":8192},{"krate":0,"index":8193},{"krate":0,"index":8194},{"krate":0,"index":8195},{"krate":0,"index":8196},{"krate":0,"index":8197},{"krate":0,"index":8198},{"krate":0,"index":8199},{"krate":0,"index":8200},{"krate":0,"index":8201},{"krate":0,"index":8202},{"krate":0,"index":8203},{"krate":0,"index":8204},{"krate":0,"index":8205},{"krate":0,"index":8206},{"krate":0,"index":8207},{"krate":0,"index":8208},{"krate":0,"index":8209},{"krate":0,"index":8210},{"krate":0,"index":8211},{"krate":0,"index":8212},{"krate":0,"index":8213},{"krate":0,"index":8214},{"krate":0,"index":8215},{"krate":0,"index":8216},{"krate":0,"index":8217},{"krate":0,"index":8218},{"krate":0,"index":8219},{"krate":0,"index":8220},{"krate":0,"index":8221},{"krate":0,"index":8222},{"krate":0,"index":8223},{"krate":0,"index":8224},{"krate":0,"index":8225},{"krate":0,"index":8226},{"krate":0,"index":8227},{"krate":0,"index":8228},{"krate":0,"index":8229},{"krate":0,"index":8230},{"krate":0,"index":8231},{"krate":0,"index":8232},{"krate":0,"index":8233},{"krate":0,"index":8234},{"krate":0,"index":8235},{"krate":0,"index":8236},{"krate":0,"index":8237},{"krate":0,"index":8238},{"krate":0,"index":8239},{"krate":0,"index":8240},{"krate":0,"index":8241},{"krate":0,"index":8242},{"krate":0,"index":8243},{"krate":0,"index":8244},{"krate":0,"index":8245},{"krate":0,"index":8246},{"krate":0,"index":8247},{"krate":0,"index":8248},{"krate":0,"index":8249},{"krate":0,"index":8250},{"krate":0,"index":8251},{"krate":0,"index":8252},{"krate":0,"index":8253},{"krate":0,"index":8254},{"krate":0,"index":8255},{"krate":0,"index":8256},{"krate":0,"index":8257},{"krate":0,"index":8258},{"krate":0,"index":8259},{"krate":0,"index":8260},{"krate":0,"index":8261},{"krate":0,"index":8262},{"krate":0,"index":8263},{"krate":0,"index":8264},{"krate":0,"index":8265},{"krate":0,"index":8266},{"krate":0,"index":8267},{"krate":0,"index":8268},{"krate":0,"index":8269},{"krate":0,"index":8270},{"krate":0,"index":8271},{"krate":0,"index":8272},{"krate":0,"index":8273},{"krate":0,"index":8274},{"krate":0,"index":8275},{"krate":0,"index":8276},{"krate":0,"index":8277},{"krate":0,"index":8278},{"krate":0,"index":8279},{"krate":0,"index":8280},{"krate":0,"index":8281},{"krate":0,"index":8282},{"krate":0,"index":8283},{"krate":0,"index":8284},{"krate":0,"index":8285},{"krate":0,"index":8286},{"krate":0,"index":8287},{"krate":0,"index":8288},{"krate":0,"index":8289},{"krate":0,"index":8290},{"krate":0,"index":8291},{"krate":0,"index":8292},{"krate":0,"index":8293},{"krate":0,"index":8294},{"krate":0,"index":8295},{"krate":0,"index":8296},{"krate":0,"index":8297},{"krate":0,"index":8298},{"krate":0,"index":8299},{"krate":0,"index":8300},{"krate":0,"index":8301},{"krate":0,"index":8302},{"krate":0,"index":8303},{"krate":0,"index":8304},{"krate":0,"index":8305},{"krate":0,"index":8306},{"krate":0,"index":8307},{"krate":0,"index":8308},{"krate":0,"index":8309},{"krate":0,"index":8310},{"krate":0,"index":8311},{"krate":0,"index":8312},{"krate":0,"index":8313},{"krate":0,"index":8314},{"krate":0,"index":8315},{"krate":0,"index":8316},{"krate":0,"index":8317},{"krate":0,"index":8318},{"krate":0,"index":8319},{"krate":0,"index":8320},{"krate":0,"index":8321},{"krate":0,"index":8322},{"krate":0,"index":8323},{"krate":0,"index":8324},{"krate":0,"index":8325},{"krate":0,"index":8326},{"krate":0,"index":8327},{"krate":0,"index":8328},{"krate":0,"index":8329},{"krate":0,"index":8330},{"krate":0,"index":8331},{"krate":0,"index":8332},{"krate":0,"index":8333},{"krate":0,"index":8334},{"krate":0,"index":8335},{"krate":0,"index":8336},{"krate":0,"index":8337},{"krate":0,"index":8338},{"krate":0,"index":8339},{"krate":0,"index":8340},{"krate":0,"index":8341},{"krate":0,"index":8342},{"krate":0,"index":8343},{"krate":0,"index":8344},{"krate":0,"index":8345},{"krate":0,"index":8346},{"krate":0,"index":8347},{"krate":0,"index":8348},{"krate":0,"index":8349},{"krate":0,"index":8350},{"krate":0,"index":8351},{"krate":0,"index":8352},{"krate":0,"index":8353},{"krate":0,"index":8354},{"krate":0,"index":8355},{"krate":0,"index":8356},{"krate":0,"index":8357},{"krate":0,"index":8358},{"krate":0,"index":8359},{"krate":0,"index":8360},{"krate":0,"index":8361},{"krate":0,"index":8362},{"krate":0,"index":8363},{"krate":0,"index":8364},{"krate":0,"index":8365},{"krate":0,"index":8366},{"krate":0,"index":8367},{"krate":0,"index":8368},{"krate":0,"index":8369},{"krate":0,"index":8370},{"krate":0,"index":8371},{"krate":0,"index":8372},{"krate":0,"index":8373},{"krate":0,"index":8374},{"krate":0,"index":8375},{"krate":0,"index":8376},{"krate":0,"index":8377},{"krate":0,"index":8378},{"krate":0,"index":8379},{"krate":0,"index":8380},{"krate":0,"index":8381},{"krate":0,"index":8382},{"krate":0,"index":8383},{"krate":0,"index":8384},{"krate":0,"index":8385},{"krate":0,"index":8386},{"krate":0,"index":8387},{"krate":0,"index":8388},{"krate":0,"index":8389},{"krate":0,"index":8390},{"krate":0,"index":8391},{"krate":0,"index":8392},{"krate":0,"index":8393},{"krate":0,"index":8394},{"krate":0,"index":8395},{"krate":0,"index":8396},{"krate":0,"index":8397},{"krate":0,"index":8398},{"krate":0,"index":8399},{"krate":0,"index":8400},{"krate":0,"index":8401},{"krate":0,"index":8402},{"krate":0,"index":8403},{"krate":0,"index":8404},{"krate":0,"index":8405},{"krate":0,"index":8406},{"krate":0,"index":8407},{"krate":0,"index":8408},{"krate":0,"index":8409},{"krate":0,"index":8410},{"krate":0,"index":8411},{"krate":0,"index":8412},{"krate":0,"index":8413},{"krate":0,"index":8414},{"krate":0,"index":8415},{"krate":0,"index":8416},{"krate":0,"index":8417},{"krate":0,"index":8418},{"krate":0,"index":8419},{"krate":0,"index":8420},{"krate":0,"index":8421},{"krate":0,"index":8422},{"krate":0,"index":8423},{"krate":0,"index":8424},{"krate":0,"index":8425},{"krate":0,"index":8426},{"krate":0,"index":8427},{"krate":0,"index":8428},{"krate":0,"index":8429},{"krate":0,"index":8430},{"krate":0,"index":8431},{"krate":0,"index":8432},{"krate":0,"index":8433},{"krate":0,"index":8434},{"krate":0,"index":8435},{"krate":0,"index":8436},{"krate":0,"index":8437},{"krate":0,"index":8438},{"krate":0,"index":8439},{"krate":0,"index":8440},{"krate":0,"index":8441},{"krate":0,"index":8442},{"krate":0,"index":8443},{"krate":0,"index":8444},{"krate":0,"index":8445},{"krate":0,"index":8446},{"krate":0,"index":8447},{"krate":0,"index":8448},{"krate":0,"index":8449},{"krate":0,"index":8450},{"krate":0,"index":8451},{"krate":0,"index":8452},{"krate":0,"index":8453},{"krate":0,"index":8454},{"krate":0,"index":8455},{"krate":0,"index":8456},{"krate":0,"index":8457},{"krate":0,"index":8458},{"krate":0,"index":8459},{"krate":0,"index":8460},{"krate":0,"index":8461},{"krate":0,"index":8462},{"krate":0,"index":8463},{"krate":0,"index":8464},{"krate":0,"index":8465},{"krate":0,"index":8466},{"krate":0,"index":8467},{"krate":0,"index":8468},{"krate":0,"index":8469},{"krate":0,"index":8470},{"krate":0,"index":8471},{"krate":0,"index":8472},{"krate":0,"index":8473},{"krate":0,"index":8474},{"krate":0,"index":8475},{"krate":0,"index":8476},{"krate":0,"index":8477},{"krate":0,"index":8478},{"krate":0,"index":8479},{"krate":0,"index":8480},{"krate":0,"index":8481},{"krate":0,"index":8482},{"krate":0,"index":8483},{"krate":0,"index":8484},{"krate":0,"index":8485},{"krate":0,"index":8486},{"krate":0,"index":8487},{"krate":0,"index":8488},{"krate":0,"index":8489},{"krate":0,"index":8490},{"krate":0,"index":8491},{"krate":0,"index":8492},{"krate":0,"index":8494},{"krate":0,"index":8496}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: all)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/grammar.rs","byte_start":130905,"byte_end":130927,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4427},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11052361,"byte_end":11052370,"line_start":1049,"line_end":1049,"column_start":16,"column_end":25},"name":"ArgParser","qualname":"::parser::grammar::__parse__Arg::ArgParser","value":"ArgParser {  }","parent":null,"children":[{"krate":0,"index":4428}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4430},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11052435,"byte_end":11052438,"line_start":1054,"line_end":1054,"column_start":16,"column_end":19},"name":"new","qualname":"<ArgParser>::new","value":"pub fn new() -> ArgParser","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4431},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11052575,"byte_end":11052580,"line_start":1061,"line_end":1061,"column_start":16,"column_end":21},"name":"parse","qualname":"<ArgParser>::parse","value":"pub fn parse<__TOKEN: __ToTriple, __TOKENS: IntoIterator<Item =\n             __TOKEN>>(&Self, __TOKENS)\n-> Result<IDLValue, __lalrpop_util::ParseError<usize, Token, LexicalError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11052540,"byte_end":11052559,"line_start":1060,"line_end":1060,"column_start":9,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":5084},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11306586,"byte_end":11306596,"line_start":7656,"line_end":7656,"column_start":16,"column_end":26},"name":"ArgsParser","qualname":"::parser::grammar::__parse__Args::ArgsParser","value":"ArgsParser {  }","parent":null,"children":[{"krate":0,"index":5085}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5087},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11306662,"byte_end":11306665,"line_start":7661,"line_end":7661,"column_start":16,"column_end":19},"name":"new","qualname":"<ArgsParser>::new","value":"pub fn new() -> ArgsParser","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5088},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11306804,"byte_end":11306809,"line_start":7668,"line_end":7668,"column_start":16,"column_end":21},"name":"parse","qualname":"<ArgsParser>::parse","value":"pub fn parse<__TOKEN: __ToTriple, __TOKENS: IntoIterator<Item =\n             __TOKEN>>(&Self, __TOKENS)\n-> Result<IDLArgs, __lalrpop_util::ParseError<usize, Token, LexicalError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11306769,"byte_end":11306788,"line_start":7667,"line_end":7667,"column_start":9,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":5741},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11551632,"byte_end":11551645,"line_start":14040,"line_end":14040,"column_start":16,"column_end":29},"name":"IDLProgParser","qualname":"::parser::grammar::__parse__IDLProg::IDLProgParser","value":"IDLProgParser {  }","parent":null,"children":[{"krate":0,"index":5742}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5744},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11551714,"byte_end":11551717,"line_start":14045,"line_end":14045,"column_start":16,"column_end":19},"name":"new","qualname":"<IDLProgParser>::new","value":"pub fn new() -> IDLProgParser","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5745},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11551862,"byte_end":11551867,"line_start":14052,"line_end":14052,"column_start":16,"column_end":21},"name":"parse","qualname":"<IDLProgParser>::parse","value":"pub fn parse<__TOKEN: __ToTriple, __TOKENS: IntoIterator<Item =\n             __TOKEN>>(&Self, __TOKENS)\n-> Result<IDLProg, __lalrpop_util::ParseError<usize, Token, LexicalError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11551827,"byte_end":11551846,"line_start":14051,"line_end":14051,"column_start":9,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6398},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11800263,"byte_end":11800273,"line_start":20515,"line_end":20515,"column_start":16,"column_end":26},"name":"TestParser","qualname":"::parser::grammar::__parse__Test::TestParser","value":"TestParser {  }","parent":null,"children":[{"krate":0,"index":6399}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6401},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11800339,"byte_end":11800342,"line_start":20520,"line_end":20520,"column_start":16,"column_end":19},"name":"new","qualname":"<TestParser>::new","value":"pub fn new() -> TestParser","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6402},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11800481,"byte_end":11800486,"line_start":20527,"line_end":20527,"column_start":16,"column_end":21},"name":"parse","qualname":"<TestParser>::parse","value":"pub fn parse<__TOKEN: __ToTriple, __TOKENS: IntoIterator<Item =\n             __TOKEN>>(&Self, __TOKENS)\n-> Result<Test, __lalrpop_util::ParseError<usize, Token, LexicalError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11800446,"byte_end":11800465,"line_start":20526,"line_end":20526,"column_start":9,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":7055},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12039785,"byte_end":12039794,"line_start":26757,"line_end":26757,"column_start":16,"column_end":25},"name":"TypParser","qualname":"::parser::grammar::__parse__Typ::TypParser","value":"TypParser {  }","parent":null,"children":[{"krate":0,"index":7056}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7058},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12039859,"byte_end":12039862,"line_start":26762,"line_end":26762,"column_start":16,"column_end":19},"name":"new","qualname":"<TypParser>::new","value":"pub fn new() -> TypParser","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7059},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12039999,"byte_end":12040004,"line_start":26769,"line_end":26769,"column_start":16,"column_end":21},"name":"parse","qualname":"<TypParser>::parse","value":"pub fn parse<__TOKEN: __ToTriple, __TOKENS: IntoIterator<Item =\n             __TOKEN>>(&Self, __TOKENS)\n-> Result<IDLType, __lalrpop_util::ParseError<usize, Token, LexicalError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12039964,"byte_end":12039983,"line_start":26768,"line_end":26768,"column_start":9,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":7712},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12279409,"byte_end":12279419,"line_start":33004,"line_end":33004,"column_start":16,"column_end":26},"name":"TypsParser","qualname":"::parser::grammar::__parse__Typs::TypsParser","value":"TypsParser {  }","parent":null,"children":[{"krate":0,"index":7713}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7715},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12279485,"byte_end":12279488,"line_start":33009,"line_end":33009,"column_start":16,"column_end":19},"name":"new","qualname":"<TypsParser>::new","value":"pub fn new() -> TypsParser","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7716},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12279627,"byte_end":12279632,"line_start":33016,"line_end":33016,"column_start":16,"column_end":21},"name":"parse","qualname":"<TypsParser>::parse","value":"pub fn parse<__TOKEN: __ToTriple, __TOKENS: IntoIterator<Item =\n             __TOKEN>>(&Self, __TOKENS)\n-> Result<IDLTypes, __lalrpop_util::ParseError<usize, Token, LexicalError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12279592,"byte_end":12279611,"line_start":33015,"line_end":33015,"column_start":9,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":8492},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12595594,"byte_end":12595604,"line_start":44038,"line_end":44038,"column_start":11,"column_end":21},"name":"__ToTriple","qualname":"::parser::grammar::__ToTriple","value":"__ToTriple","parent":null,"children":[{"krate":0,"index":8493}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8493},"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12595616,"byte_end":12595625,"line_start":44039,"line_end":44039,"column_start":8,"column_end":17},"name":"to_triple","qualname":"::parser::grammar::__ToTriple::to_triple","value":"pub fn to_triple(Self)\n->\n    Result<(usize, Token, usize),\n           __lalrpop_util::ParseError<usize, Token, LexicalError>>","parent":{"krate":0,"index":8492},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"token","qualname":"::parser::token","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","parent":null,"children":[{"krate":0,"index":1237},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":8498},{"krate":0,"index":8502},{"krate":0,"index":8961},{"krate":0,"index":8963},{"krate":0,"index":8965},{"krate":0,"index":8966},{"krate":0,"index":8969},{"krate":0,"index":8970},{"krate":0,"index":8972},{"krate":0,"index":8974},{"krate":0,"index":9052},{"krate":0,"index":9053},{"krate":0,"index":9086},{"krate":0,"index":9088},{"krate":0,"index":9090},{"krate":0,"index":9091},{"krate":0,"index":9093},{"krate":0,"index":9094},{"krate":0,"index":9102},{"krate":0,"index":9103},{"krate":0,"index":9189},{"krate":0,"index":9191},{"krate":0,"index":9193},{"krate":0,"index":9194},{"krate":0,"index":9196},{"krate":0,"index":9197},{"krate":0,"index":1247},{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1254},{"krate":0,"index":1257},{"krate":0,"index":9211},{"krate":0,"index":9215},{"krate":0,"index":9218},{"krate":0,"index":9221},{"krate":0,"index":9223},{"krate":0,"index":9226},{"krate":0,"index":9228},{"krate":0,"index":9232},{"krate":0,"index":9235},{"krate":0,"index":9237},{"krate":0,"index":9239},{"krate":0,"index":9240},{"krate":0,"index":9242},{"krate":0,"index":9243},{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1266},{"krate":0,"index":1268}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8976},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131247,"byte_end":131259,"line_start":10,"line_end":10,"column_start":5,"column_end":17},"name":"StartComment","qualname":"::parser::token::Token::StartComment","value":"Token::StartComment","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"regex(r\"[ \\t\\r\\n]+\", logos :: skip)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131129,"byte_end":131165,"line_start":6,"line_end":6,"column_start":5,"column_end":41}},{"value":"regex(\"//[^\\n]*\", logos :: skip)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131190,"byte_end":131223,"line_start":8,"line_end":8,"column_start":5,"column_end":38}},{"value":"token(\"/*\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131228,"byte_end":131242,"line_start":9,"line_end":9,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8978},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131278,"byte_end":131293,"line_start":12,"line_end":12,"column_start":5,"column_end":20},"name":"UnexpectedToken","qualname":"::parser::token::Token::UnexpectedToken","value":"Token::UnexpectedToken","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131265,"byte_end":131273,"line_start":11,"line_end":11,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8980},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131317,"byte_end":131323,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"Equals","qualname":"::parser::token::Token::Equals","value":"Token::Equals","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"=\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131299,"byte_end":131312,"line_start":13,"line_end":13,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8982},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131347,"byte_end":131353,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"LParen","qualname":"::parser::token::Token::LParen","value":"Token::LParen","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"(\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131329,"byte_end":131342,"line_start":15,"line_end":15,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8984},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131377,"byte_end":131383,"line_start":18,"line_end":18,"column_start":5,"column_end":11},"name":"RParen","qualname":"::parser::token::Token::RParen","value":"Token::RParen","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\")\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131359,"byte_end":131372,"line_start":17,"line_end":17,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8986},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131407,"byte_end":131413,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"LBrace","qualname":"::parser::token::Token::LBrace","value":"Token::LBrace","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"{\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131389,"byte_end":131402,"line_start":19,"line_end":19,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8988},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131437,"byte_end":131443,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"RBrace","qualname":"::parser::token::Token::RBrace","value":"Token::RBrace","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"}\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131419,"byte_end":131432,"line_start":21,"line_end":21,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8990},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131467,"byte_end":131471,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"Semi","qualname":"::parser::token::Token::Semi","value":"Token::Semi","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\";\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131449,"byte_end":131462,"line_start":23,"line_end":23,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8992},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131495,"byte_end":131500,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"name":"Comma","qualname":"::parser::token::Token::Comma","value":"Token::Comma","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\",\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131477,"byte_end":131490,"line_start":25,"line_end":25,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8994},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131539,"byte_end":131542,"line_start":28,"line_end":28,"column_start":5,"column_end":8},"name":"Dot","qualname":"::parser::token::Token::Dot","value":"Token::Dot","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\".\", priority = 10)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131506,"byte_end":131534,"line_start":27,"line_end":27,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8996},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131566,"byte_end":131571,"line_start":30,"line_end":30,"column_start":5,"column_end":10},"name":"Colon","qualname":"::parser::token::Token::Colon","value":"Token::Colon","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\":\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131548,"byte_end":131561,"line_start":29,"line_end":29,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8998},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131596,"byte_end":131601,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Arrow","qualname":"::parser::token::Token::Arrow","value":"Token::Arrow","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"->\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131577,"byte_end":131591,"line_start":31,"line_end":31,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9000},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131628,"byte_end":131632,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"name":"Null","qualname":"::parser::token::Token::Null","value":"Token::Null","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"null\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131607,"byte_end":131623,"line_start":33,"line_end":33,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9002},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131658,"byte_end":131661,"line_start":36,"line_end":36,"column_start":5,"column_end":8},"name":"Vec","qualname":"::parser::token::Token::Vec","value":"Token::Vec","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"vec\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131638,"byte_end":131653,"line_start":35,"line_end":35,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9004},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131690,"byte_end":131696,"line_start":38,"line_end":38,"column_start":5,"column_end":11},"name":"Record","qualname":"::parser::token::Token::Record","value":"Token::Record","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"record\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131667,"byte_end":131685,"line_start":37,"line_end":37,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9006},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131726,"byte_end":131733,"line_start":40,"line_end":40,"column_start":5,"column_end":12},"name":"Variant","qualname":"::parser::token::Token::Variant","value":"Token::Variant","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"variant\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131702,"byte_end":131721,"line_start":39,"line_end":39,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9008},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131760,"byte_end":131764,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"Func","qualname":"::parser::token::Token::Func","value":"Token::Func","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"func\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131739,"byte_end":131755,"line_start":41,"line_end":41,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9010},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131794,"byte_end":131801,"line_start":44,"line_end":44,"column_start":5,"column_end":12},"name":"Service","qualname":"::parser::token::Token::Service","value":"Token::Service","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"service\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131770,"byte_end":131789,"line_start":43,"line_end":43,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9012},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131830,"byte_end":131836,"line_start":46,"line_end":46,"column_start":5,"column_end":11},"name":"Oneway","qualname":"::parser::token::Token::Oneway","value":"Token::Oneway","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"oneway\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131807,"byte_end":131825,"line_start":45,"line_end":45,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9014},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131864,"byte_end":131869,"line_start":48,"line_end":48,"column_start":5,"column_end":10},"name":"Query","qualname":"::parser::token::Token::Query","value":"Token::Query","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"query\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131842,"byte_end":131859,"line_start":47,"line_end":47,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9016},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131896,"byte_end":131900,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"Blob","qualname":"::parser::token::Token::Blob","value":"Token::Blob","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"blob\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131875,"byte_end":131891,"line_start":49,"line_end":49,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9018},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131927,"byte_end":131931,"line_start":52,"line_end":52,"column_start":5,"column_end":9},"name":"Type","qualname":"::parser::token::Token::Type","value":"Token::Type","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"type\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131906,"byte_end":131922,"line_start":51,"line_end":51,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9020},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131960,"byte_end":131966,"line_start":54,"line_end":54,"column_start":5,"column_end":11},"name":"Import","qualname":"::parser::token::Token::Import","value":"Token::Import","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"import\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131937,"byte_end":131955,"line_start":53,"line_end":53,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9022},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131992,"byte_end":131995,"line_start":56,"line_end":56,"column_start":5,"column_end":8},"name":"Opt","qualname":"::parser::token::Token::Opt","value":"Token::Opt","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"opt\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131972,"byte_end":131987,"line_start":55,"line_end":55,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9024},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132020,"byte_end":132029,"line_start":58,"line_end":58,"column_start":5,"column_end":14},"name":"TestEqual","qualname":"::parser::token::Token::TestEqual","value":"Token::TestEqual","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"==\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132001,"byte_end":132015,"line_start":57,"line_end":57,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9026},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132054,"byte_end":132062,"line_start":60,"line_end":60,"column_start":5,"column_end":13},"name":"NotEqual","qualname":"::parser::token::Token::NotEqual","value":"Token::NotEqual","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"!=\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132035,"byte_end":132049,"line_start":59,"line_end":59,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9028},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132087,"byte_end":132096,"line_start":62,"line_end":62,"column_start":5,"column_end":14},"name":"NotDecode","qualname":"::parser::token::Token::NotDecode","value":"Token::NotDecode","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"!:\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132068,"byte_end":132082,"line_start":61,"line_end":61,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9030},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132128,"byte_end":132137,"line_start":64,"line_end":64,"column_start":5,"column_end":14},"name":"Principal","qualname":"::parser::token::Token::Principal","value":"Token::Principal","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"principal\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132102,"byte_end":132123,"line_start":63,"line_end":63,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9032},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132213,"byte_end":132215,"line_start":66,"line_end":66,"column_start":5,"column_end":7},"name":"Id","qualname":"::parser::token::Token::Id","value":"Token::Id(String)","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"regex(\"[a-zA-Z_][a-zA-Z0-9_]*\", | lex | lex.slice().to_string())","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132143,"byte_end":132208,"line_start":65,"line_end":65,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9035},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132248,"byte_end":132259,"line_start":68,"line_end":68,"column_start":5,"column_end":16},"name":"StartString","qualname":"::parser::token::Token::StartString","value":"Token::StartString","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"token(\"\\\"\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132229,"byte_end":132243,"line_start":67,"line_end":67,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8499},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132327,"byte_end":132331,"line_start":70,"line_end":70,"column_start":5,"column_end":9},"name":"Text","qualname":"::parser::token::Token::Text","value":"Token::Text(String)","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9037},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132400,"byte_end":132404,"line_start":72,"line_end":72,"column_start":5,"column_end":9},"name":"Sign","qualname":"::parser::token::Token::Sign","value":"Token::Sign(char)","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"regex(\"[+-]\", | lex | lex.slice().chars().next())","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132345,"byte_end":132395,"line_start":71,"line_end":71,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9040},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132459,"byte_end":132466,"line_start":74,"line_end":74,"column_start":5,"column_end":12},"name":"Decimal","qualname":"::parser::token::Token::Decimal","value":"Token::Decimal(String)","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"regex(\"[0-9][_0-9]*\", parse_number)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132416,"byte_end":132454,"line_start":73,"line_end":73,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9043},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132540,"byte_end":132543,"line_start":76,"line_end":76,"column_start":5,"column_end":8},"name":"Hex","qualname":"::parser::token::Token::Hex","value":"Token::Hex(String)","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"regex(\"0[xX][0-9a-fA-F][_0-9a-fA-F]*\", parse_number)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132480,"byte_end":132535,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9046},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132667,"byte_end":132672,"line_start":79,"line_end":79,"column_start":5,"column_end":10},"name":"Float","qualname":"::parser::token::Token::Float","value":"Token::Float(String)","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"regex(\"[0-9]*\\\\.[0-9]*\", parse_number)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132557,"byte_end":132598,"line_start":77,"line_end":77,"column_start":5,"column_end":46}},{"value":"regex(\"[0-9]*(\\\\.[0-9]*)?[eE][+-]?[0-9]+\", parse_number)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132603,"byte_end":132662,"line_start":78,"line_end":78,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9049},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132740,"byte_end":132747,"line_start":81,"line_end":81,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::parser::token::Token::Boolean","value":"Token::Boolean(bool)","parent":{"krate":0,"index":8498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"regex(\"true|false\", | lex | lex.slice().parse())","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":132686,"byte_end":132735,"line_start":80,"line_end":80,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":8498},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":131117,"byte_end":131122,"line_start":5,"line_end":5,"column_start":10,"column_end":15},"name":"Token","qualname":"::parser::token::Token","value":"pub enum Token {\n    StartComment,\n    UnexpectedToken,\n    Equals,\n    LParen,\n    RParen,\n    LBrace,\n    RBrace,\n    Semi,\n    Comma,\n    Dot,\n    Colon,\n    Arrow,\n    Null,\n    Vec,\n    Record,\n    Variant,\n    Func,\n    Service,\n    Oneway,\n    Query,\n    Blob,\n    Type,\n    Import,\n    Opt,\n    TestEqual,\n    NotEqual,\n    NotDecode,\n    Principal,\n    Id(String),\n    StartString,\n    Text(String),\n    Sign(char),\n    Decimal(String),\n    Hex(String),\n    Float(String),\n    Boolean(bool),\n}","parent":null,"children":[{"krate":0,"index":8976},{"krate":0,"index":8978},{"krate":0,"index":8980},{"krate":0,"index":8982},{"krate":0,"index":8984},{"krate":0,"index":8986},{"krate":0,"index":8988},{"krate":0,"index":8990},{"krate":0,"index":8992},{"krate":0,"index":8994},{"krate":0,"index":8996},{"krate":0,"index":8998},{"krate":0,"index":9000},{"krate":0,"index":9002},{"krate":0,"index":9004},{"krate":0,"index":9006},{"krate":0,"index":9008},{"krate":0,"index":9010},{"krate":0,"index":9012},{"krate":0,"index":9014},{"krate":0,"index":9016},{"krate":0,"index":9018},{"krate":0,"index":9020},{"krate":0,"index":9022},{"krate":0,"index":9024},{"krate":0,"index":9026},{"krate":0,"index":9028},{"krate":0,"index":9030},{"krate":0,"index":9032},{"krate":0,"index":9035},{"krate":0,"index":8499},{"krate":0,"index":9037},{"krate":0,"index":9040},{"krate":0,"index":9043},{"krate":0,"index":9046},{"krate":0,"index":9049}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1251},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":133594,"byte_end":133603,"line_start":125,"line_end":125,"column_start":12,"column_end":21},"name":"Tokenizer","qualname":"::parser::token::Tokenizer","value":"Tokenizer {  }","parent":null,"children":[{"krate":0,"index":1253}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":133691,"byte_end":133694,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"new","qualname":"<Tokenizer>::new","value":"pub fn new(&'input str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1257},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":133808,"byte_end":133812,"line_start":135,"line_end":135,"column_start":10,"column_end":14},"name":"Span","qualname":"::parser::token::Span","value":"std::ops::Range<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9211},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":133889,"byte_end":133896,"line_start":137,"line_end":137,"column_start":12,"column_end":19},"name":"Spanned","qualname":"::parser::token::Spanned","value":"Spanned { span, value }","parent":null,"children":[{"krate":0,"index":9213},{"krate":0,"index":9214}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9213},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":133910,"byte_end":133914,"line_start":138,"line_end":138,"column_start":9,"column_end":13},"name":"span","qualname":"::parser::token::Spanned::span","value":"std::ops::Range<usize>","parent":{"krate":0,"index":9211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9214},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":133930,"byte_end":133935,"line_start":139,"line_end":139,"column_start":9,"column_end":14},"name":"value","qualname":"::parser::token::Spanned::value","value":"T","parent":{"krate":0,"index":9211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9232},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":133992,"byte_end":134004,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"LexicalError","qualname":"::parser::token::LexicalError","value":"LexicalError { err, span }","parent":null,"children":[{"krate":0,"index":9233},{"krate":0,"index":9234}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9233},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":134015,"byte_end":134018,"line_start":143,"line_end":143,"column_start":9,"column_end":12},"name":"err","qualname":"::parser::token::LexicalError::err","value":"std::string::String","parent":{"krate":0,"index":9232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9234},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":134036,"byte_end":134040,"line_start":144,"line_end":144,"column_start":9,"column_end":13},"name":"span","qualname":"::parser::token::LexicalError::span","value":"std::ops::Range<usize>","parent":{"krate":0,"index":9232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1264},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":134602,"byte_end":134607,"line_start":165,"line_end":165,"column_start":8,"column_end":13},"name":"error","qualname":"::parser::token::error","value":"pub fn error<E: ToString>(E) -> ParserError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1266},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":134729,"byte_end":134735,"line_start":170,"line_end":170,"column_start":8,"column_end":14},"name":"error2","qualname":"::parser::token::error2","value":"pub fn error2<E: ToString>(E, Span) -> ParserError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::parser::types","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1280},{"krate":0,"index":1283},{"krate":0,"index":9246},{"krate":0,"index":9277},{"krate":0,"index":9279},{"krate":0,"index":9281},{"krate":0,"index":9283},{"krate":0,"index":9285},{"krate":0,"index":1286},{"krate":0,"index":9290},{"krate":0,"index":9325},{"krate":0,"index":9327},{"krate":0,"index":9329},{"krate":0,"index":9330},{"krate":0,"index":9332},{"krate":0,"index":9333},{"krate":0,"index":9335},{"krate":0,"index":9287},{"krate":0,"index":9341},{"krate":0,"index":9346},{"krate":0,"index":9348},{"krate":0,"index":9350},{"krate":0,"index":9351},{"krate":0,"index":9353},{"krate":0,"index":9354},{"krate":0,"index":9356},{"krate":0,"index":9338},{"krate":0,"index":9359},{"krate":0,"index":9363},{"krate":0,"index":9365},{"krate":0,"index":1287},{"krate":0,"index":9367},{"krate":0,"index":9370},{"krate":0,"index":9372},{"krate":0,"index":9374},{"krate":0,"index":9381},{"krate":0,"index":9383},{"krate":0,"index":9386},{"krate":0,"index":9388},{"krate":0,"index":9390},{"krate":0,"index":9393},{"krate":0,"index":1289},{"krate":0,"index":1292},{"krate":0,"index":1295},{"krate":0,"index":1298},{"krate":0,"index":1300},{"krate":0,"index":1302},{"krate":0,"index":1305},{"krate":0,"index":1307},{"krate":0,"index":1309},{"krate":0,"index":1311},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1320}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9247},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":140229,"byte_end":140234,"line_start":7,"line_end":7,"column_start":5,"column_end":10},"name":"PrimT","qualname":"::parser::types::IDLType::PrimT","value":"IDLType::PrimT(PrimType)","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9250},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":140250,"byte_end":140254,"line_start":8,"line_end":8,"column_start":5,"column_end":9},"name":"VarT","qualname":"::parser::types::IDLType::VarT","value":"IDLType::VarT(String)","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9253},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":140268,"byte_end":140273,"line_start":9,"line_end":9,"column_start":5,"column_end":10},"name":"FuncT","qualname":"::parser::types::IDLType::FuncT","value":"IDLType::FuncT(FuncType)","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9256},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":140289,"byte_end":140293,"line_start":10,"line_end":10,"column_start":5,"column_end":9},"name":"OptT","qualname":"::parser::types::IDLType::OptT","value":"IDLType::OptT(Box<IDLType>)","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9259},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":140313,"byte_end":140317,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"VecT","qualname":"::parser::types::IDLType::VecT","value":"IDLType::VecT(Box<IDLType>)","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9262},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":140337,"byte_end":140344,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"RecordT","qualname":"::parser::types::IDLType::RecordT","value":"IDLType::RecordT(Vec<TypeField>)","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9265},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":140366,"byte_end":140374,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"name":"VariantT","qualname":"::parser::types::IDLType::VariantT","value":"IDLType::VariantT(Vec<TypeField>)","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9268},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":140396,"byte_end":140401,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"ServT","qualname":"::parser::types::IDLType::ServT","value":"IDLType::ServT(Vec<Binding>)","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9271},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":140421,"byte_end":140427,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"ClassT","qualname":"::parser::types::IDLType::ClassT","value":"IDLType::ClassT(Vec<IDLType>, Box<IDLType>)","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9275},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":140461,"byte_end":140471,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"name":"PrincipalT","qualname":"::parser::types::IDLType::PrincipalT","value":"IDLType::PrincipalT","parent":{"krate":0,"index":9246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9246},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":140215,"byte_end":140222,"line_start":6,"line_end":6,"column_start":10,"column_end":17},"name":"IDLType","qualname":"::parser::types::IDLType","value":"pub enum IDLType {\n    PrimT(PrimType),\n    VarT(String),\n    FuncT(FuncType),\n    OptT(Box<IDLType>),\n    VecT(Box<IDLType>),\n    RecordT(Vec<TypeField>),\n    VariantT(Vec<TypeField>),\n    ServT(Vec<Binding>),\n    ClassT(Vec<IDLType>, Box<IDLType>),\n    PrincipalT,\n}","parent":null,"children":[{"krate":0,"index":9247},{"krate":0,"index":9250},{"krate":0,"index":9253},{"krate":0,"index":9256},{"krate":0,"index":9259},{"krate":0,"index":9262},{"krate":0,"index":9265},{"krate":0,"index":9268},{"krate":0,"index":9271},{"krate":0,"index":9275}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9281},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":140511,"byte_end":140519,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"IDLTypes","qualname":"::parser::types::IDLTypes","value":"IDLTypes { args }","parent":null,"children":[{"krate":0,"index":9282}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9282},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":140530,"byte_end":140534,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"name":"args","qualname":"::parser::types::IDLTypes::args","value":"std::vec::Vec<parser::types::IDLType>","parent":{"krate":0,"index":9281},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9291},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141292,"byte_end":141295,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Nat","qualname":"::parser::types::PrimType::Nat","value":"PrimType::Nat","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9293},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141301,"byte_end":141305,"line_start":51,"line_end":51,"column_start":5,"column_end":9},"name":"Nat8","qualname":"::parser::types::PrimType::Nat8","value":"PrimType::Nat8","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9295},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141311,"byte_end":141316,"line_start":52,"line_end":52,"column_start":5,"column_end":10},"name":"Nat16","qualname":"::parser::types::PrimType::Nat16","value":"PrimType::Nat16","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9297},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141322,"byte_end":141327,"line_start":53,"line_end":53,"column_start":5,"column_end":10},"name":"Nat32","qualname":"::parser::types::PrimType::Nat32","value":"PrimType::Nat32","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9299},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141333,"byte_end":141338,"line_start":54,"line_end":54,"column_start":5,"column_end":10},"name":"Nat64","qualname":"::parser::types::PrimType::Nat64","value":"PrimType::Nat64","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9301},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141344,"byte_end":141347,"line_start":55,"line_end":55,"column_start":5,"column_end":8},"name":"Int","qualname":"::parser::types::PrimType::Int","value":"PrimType::Int","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9303},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141353,"byte_end":141357,"line_start":56,"line_end":56,"column_start":5,"column_end":9},"name":"Int8","qualname":"::parser::types::PrimType::Int8","value":"PrimType::Int8","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9305},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141363,"byte_end":141368,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"name":"Int16","qualname":"::parser::types::PrimType::Int16","value":"PrimType::Int16","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9307},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141374,"byte_end":141379,"line_start":58,"line_end":58,"column_start":5,"column_end":10},"name":"Int32","qualname":"::parser::types::PrimType::Int32","value":"PrimType::Int32","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9309},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141385,"byte_end":141390,"line_start":59,"line_end":59,"column_start":5,"column_end":10},"name":"Int64","qualname":"::parser::types::PrimType::Int64","value":"PrimType::Int64","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9311},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141396,"byte_end":141403,"line_start":60,"line_end":60,"column_start":5,"column_end":12},"name":"Float32","qualname":"::parser::types::PrimType::Float32","value":"PrimType::Float32","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9313},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141409,"byte_end":141416,"line_start":61,"line_end":61,"column_start":5,"column_end":12},"name":"Float64","qualname":"::parser::types::PrimType::Float64","value":"PrimType::Float64","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9315},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141422,"byte_end":141426,"line_start":62,"line_end":62,"column_start":5,"column_end":9},"name":"Bool","qualname":"::parser::types::PrimType::Bool","value":"PrimType::Bool","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9317},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141432,"byte_end":141436,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"name":"Text","qualname":"::parser::types::PrimType::Text","value":"PrimType::Text","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9319},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141442,"byte_end":141446,"line_start":64,"line_end":64,"column_start":5,"column_end":9},"name":"Null","qualname":"::parser::types::PrimType::Null","value":"PrimType::Null","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9321},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141452,"byte_end":141460,"line_start":65,"line_end":65,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::parser::types::PrimType::Reserved","value":"PrimType::Reserved","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9323},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141466,"byte_end":141471,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Empty","qualname":"::parser::types::PrimType::Empty","value":"PrimType::Empty","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9290},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141277,"byte_end":141285,"line_start":49,"line_end":49,"column_start":10,"column_end":18},"name":"PrimType","qualname":"::parser::types::PrimType","value":"pub enum PrimType {\n    Nat,\n    Nat8,\n    Nat16,\n    Nat32,\n    Nat64,\n    Int,\n    Int8,\n    Int16,\n    Int32,\n    Int64,\n    Float32,\n    Float64,\n    Bool,\n    Text,\n    Null,\n    Reserved,\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":9291},{"krate":0,"index":9293},{"krate":0,"index":9295},{"krate":0,"index":9297},{"krate":0,"index":9299},{"krate":0,"index":9301},{"krate":0,"index":9303},{"krate":0,"index":9305},{"krate":0,"index":9307},{"krate":0,"index":9309},{"krate":0,"index":9311},{"krate":0,"index":9313},{"krate":0,"index":9315},{"krate":0,"index":9317},{"krate":0,"index":9319},{"krate":0,"index":9321},{"krate":0,"index":9323}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9342},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141516,"byte_end":141522,"line_start":71,"line_end":71,"column_start":5,"column_end":11},"name":"Oneway","qualname":"::parser::types::FuncMode::Oneway","value":"FuncMode::Oneway","parent":{"krate":0,"index":9341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9344},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141528,"byte_end":141533,"line_start":72,"line_end":72,"column_start":5,"column_end":10},"name":"Query","qualname":"::parser::types::FuncMode::Query","value":"FuncMode::Query","parent":{"krate":0,"index":9341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9341},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141501,"byte_end":141509,"line_start":70,"line_end":70,"column_start":10,"column_end":18},"name":"FuncMode","qualname":"::parser::types::FuncMode","value":"pub enum FuncMode { Oneway, Query, }","parent":null,"children":[{"krate":0,"index":9342},{"krate":0,"index":9344}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9359},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141574,"byte_end":141582,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"FuncType","qualname":"::parser::types::FuncType","value":"FuncType { modes, args, rets }","parent":null,"children":[{"krate":0,"index":9360},{"krate":0,"index":9361},{"krate":0,"index":9362}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9360},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141593,"byte_end":141598,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"name":"modes","qualname":"::parser::types::FuncType::modes","value":"std::vec::Vec<parser::types::FuncMode>","parent":{"krate":0,"index":9359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9361},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141623,"byte_end":141627,"line_start":78,"line_end":78,"column_start":9,"column_end":13},"name":"args","qualname":"::parser::types::FuncType::args","value":"std::vec::Vec<parser::types::IDLType>","parent":{"krate":0,"index":9359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9362},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141651,"byte_end":141655,"line_start":79,"line_end":79,"column_start":9,"column_end":13},"name":"rets","qualname":"::parser::types::FuncType::rets","value":"std::vec::Vec<parser::types::IDLType>","parent":{"krate":0,"index":9359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141701,"byte_end":141709,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"is_query","qualname":"<FuncType>::is_query","value":"pub fn is_query(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9367},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141916,"byte_end":141925,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"TypeField","qualname":"::parser::types::TypeField","value":"TypeField { label, typ }","parent":null,"children":[{"krate":0,"index":9368},{"krate":0,"index":9369}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9368},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141936,"byte_end":141941,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"label","qualname":"::parser::types::TypeField::label","value":"types::internal::Label","parent":{"krate":0,"index":9367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9369},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141958,"byte_end":141961,"line_start":96,"line_end":96,"column_start":9,"column_end":12},"name":"typ","qualname":"::parser::types::TypeField::typ","value":"parser::types::IDLType","parent":{"krate":0,"index":9367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9375},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":142011,"byte_end":142015,"line_start":101,"line_end":101,"column_start":5,"column_end":9},"name":"TypD","qualname":"::parser::types::Dec::TypD","value":"Dec::TypD(Binding)","parent":{"krate":0,"index":9374},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9378},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":142030,"byte_end":142037,"line_start":102,"line_end":102,"column_start":5,"column_end":12},"name":"ImportD","qualname":"::parser::types::Dec::ImportD","value":"Dec::ImportD(String)","parent":{"krate":0,"index":9374},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9374},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":142001,"byte_end":142004,"line_start":100,"line_end":100,"column_start":10,"column_end":13},"name":"Dec","qualname":"::parser::types::Dec","value":"pub enum Dec { TypD(Binding), ImportD(String), }","parent":null,"children":[{"krate":0,"index":9375},{"krate":0,"index":9378}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9383},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":142085,"byte_end":142092,"line_start":106,"line_end":106,"column_start":12,"column_end":19},"name":"Binding","qualname":"::parser::types::Binding","value":"Binding { id, typ }","parent":null,"children":[{"krate":0,"index":9384},{"krate":0,"index":9385}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9384},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":142103,"byte_end":142105,"line_start":107,"line_end":107,"column_start":9,"column_end":11},"name":"id","qualname":"::parser::types::Binding::id","value":"std::string::String","parent":{"krate":0,"index":9383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9385},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":142123,"byte_end":142126,"line_start":108,"line_end":108,"column_start":9,"column_end":12},"name":"typ","qualname":"::parser::types::Binding::typ","value":"parser::types::IDLType","parent":{"krate":0,"index":9383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9390},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":142168,"byte_end":142175,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"IDLProg","qualname":"::parser::types::IDLProg","value":"IDLProg { decs, actor }","parent":null,"children":[{"krate":0,"index":9391},{"krate":0,"index":9392}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9391},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":142186,"byte_end":142190,"line_start":113,"line_end":113,"column_start":9,"column_end":13},"name":"decs","qualname":"::parser::types::IDLProg::decs","value":"std::vec::Vec<parser::types::Dec>","parent":{"krate":0,"index":9390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9392},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":142210,"byte_end":142215,"line_start":114,"line_end":114,"column_start":9,"column_end":14},"name":"actor","qualname":"::parser::types::IDLProg::actor","value":"std::option::Option<parser::types::IDLType>","parent":{"krate":0,"index":9390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1298},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":142975,"byte_end":142980,"line_start":143,"line_end":143,"column_start":11,"column_end":16},"name":"ToDoc","qualname":"::parser::types::ToDoc","value":"ToDoc","parent":null,"children":[{"krate":0,"index":1299}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":142990,"byte_end":142996,"line_start":144,"line_end":144,"column_start":8,"column_end":14},"name":"to_doc","qualname":"::parser::types::ToDoc::to_doc","value":"pub fn to_doc(&Self) -> RcDoc<, ()>","parent":{"krate":0,"index":1298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":143028,"byte_end":143037,"line_start":147,"line_end":147,"column_start":8,"column_end":17},"name":"to_pretty","qualname":"::parser::types::to_pretty","value":"pub fn to_pretty<T>(&T, usize) -> String where T: ToDoc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1322},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"value","qualname":"::parser::value","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","parent":null,"children":[{"krate":0,"index":1323},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1340},{"krate":0,"index":1343},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1350},{"krate":0,"index":1353},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1360},{"krate":0,"index":1363},{"krate":0,"index":1366},{"krate":0,"index":1369},{"krate":0,"index":9395},{"krate":0,"index":9469},{"krate":0,"index":9470},{"krate":0,"index":9473},{"krate":0,"index":9475},{"krate":0,"index":9479},{"krate":0,"index":1372},{"krate":0,"index":9481},{"krate":0,"index":9484},{"krate":0,"index":9485},{"krate":0,"index":9488},{"krate":0,"index":9490},{"krate":0,"index":9492},{"krate":0,"index":9493},{"krate":0,"index":9496},{"krate":0,"index":1374},{"krate":0,"index":1383},{"krate":0,"index":1386},{"krate":0,"index":1389},{"krate":0,"index":1398},{"krate":0,"index":1407},{"krate":0,"index":1409},{"krate":0,"index":1410}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9396},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":147838,"byte_end":147842,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Bool","qualname":"::parser::value::IDLValue::Bool","value":"IDLValue::Bool(bool)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9399},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":147854,"byte_end":147858,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Null","qualname":"::parser::value::IDLValue::Null","value":"IDLValue::Null","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9401},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":147864,"byte_end":147868,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"Text","qualname":"::parser::value::IDLValue::Text","value":"IDLValue::Text(String)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9404},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":147882,"byte_end":147888,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Number","qualname":"::parser::value::IDLValue::Number","value":"IDLValue::Number(String)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9407},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":147930,"byte_end":147937,"line_start":18,"line_end":18,"column_start":5,"column_end":12},"name":"Float64","qualname":"::parser::value::IDLValue::Float64","value":"IDLValue::Float64(f64)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9410},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":147948,"byte_end":147951,"line_start":19,"line_end":19,"column_start":5,"column_end":8},"name":"Opt","qualname":"::parser::value::IDLValue::Opt","value":"IDLValue::Opt(Box<IDLValue>)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9413},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":147972,"byte_end":147975,"line_start":20,"line_end":20,"column_start":5,"column_end":8},"name":"Vec","qualname":"::parser::value::IDLValue::Vec","value":"IDLValue::Vec(Vec<IDLValue>)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9416},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":147996,"byte_end":148002,"line_start":21,"line_end":21,"column_start":5,"column_end":11},"name":"Record","qualname":"::parser::value::IDLValue::Record","value":"IDLValue::Record(Vec<IDLField>)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9419},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148023,"byte_end":148030,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"Variant","qualname":"::parser::value::IDLValue::Variant","value":"IDLValue::Variant(VariantValue)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9422},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148050,"byte_end":148059,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"name":"Principal","qualname":"::parser::value::IDLValue::Principal","value":"IDLValue::Principal(crate::Principal)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9425},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148083,"byte_end":148090,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"name":"Service","qualname":"::parser::value::IDLValue::Service","value":"IDLValue::Service(crate::Principal)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9428},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148114,"byte_end":148118,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Func","qualname":"::parser::value::IDLValue::Func","value":"IDLValue::Func(crate::Principal, String)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9432},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148221,"byte_end":148225,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"None","qualname":"::parser::value::IDLValue::None","value":"IDLValue::None","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9434},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148231,"byte_end":148234,"line_start":28,"line_end":28,"column_start":5,"column_end":8},"name":"Int","qualname":"::parser::value::IDLValue::Int","value":"IDLValue::Int(Int)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9437},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148245,"byte_end":148248,"line_start":29,"line_end":29,"column_start":5,"column_end":8},"name":"Nat","qualname":"::parser::value::IDLValue::Nat","value":"IDLValue::Nat(Nat)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9440},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148259,"byte_end":148263,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Nat8","qualname":"::parser::value::IDLValue::Nat8","value":"IDLValue::Nat8(u8)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9443},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148273,"byte_end":148278,"line_start":31,"line_end":31,"column_start":5,"column_end":10},"name":"Nat16","qualname":"::parser::value::IDLValue::Nat16","value":"IDLValue::Nat16(u16)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9446},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148289,"byte_end":148294,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Nat32","qualname":"::parser::value::IDLValue::Nat32","value":"IDLValue::Nat32(u32)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9449},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148305,"byte_end":148310,"line_start":33,"line_end":33,"column_start":5,"column_end":10},"name":"Nat64","qualname":"::parser::value::IDLValue::Nat64","value":"IDLValue::Nat64(u64)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9452},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148321,"byte_end":148325,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"name":"Int8","qualname":"::parser::value::IDLValue::Int8","value":"IDLValue::Int8(i8)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9455},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148335,"byte_end":148340,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"Int16","qualname":"::parser::value::IDLValue::Int16","value":"IDLValue::Int16(i16)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9458},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148351,"byte_end":148356,"line_start":36,"line_end":36,"column_start":5,"column_end":10},"name":"Int32","qualname":"::parser::value::IDLValue::Int32","value":"IDLValue::Int32(i32)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9461},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148367,"byte_end":148372,"line_start":37,"line_end":37,"column_start":5,"column_end":10},"name":"Int64","qualname":"::parser::value::IDLValue::Int64","value":"IDLValue::Int64(i64)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9464},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148383,"byte_end":148390,"line_start":38,"line_end":38,"column_start":5,"column_end":12},"name":"Float32","qualname":"::parser::value::IDLValue::Float32","value":"IDLValue::Float32(f32)","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9467},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148401,"byte_end":148409,"line_start":39,"line_end":39,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::parser::value::IDLValue::Reserved","value":"IDLValue::Reserved","parent":{"krate":0,"index":9395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9395},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":147823,"byte_end":147831,"line_start":13,"line_end":13,"column_start":10,"column_end":18},"name":"IDLValue","qualname":"::parser::value::IDLValue","value":"pub enum IDLValue {\n    Bool(bool),\n    Null,\n    Text(String),\n    Number(String),\n    Float64(f64),\n    Opt(Box<IDLValue>),\n    Vec(Vec<IDLValue>),\n    Record(Vec<IDLField>),\n    Variant(VariantValue),\n    Principal(crate::Principal),\n    Service(crate::Principal),\n    Func(crate::Principal, String),\n    None,\n    Int(Int),\n    Nat(Nat),\n    Nat8(u8),\n    Nat16(u16),\n    Nat32(u32),\n    Nat64(u64),\n    Int8(i8),\n    Int16(i16),\n    Int32(i32),\n    Int64(i64),\n    Float32(f32),\n    Reserved,\n}","parent":null,"children":[{"krate":0,"index":9396},{"krate":0,"index":9399},{"krate":0,"index":9401},{"krate":0,"index":9404},{"krate":0,"index":9407},{"krate":0,"index":9410},{"krate":0,"index":9413},{"krate":0,"index":9416},{"krate":0,"index":9419},{"krate":0,"index":9422},{"krate":0,"index":9425},{"krate":0,"index":9428},{"krate":0,"index":9432},{"krate":0,"index":9434},{"krate":0,"index":9437},{"krate":0,"index":9440},{"krate":0,"index":9443},{"krate":0,"index":9446},{"krate":0,"index":9449},{"krate":0,"index":9452},{"krate":0,"index":9455},{"krate":0,"index":9458},{"krate":0,"index":9461},{"krate":0,"index":9464},{"krate":0,"index":9467}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9475},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148442,"byte_end":148454,"line_start":43,"line_end":43,"column_start":12,"column_end":24},"name":"VariantValue","qualname":"::parser::value::VariantValue","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9477},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148455,"byte_end":148472,"line_start":43,"line_end":43,"column_start":25,"column_end":42},"name":"0","qualname":"::parser::value::VariantValue::0","value":"std::boxed::Box<parser::value::IDLField>","parent":{"krate":0,"index":9475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9478},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148474,"byte_end":148481,"line_start":43,"line_end":43,"column_start":44,"column_end":51},"name":"1","qualname":"::parser::value::VariantValue::1","value":"u64","parent":{"krate":0,"index":9475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9481},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148732,"byte_end":148740,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"IDLField","qualname":"::parser::value::IDLField","value":"IDLField { id, val }","parent":null,"children":[{"krate":0,"index":9482},{"krate":0,"index":9483}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9482},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148751,"byte_end":148753,"line_start":52,"line_end":52,"column_start":9,"column_end":11},"name":"id","qualname":"::parser::value::IDLField::id","value":"types::internal::Label","parent":{"krate":0,"index":9481},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9483},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148770,"byte_end":148773,"line_start":53,"line_end":53,"column_start":9,"column_end":12},"name":"val","qualname":"::parser::value::IDLField::val","value":"parser::value::IDLValue","parent":{"krate":0,"index":9481},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9490},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148827,"byte_end":148834,"line_start":57,"line_end":57,"column_start":12,"column_end":19},"name":"IDLArgs","qualname":"::parser::value::IDLArgs","value":"IDLArgs { args }","parent":null,"children":[{"krate":0,"index":9491}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9491},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148845,"byte_end":148849,"line_start":58,"line_end":58,"column_start":9,"column_end":13},"name":"args","qualname":"::parser::value::IDLArgs::args","value":"std::vec::Vec<parser::value::IDLValue>","parent":{"krate":0,"index":9490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148895,"byte_end":148898,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"new","qualname":"<IDLArgs>::new","value":"pub fn new(&[IDLValue]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":149008,"byte_end":149022,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"annotate_types","qualname":"<IDLArgs>::annotate_types","value":"pub fn annotate_types(Self, bool, &TypeEnv, &[Type]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":149839,"byte_end":149848,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"get_types","qualname":"<IDLArgs>::get_types","value":"pub fn get_types(&Self) -> Vec<Type>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":150110,"byte_end":150129,"line_start":94,"line_end":94,"column_start":12,"column_end":31},"name":"to_bytes_with_types","qualname":"<IDLArgs>::to_bytes_with_types","value":"pub fn to_bytes_with_types(&Self, &TypeEnv, &[Type]) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Encode IDLArgs with the given types. Note that this is not equivalent to\n `idl_args.annotate_types(true, env, types).to_bytes()` for recursive types.\n","sig":null,"attributes":[{"value":"/ Encode IDLArgs with the given types. Note that this is not equivalent to","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":149938,"byte_end":150014,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/ `idl_args.annotate_types(true, env, types).to_bytes()` for recursive types.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":150019,"byte_end":150098,"line_start":93,"line_end":93,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":150808,"byte_end":150816,"line_start":110,"line_end":110,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<IDLArgs>::to_bytes","value":"pub fn to_bytes(&Self) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":151023,"byte_end":151044,"line_start":117,"line_end":117,"column_start":12,"column_end":33},"name":"from_bytes_with_types","qualname":"<IDLArgs>::from_bytes_with_types","value":"pub fn from_bytes_with_types(&[u8], &TypeEnv, &[Type]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":151393,"byte_end":151403,"line_start":127,"line_end":127,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<IDLArgs>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":152473,"byte_end":152486,"line_start":159,"line_end":159,"column_start":12,"column_end":25},"name":"annotate_type","qualname":"<IDLValue>::annotate_type","value":"pub fn annotate_type(&Self, bool, &TypeEnv, &Type) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Anotate `IDLValue` with the given type, allowing subtyping. If `IDLValue` is parsed from\n string, we need to set `from_parser` to true to enable converting numbers to the expected\n types, and disable the opt rules.\n","sig":null,"attributes":[{"value":"/ Anotate `IDLValue` with the given type, allowing subtyping. If `IDLValue` is parsed from","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":152229,"byte_end":152321,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ string, we need to set `from_parser` to true to enable converting numbers to the expected","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":152326,"byte_end":152419,"line_start":157,"line_end":157,"column_start":5,"column_end":98}},{"value":"/ types, and disable the opt rules.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":152424,"byte_end":152461,"line_start":158,"line_end":158,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":158967,"byte_end":158975,"line_start":286,"line_end":286,"column_start":12,"column_end":20},"name":"value_ty","qualname":"<IDLValue>::value_ty","value":"pub fn value_ty(&Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1447},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"typing","qualname":"::parser::typing","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","parent":null,"children":[{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1456},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1463},{"krate":0,"index":1466},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1473},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1480},{"krate":0,"index":1483},{"krate":0,"index":9520},{"krate":0,"index":9523},{"krate":0,"index":9525},{"krate":0,"index":9527},{"krate":0,"index":1487},{"krate":0,"index":1511},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1533},{"krate":0,"index":1534}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1483},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":170543,"byte_end":170546,"line_start":7,"line_end":7,"column_start":12,"column_end":15},"name":"Env","qualname":"::parser::typing::Env","value":"Env { te, pre }","parent":null,"children":[{"krate":0,"index":1485},{"krate":0,"index":1486}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1485},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":170561,"byte_end":170563,"line_start":8,"line_end":8,"column_start":9,"column_end":11},"name":"te","qualname":"::parser::typing::Env::te","value":"&'a mut parser::typing::TypeEnv","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1486},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":170590,"byte_end":170593,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"pre","qualname":"::parser::typing::Env::pre","value":"bool","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9520},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":170648,"byte_end":170655,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"TypeEnv","qualname":"::parser::typing::TypeEnv","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9522},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":170656,"byte_end":170682,"line_start":13,"line_end":13,"column_start":20,"column_end":46},"name":"0","qualname":"::parser::typing::TypeEnv::0","value":"std::collections::BTreeMap<std::string::String, types::internal::Type>","parent":{"krate":0,"index":9520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":170712,"byte_end":170715,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeEnv>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1489},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":170822,"byte_end":170833,"line_start":20,"line_end":20,"column_start":12,"column_end":23},"name":"ast_to_type","qualname":"<TypeEnv>::ast_to_type","value":"pub fn ast_to_type(&Self, &super::types::IDLType) -> Result<Type>","parent":null,"children":[],"decl_id":null,"docs":" Convert candid AST to internal Type\n","sig":null,"attributes":[{"value":"/ Convert candid AST to internal Type","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":170771,"byte_end":170810,"line_start":19,"line_end":19,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":171029,"byte_end":171034,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"merge","qualname":"<TypeEnv>::merge","value":"pub fn merge<'a>(&'a mut Self, &TypeEnv) -> Result<&'a mut Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":171365,"byte_end":171375,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"merge_type","qualname":"<TypeEnv>::merge_type","value":"pub fn merge_type(&mut Self, TypeEnv, Type) -> Type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":171930,"byte_end":171939,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"find_type","qualname":"<TypeEnv>::find_type","value":"pub fn find_type(&Self, &str) -> Result<&Type>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":172150,"byte_end":172163,"line_start":59,"line_end":59,"column_start":12,"column_end":25},"name":"rec_find_type","qualname":"<TypeEnv>::rec_find_type","value":"pub fn rec_find_type(&Self, &str) -> Result<&Type>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":172344,"byte_end":172354,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"trace_type","qualname":"<TypeEnv>::trace_type","value":"pub fn trace_type<'a>(&'a Self, &'a Type) -> Result<Type>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":172644,"byte_end":172651,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"as_func","qualname":"<TypeEnv>::as_func","value":"pub fn as_func<'a>(&'a Self, &'a Type) -> Result<&'a Function>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":172923,"byte_end":172933,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"as_service","qualname":"<TypeEnv>::as_service","value":"pub fn as_service<'a>(&'a Self, &'a Type) -> Result<&'a [(String, Type)]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":173273,"byte_end":173283,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"get_method","qualname":"<TypeEnv>::get_method","value":"pub fn get_method<'a>(&'a Self, &'a Type, &'a str) -> Result<&'a Function>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":174759,"byte_end":174772,"line_start":135,"line_end":135,"column_start":12,"column_end":25},"name":"replace_empty","qualname":"<TypeEnv>::replace_empty","value":"pub fn replace_empty(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: needless_collect)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":174713,"byte_end":174747,"line_start":134,"line_end":134,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1514},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":175979,"byte_end":175989,"line_start":173,"line_end":173,"column_start":8,"column_end":18},"name":"check_type","qualname":"::parser::typing::check_type","value":"pub fn check_type(&Env, &IDLType) -> Result<Type>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1515},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":177852,"byte_end":177864,"line_start":230,"line_end":230,"column_start":8,"column_end":20},"name":"check_unique","qualname":"::parser::typing::check_unique","value":"pub fn check_unique<'a, I, T>(I) -> Result<()> where T: 'a + PartialEq +\nstd::fmt::Display, I: Iterator<Item = &'a T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1530},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":182617,"byte_end":182627,"line_start":393,"line_end":393,"column_start":8,"column_end":18},"name":"check_prog","qualname":"::parser::typing::check_prog","value":"pub fn check_prog(&mut TypeEnv, &IDLProg) -> Result<Option<Type>>","parent":null,"children":[],"decl_id":null,"docs":" Type check IDLProg and adds bindings to type environment. Returns\n a hash map for the serivce method signatures. This function ignores the imports.\n","sig":null,"attributes":[{"value":"/ Type check IDLProg and adds bindings to type environment. Returns","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":182455,"byte_end":182524,"line_start":391,"line_end":391,"column_start":1,"column_end":70}},{"value":"/ a hash map for the serivce method signatures. This function ignores the imports.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":182525,"byte_end":182609,"line_start":392,"line_end":392,"column_start":1,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":1533},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":183951,"byte_end":183961,"line_start":434,"line_end":434,"column_start":8,"column_end":18},"name":"check_file","qualname":"::parser::typing::check_file","value":"pub fn check_file(&Path) -> Result<(TypeEnv, Option<Type>)>","parent":null,"children":[],"decl_id":null,"docs":" Type check did file including the imports.\n","sig":null,"attributes":[{"value":"/ Type check did file including the imports.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":183897,"byte_end":183943,"line_start":433,"line_end":433,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":184050,"byte_end":184067,"line_start":437,"line_end":437,"column_start":8,"column_end":25},"name":"pretty_check_file","qualname":"::parser::typing::pretty_check_file","value":"pub fn pretty_check_file(&Path) -> Result<(TypeEnv, Option<Type>)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1535},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/pretty.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pretty","qualname":"::parser::pretty","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/pretty.rs","parent":null,"children":[{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1540},{"krate":0,"index":1543},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1550},{"krate":0,"index":1553},{"krate":0,"index":1556},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1562},{"krate":0,"index":1564},{"krate":0,"index":1566},{"krate":0,"index":1568},{"krate":0,"index":1570},{"krate":0,"index":1573},{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1584}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1568},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/pretty.rs","byte_start":185560,"byte_end":185576,"line_start":61,"line_end":61,"column_start":8,"column_end":24},"name":"number_to_string","qualname":"::parser::pretty::number_to_string","value":"pub fn number_to_string(&IDLValue) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/pretty.rs","byte_start":190064,"byte_end":190071,"line_start":188,"line_end":188,"column_start":8,"column_end":15},"name":"pp_char","qualname":"::parser::pretty::pp_char","value":"pub fn pp_char(u8) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1580},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/pretty.rs","byte_start":190298,"byte_end":190306,"line_start":196,"line_end":196,"column_start":8,"column_end":16},"name":"pp_value","qualname":"::parser::pretty::pp_value","value":"pub fn pp_value(usize, &IDLValue) -> RcDoc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1584},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/pretty.rs","byte_start":191639,"byte_end":191646,"line_start":230,"line_end":230,"column_start":8,"column_end":15},"name":"pp_args","qualname":"::parser::pretty::pp_args","value":"pub fn pp_args(&IDLArgs) -> RcDoc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1586},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"test","qualname":"::parser::test","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","parent":null,"children":[{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1591},{"krate":0,"index":1594},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1604},{"krate":0,"index":1607},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1614},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1621},{"krate":0,"index":1627},{"krate":0,"index":1634},{"krate":0,"index":1637},{"krate":0,"index":1658},{"krate":0,"index":1660},{"krate":0,"index":1663},{"krate":0,"index":1666},{"krate":0,"index":1669}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1618},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192058,"byte_end":192062,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Test","qualname":"::parser::test::Test","value":"Test { defs, asserts }","parent":null,"children":[{"krate":0,"index":1619},{"krate":0,"index":1620}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1619},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192073,"byte_end":192077,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"defs","qualname":"::parser::test::Test::defs","value":"std::vec::Vec<parser::types::Dec>","parent":{"krate":0,"index":1618},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1620},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192097,"byte_end":192104,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"name":"asserts","qualname":"::parser::test::Test::asserts","value":"std::vec::Vec<parser::test::Assert>","parent":{"krate":0,"index":1618},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1621},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192133,"byte_end":192139,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Assert","qualname":"::parser::test::Assert","value":"Assert { left, right, typ, pass, desc }","parent":null,"children":[{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1625},{"krate":0,"index":1626}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1622},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192150,"byte_end":192154,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"left","qualname":"::parser::test::Assert::left","value":"parser::test::Input","parent":{"krate":0,"index":1621},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1623},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192171,"byte_end":192176,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"right","qualname":"::parser::test::Assert::right","value":"std::option::Option<parser::test::Input>","parent":{"krate":0,"index":1621},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1624},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192201,"byte_end":192204,"line_start":17,"line_end":17,"column_start":9,"column_end":12},"name":"typ","qualname":"::parser::test::Assert::typ","value":"std::vec::Vec<parser::types::IDLType>","parent":{"krate":0,"index":1621},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1625},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192223,"byte_end":192227,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"name":"pass","qualname":"::parser::test::Assert::pass","value":"bool","parent":{"krate":0,"index":1621},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1626},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192243,"byte_end":192247,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"name":"desc","qualname":"::parser::test::Assert::desc","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1621},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1628},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192289,"byte_end":192293,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"name":"Text","qualname":"::parser::test::Input::Text","value":"Input::Text(String)","parent":{"krate":0,"index":1627},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1631},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192307,"byte_end":192311,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"Blob","qualname":"::parser::test::Input::Blob","value":"Input::Blob(Vec<u8>)","parent":{"krate":0,"index":1627},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1627},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192277,"byte_end":192282,"line_start":22,"line_end":22,"column_start":10,"column_end":15},"name":"Input","qualname":"::parser::test::Input","value":"pub enum Input { Text(String), Blob(Vec<u8>), }","parent":null,"children":[{"krate":0,"index":1628},{"krate":0,"index":1631}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1634},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192375,"byte_end":192383,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"HostTest","qualname":"::parser::test::HostTest","value":"HostTest { desc, asserts }","parent":null,"children":[{"krate":0,"index":1635},{"krate":0,"index":1636}],"decl_id":null,"docs":" Generate assertions for host value\n","sig":null,"attributes":[{"value":"/ Generate assertions for host value","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192325,"byte_end":192363,"line_start":27,"line_end":27,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1635},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192394,"byte_end":192398,"line_start":29,"line_end":29,"column_start":9,"column_end":13},"name":"desc","qualname":"::parser::test::HostTest::desc","value":"std::string::String","parent":{"krate":0,"index":1634},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1636},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192416,"byte_end":192423,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"name":"asserts","qualname":"::parser::test::HostTest::asserts","value":"std::vec::Vec<parser::test::HostAssert>","parent":{"krate":0,"index":1634},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1638},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192509,"byte_end":192515,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Encode","qualname":"::parser::test::HostAssert::Encode","value":"HostAssert::Encode(IDLArgs, Vec<Type>, bool, Vec<u8>)","parent":{"krate":0,"index":1637},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1644},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192556,"byte_end":192565,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"NotEncode","qualname":"::parser::test::HostAssert::NotEncode","value":"HostAssert::NotEncode(IDLArgs, Vec<Type>)","parent":{"krate":0,"index":1637},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1648},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192591,"byte_end":192597,"line_start":36,"line_end":36,"column_start":5,"column_end":11},"name":"Decode","qualname":"::parser::test::HostAssert::Decode","value":"HostAssert::Decode(Vec<u8>, Vec<Type>, bool, IDLArgs)","parent":{"krate":0,"index":1637},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1654},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192638,"byte_end":192647,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"NotDecode","qualname":"::parser::test::HostAssert::NotDecode","value":"HostAssert::NotDecode(Vec<u8>, Vec<Type>)","parent":{"krate":0,"index":1637},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1637},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192453,"byte_end":192463,"line_start":32,"line_end":32,"column_start":10,"column_end":20},"name":"HostAssert","qualname":"::parser::test::HostAssert","value":"pub enum HostAssert {\n    Encode(IDLArgs, Vec<Type>, bool, Vec<u8>),\n    NotEncode(IDLArgs, Vec<Type>),\n    Decode(Vec<u8>, Vec<Type>, bool, IDLArgs),\n    NotDecode(Vec<u8>, Vec<Type>),\n}","parent":null,"children":[{"krate":0,"index":1638},{"krate":0,"index":1644},{"krate":0,"index":1648},{"krate":0,"index":1654}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1659},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192697,"byte_end":192701,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"desc","qualname":"<Assert>::desc","value":"pub fn desc(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192868,"byte_end":192873,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"parse","qualname":"<Input>::parse","value":"pub fn parse(&Self, &TypeEnv, &[Type]) -> Result<IDLArgs>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1667},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":193782,"byte_end":193793,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"from_assert","qualname":"<HostTest>::from_assert","value":"pub fn from_assert(&Assert, &TypeEnv, &[Type]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1669},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":196411,"byte_end":196416,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"check","qualname":"::parser::test::check","value":"pub fn check(Test) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1689},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binary_parser","qualname":"::binary_parser","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","parent":null,"children":[{"krate":0,"index":1690},{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1700},{"krate":0,"index":1703},{"krate":0,"index":1706},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1713},{"krate":0,"index":1716},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1723},{"krate":0,"index":1726},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1733},{"krate":0,"index":1736},{"krate":0,"index":1739},{"krate":0,"index":1742},{"krate":0,"index":1745},{"krate":0,"index":1748},{"krate":0,"index":9545},{"krate":0,"index":9529},{"krate":0,"index":9543},{"krate":0,"index":9549},{"krate":0,"index":9550},{"krate":0,"index":9564},{"krate":0,"index":9568},{"krate":0,"index":9569},{"krate":0,"index":9612},{"krate":0,"index":9632},{"krate":0,"index":9633},{"krate":0,"index":9643},{"krate":0,"index":9646},{"krate":0,"index":9647},{"krate":0,"index":9661},{"krate":0,"index":9665},{"krate":0,"index":9667},{"krate":0,"index":9681},{"krate":0,"index":9684},{"krate":0,"index":9685},{"krate":0,"index":9706},{"krate":0,"index":9714},{"krate":0,"index":9715},{"krate":0,"index":9726},{"krate":0,"index":9730},{"krate":0,"index":9732},{"krate":0,"index":9747},{"krate":0,"index":9751},{"krate":0,"index":9752},{"krate":0,"index":9761},{"krate":0,"index":9764},{"krate":0,"index":9766},{"krate":0,"index":9776},{"krate":0,"index":9778},{"krate":0,"index":9789},{"krate":0,"index":9790},{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1757},{"krate":0,"index":1763}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9545},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":199008,"byte_end":199014,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"Header","qualname":"::binary_parser::Header","value":"Header {  }","parent":null,"children":[{"krate":0,"index":9546},{"krate":0,"index":9547},{"krate":0,"index":9548}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"br(magic = b\"DIDL\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":198974,"byte_end":198996,"line_start":25,"line_end":25,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":9764},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":201234,"byte_end":201243,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"BoolValue","qualname":"::binary_parser::BoolValue","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9775},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":201357,"byte_end":201365,"line_start":112,"line_end":112,"column_start":5,"column_end":13},"name":"0","qualname":"::binary_parser::BoolValue::0","value":"bool","parent":{"krate":0,"index":9764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"br(try_map = | x : u8 | match x\n     { 0u8 => Ok(false), | 1u8 => Ok(true), | _ => Err(\"Expect 00 or 01\") })","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":201249,"byte_end":201352,"line_start":111,"line_end":111,"column_start":5,"column_end":108}}]},{"kind":"Struct","id":{"krate":0,"index":9776},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":201400,"byte_end":201403,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"Len","qualname":"::binary_parser::Len","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9788},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":201515,"byte_end":201524,"line_start":117,"line_end":117,"column_start":5,"column_end":14},"name":"0","qualname":"::binary_parser::Len::0","value":"usize","parent":{"krate":0,"index":9776},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"br(parse_with = read_leb, try_map = | x : u64 |\n     x.try_into().map_err(| _ | \"length out of usize range\"))","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":201409,"byte_end":201510,"line_start":116,"line_end":116,"column_start":5,"column_end":106}}]},{"kind":"Struct","id":{"krate":0,"index":9789},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":201559,"byte_end":201573,"line_start":120,"line_end":120,"column_start":12,"column_end":26},"name":"PrincipalBytes","qualname":"::binary_parser::PrincipalBytes","value":"PrincipalBytes { flag, len, inner }","parent":null,"children":[{"krate":0,"index":9805},{"krate":0,"index":9806},{"krate":0,"index":9807}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9805},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":201649,"byte_end":201653,"line_start":122,"line_end":122,"column_start":9,"column_end":13},"name":"flag","qualname":"::binary_parser::PrincipalBytes::flag","value":"u8","parent":{"krate":0,"index":9789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"br(assert(flag == 1u8, \"Opaque reference not supported\"))","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":201580,"byte_end":201640,"line_start":121,"line_end":121,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":9806},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":201700,"byte_end":201703,"line_start":124,"line_end":124,"column_start":9,"column_end":12},"name":"len","qualname":"::binary_parser::PrincipalBytes::len","value":"u64","parent":{"krate":0,"index":9789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"br(parse_with = read_leb)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":201663,"byte_end":201691,"line_start":123,"line_end":123,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":9807},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":201784,"byte_end":201789,"line_start":126,"line_end":126,"column_start":9,"column_end":14},"name":"inner","qualname":"::binary_parser::PrincipalBytes::inner","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":9789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"br(count = len, parse_with = binread :: helpers :: read_bytes)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":201714,"byte_end":201775,"line_start":125,"line_end":125,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":206010,"byte_end":206018,"line_start":249,"line_end":249,"column_start":12,"column_end":20},"name":"to_types","qualname":"<Header>::to_types","value":"pub fn to_types(&Self) -> Result<(TypeEnv, Vec<Type>)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1766},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","parent":null,"children":[{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1771},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1782},{"krate":0,"index":1785},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1801},{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1807},{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1814},{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1821},{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1831},{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1838},{"krate":0,"index":1841},{"krate":0,"index":1844},{"krate":0,"index":1847},{"krate":0,"index":1850},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1876},{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":9841},{"krate":0,"index":9856},{"krate":0,"index":1963},{"krate":0,"index":1968},{"krate":0,"index":1972},{"krate":0,"index":1980},{"krate":0,"index":1991},{"krate":0,"index":1998}],"decl_id":null,"docs":" Deserialize Candid binary format to Rust data structures\n","sig":null,"attributes":[{"value":"/ Deserialize Candid binary format to Rust data structures","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":206460,"byte_end":206520,"line_start":1,"line_end":1,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1847},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":207071,"byte_end":207085,"line_start":19,"line_end":19,"column_start":12,"column_end":26},"name":"IDLDeserialize","qualname":"::de::IDLDeserialize","value":"IDLDeserialize {  }","parent":null,"children":[{"krate":0,"index":1849}],"decl_id":null,"docs":" Use this struct to deserialize a sequence of Rust values (heterogeneous) from IDL binary message.\n","sig":null,"attributes":[{"value":"/ Use this struct to deserialize a sequence of Rust values (heterogeneous) from IDL binary message.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":206958,"byte_end":207059,"line_start":18,"line_end":18,"column_start":1,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":1852},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":207224,"byte_end":207227,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<IDLDeserialize>::new","value":"pub fn new(&'de [u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new deserializer with IDL binary message.\n","sig":null,"attributes":[{"value":"/ Create a new deserializer with IDL binary message.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":207158,"byte_end":207212,"line_start":23,"line_end":23,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1854},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":207500,"byte_end":207509,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"get_value","qualname":"<IDLDeserialize>::get_value","value":"pub fn get_value<T>(&mut Self) -> Result<T> where T: de::Deserialize +\nCandidType","parent":null,"children":[],"decl_id":null,"docs":" Deserialize one value from deserializer.\n","sig":null,"attributes":[{"value":"/ Deserialize one value from deserializer.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":207444,"byte_end":207488,"line_start":29,"line_end":29,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1856},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":207696,"byte_end":207715,"line_start":37,"line_end":37,"column_start":12,"column_end":31},"name":"get_value_with_type","qualname":"<IDLDeserialize>::get_value_with_type","value":"pub fn get_value_with_type(&mut Self, &TypeEnv, &Type)\n-> Result<crate::parser::value::IDLValue>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1863},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":209680,"byte_end":209687,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"is_done","qualname":"<IDLDeserialize>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if we finish deserializing all values.\n","sig":null,"attributes":[{"value":"/ Check if we finish deserializing all values.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":209620,"byte_end":209668,"line_start":92,"line_end":92,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1864},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":209821,"byte_end":209825,"line_start":97,"line_end":97,"column_start":12,"column_end":16},"name":"done","qualname":"<IDLDeserialize>::done","value":"pub fn done(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Return error if there are unprocessed bytes in the input.\n","sig":null,"attributes":[{"value":"/ Return error if there are unprocessed bytes in the input.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":209748,"byte_end":209809,"line_start":96,"line_end":96,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":2009},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","parent":null,"children":[{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2014},{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2021},{"krate":0,"index":2024},{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2031},{"krate":0,"index":2034},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2041},{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2048},{"krate":0,"index":2051},{"krate":0,"index":2054},{"krate":0,"index":2057},{"krate":0,"index":9858},{"krate":0,"index":9861},{"krate":0,"index":2060},{"krate":0,"index":9863},{"krate":0,"index":9865},{"krate":0,"index":2078},{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":2105},{"krate":0,"index":2108},{"krate":0,"index":9877},{"krate":0,"index":9883},{"krate":0,"index":2117}],"decl_id":null,"docs":" Serialize a Rust data structure to Candid binary format\n","sig":null,"attributes":[{"value":"/ Serialize a Rust data structure to Candid binary format","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":239204,"byte_end":239263,"line_start":1,"line_end":1,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":9858},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":239736,"byte_end":239746,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"IDLBuilder","qualname":"::ser::IDLBuilder","value":"IDLBuilder {  }","parent":null,"children":[{"krate":0,"index":9859},{"krate":0,"index":9860}],"decl_id":null,"docs":" Use this struct to serialize a sequence of Rust values (heterogeneous) to IDL binary message.\n","sig":null,"attributes":[{"value":"/ Use this struct to serialize a sequence of Rust values (heterogeneous) to IDL binary message.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":239608,"byte_end":239705,"line_start":13,"line_end":13,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":239842,"byte_end":239845,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<IDLBuilder>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":240278,"byte_end":240281,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"arg","qualname":"<IDLBuilder>::arg","value":"pub fn arg<'a, T: types::CandidType>(&'a mut Self, &T) -> Result<&'a mut Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":240488,"byte_end":240497,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"value_arg","qualname":"<IDLBuilder>::value_arg","value":"pub fn value_arg<'a>(&'a mut Self, &IDLValue) -> Result<&'a mut Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":240942,"byte_end":240961,"line_start":44,"line_end":44,"column_start":12,"column_end":31},"name":"value_arg_with_type","qualname":"<IDLBuilder>::value_arg_with_type","value":"pub fn value_arg_with_type<'a>(&'a mut Self, &IDLValue, &TypeEnv, &Type)\n-> Result<&'a mut Self>","parent":null,"children":[],"decl_id":null,"docs":" Annotate IDLValue with (TypeEnv, Type). Note that the TypeEnv will be added to the serializer state.\n If the Type can already be resolved by previous TypeEnvs, you don't need to pass TypeEnv again.\n","sig":null,"attributes":[{"value":"/ Annotate IDLValue with (TypeEnv, Type). Note that the TypeEnv will be added to the serializer state.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":240722,"byte_end":240826,"line_start":42,"line_end":42,"column_start":5,"column_end":109}},{"value":"/ If the Type can already be resolved by previous TypeEnvs, you don't need to pass TypeEnv again.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":240831,"byte_end":240930,"line_start":43,"line_end":43,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":241338,"byte_end":241347,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"serialize","qualname":"<IDLBuilder>::serialize","value":"pub fn serialize<W: io::Write>(&mut Self, W) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":241619,"byte_end":241635,"line_start":64,"line_end":64,"column_start":12,"column_end":28},"name":"serialize_to_vec","qualname":"<IDLBuilder>::serialize_to_vec","value":"pub fn serialize_to_vec(&mut Self) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9863},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":241844,"byte_end":241859,"line_start":73,"line_end":73,"column_start":12,"column_end":27},"name":"ValueSerializer","qualname":"::ser::ValueSerializer","value":"ValueSerializer {  }","parent":null,"children":[{"krate":0,"index":9864}],"decl_id":null,"docs":" A structure for serializing Rust values to IDL.\n","sig":null,"attributes":[{"value":"/ A structure for serializing Rust values to IDL.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":241762,"byte_end":241813,"line_start":71,"line_end":71,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":241971,"byte_end":241974,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"new","qualname":"<ValueSerializer>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new IDL serializer.\n","sig":null,"attributes":[{"value":"/ Creates a new IDL serializer.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":241912,"byte_end":241945,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":241950,"byte_end":241959,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":242050,"byte_end":242060,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"get_result","qualname":"<ValueSerializer>::get_result","value":"pub fn get_result(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2105},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":245342,"byte_end":245350,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"Compound","qualname":"::ser::Compound","value":"Compound {  }","parent":null,"children":[{"krate":0,"index":2107}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9877},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":245881,"byte_end":245894,"line_start":211,"line_end":211,"column_start":12,"column_end":25},"name":"TypeSerialize","qualname":"::ser::TypeSerialize","value":"TypeSerialize {  }","parent":null,"children":[{"krate":0,"index":9878},{"krate":0,"index":9879},{"krate":0,"index":9880},{"krate":0,"index":9881},{"krate":0,"index":9882}],"decl_id":null,"docs":" A structure for serializing Rust values to IDL types.\n","sig":null,"attributes":[{"value":"/ A structure for serializing Rust values to IDL types.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":245793,"byte_end":245850,"line_start":209,"line_end":209,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":246070,"byte_end":246073,"line_start":221,"line_end":221,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeSerialize>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":246049,"byte_end":246058,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":246306,"byte_end":246316,"line_start":230,"line_end":230,"column_start":12,"column_end":22},"name":"get_result","qualname":"<TypeSerialize>::get_result","value":"pub fn get_result(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2131},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::utils","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","parent":null,"children":[{"krate":0,"index":2132},{"krate":0,"index":2135},{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2142},{"krate":0,"index":2145},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2153},{"krate":0,"index":2156},{"krate":0,"index":2159},{"krate":0,"index":2161},{"krate":0,"index":2163},{"krate":0,"index":2166},{"krate":0,"index":2169},{"krate":0,"index":2171},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":9885},{"krate":0,"index":9889},{"krate":0,"index":9894},{"krate":0,"index":9900},{"krate":0,"index":9907},{"krate":0,"index":9915},{"krate":0,"index":9924},{"krate":0,"index":9934},{"krate":0,"index":9945},{"krate":0,"index":9957},{"krate":0,"index":9970},{"krate":0,"index":9984},{"krate":0,"index":9999},{"krate":0,"index":10015},{"krate":0,"index":10032},{"krate":0,"index":10050},{"krate":0,"index":10069},{"krate":0,"index":10072},{"krate":0,"index":10076},{"krate":0,"index":10081},{"krate":0,"index":10087},{"krate":0,"index":10094},{"krate":0,"index":10102},{"krate":0,"index":10111},{"krate":0,"index":10121},{"krate":0,"index":10132},{"krate":0,"index":10144},{"krate":0,"index":10157},{"krate":0,"index":10171},{"krate":0,"index":10186},{"krate":0,"index":10202},{"krate":0,"index":10219}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2150},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255386,"byte_end":255397,"line_start":56,"line_end":56,"column_start":8,"column_end":19},"name":"decode_args","qualname":"::utils::decode_args","value":"pub fn decode_args<'a, Tuple>(&'a [u8]) -> Result<Tuple> where\nTuple: ArgumentDecoder","parent":null,"children":[],"decl_id":null,"docs":" Decode a series of arguments, represented as a tuple. There is a maximum of 16 arguments\n supported.","sig":null,"attributes":[{"value":"/ Decode a series of arguments, represented as a tuple. There is a maximum of 16 arguments","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":254930,"byte_end":255022,"line_start":40,"line_end":40,"column_start":1,"column_end":93}},{"value":"/ supported.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255023,"byte_end":255037,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255038,"byte_end":255041,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255042,"byte_end":255054,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255055,"byte_end":255058,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255059,"byte_end":255066,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # use candid::Encode;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255067,"byte_end":255092,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/ # use candid::decode_args;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255093,"byte_end":255123,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ let golden1 = 123u64;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255124,"byte_end":255149,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ let golden2 = \"456\";","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255150,"byte_end":255174,"line_start":49,"line_end":49,"column_start":1,"column_end":25}},{"value":"/ let bytes = Encode!(&golden1, &golden2).unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255175,"byte_end":255228,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/ let (value1, value2): (u64, String) = decode_args(&bytes).unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255229,"byte_end":255300,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255301,"byte_end":255304,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(golden1, value1);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255305,"byte_end":255337,"line_start":53,"line_end":53,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(golden2, value2);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255338,"byte_end":255370,"line_start":54,"line_end":54,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255371,"byte_end":255378,"line_start":55,"line_end":55,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2153},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255897,"byte_end":255907,"line_start":79,"line_end":79,"column_start":8,"column_end":18},"name":"decode_one","qualname":"::utils::decode_one","value":"pub fn decode_one<'a, T>(&'a [u8]) -> Result<T> where T: Deserialize +\nCandidType","parent":null,"children":[],"decl_id":null,"docs":" Decode a single argument.","sig":null,"attributes":[{"value":"/ Decode a single argument.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255609,"byte_end":255638,"line_start":66,"line_end":66,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255639,"byte_end":255642,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255643,"byte_end":255655,"line_start":68,"line_end":68,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255656,"byte_end":255659,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255660,"byte_end":255667,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ # use candid::Encode;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255668,"byte_end":255693,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/ # use candid::decode_one;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255694,"byte_end":255723,"line_start":72,"line_end":72,"column_start":1,"column_end":30}},{"value":"/ let golden1 = 123u64;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255724,"byte_end":255749,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/ let bytes = Encode!(&golden1).unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255750,"byte_end":255793,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/ let value1: u64 = decode_one(&bytes).unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255794,"byte_end":255844,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255845,"byte_end":255848,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(golden1, value1);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255849,"byte_end":255881,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":255882,"byte_end":255889,"line_start":78,"line_end":78,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2156},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256476,"byte_end":256486,"line_start":101,"line_end":101,"column_start":8,"column_end":18},"name":"write_args","qualname":"::utils::write_args","value":"pub fn write_args<Tuple: ArgumentEncoder,\n                  Writer: std::io::Write>(&mut Writer, Tuple) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Serialize an encoding of a tuple and write it to a `Write` buffer.","sig":null,"attributes":[{"value":"/ Serialize an encoding of a tuple and write it to a `Write` buffer.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256043,"byte_end":256113,"line_start":87,"line_end":87,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256114,"byte_end":256117,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256118,"byte_end":256125,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ # use candid::Decode;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256126,"byte_end":256151,"line_start":90,"line_end":90,"column_start":1,"column_end":26}},{"value":"/ # use candid::write_args;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256152,"byte_end":256181,"line_start":91,"line_end":91,"column_start":1,"column_end":30}},{"value":"/ let golden1 = 1u64;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256182,"byte_end":256205,"line_start":92,"line_end":92,"column_start":1,"column_end":24}},{"value":"/ let golden2 = \"hello\";","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256206,"byte_end":256232,"line_start":93,"line_end":93,"column_start":1,"column_end":27}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256233,"byte_end":256265,"line_start":94,"line_end":94,"column_start":1,"column_end":33}},{"value":"/ write_args(&mut buffer, (golden1, golden2)).unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256266,"byte_end":256323,"line_start":95,"line_end":95,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256324,"byte_end":256327,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let (value1, value2) = Decode!(&buffer, u64, String).unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256328,"byte_end":256394,"line_start":97,"line_end":97,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(golden1, value1);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256395,"byte_end":256427,"line_start":98,"line_end":98,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(golden2, value2);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256428,"byte_end":256460,"line_start":99,"line_end":99,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256461,"byte_end":256468,"line_start":100,"line_end":100,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2159},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257090,"byte_end":257101,"line_start":123,"line_end":123,"column_start":8,"column_end":19},"name":"encode_args","qualname":"::utils::encode_args","value":"pub fn encode_args<Tuple: ArgumentEncoder>(Tuple) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Serialize an encoding of a tuple to a vector of bytes.","sig":null,"attributes":[{"value":"/ Serialize an encoding of a tuple to a vector of bytes.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256700,"byte_end":256758,"line_start":110,"line_end":110,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256759,"byte_end":256762,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256763,"byte_end":256770,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/ # use candid::Decode;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256771,"byte_end":256796,"line_start":113,"line_end":113,"column_start":1,"column_end":26}},{"value":"/ # use candid::encode_args;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256797,"byte_end":256827,"line_start":114,"line_end":114,"column_start":1,"column_end":31}},{"value":"/ let golden1 = 1u64;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256828,"byte_end":256851,"line_start":115,"line_end":115,"column_start":1,"column_end":24}},{"value":"/ let golden2 = \"hello\";","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256852,"byte_end":256878,"line_start":116,"line_end":116,"column_start":1,"column_end":27}},{"value":"/ let buffer = encode_args((golden1, golden2)).unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256879,"byte_end":256937,"line_start":117,"line_end":117,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256938,"byte_end":256941,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ let (value1, value2) = Decode!(&buffer, u64, String).unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":256942,"byte_end":257008,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(golden1, value1);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257009,"byte_end":257041,"line_start":120,"line_end":120,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(golden2, value2);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257042,"byte_end":257074,"line_start":121,"line_end":121,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257075,"byte_end":257082,"line_start":122,"line_end":122,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2161},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257551,"byte_end":257561,"line_start":140,"line_end":140,"column_start":8,"column_end":18},"name":"encode_one","qualname":"::utils::encode_one","value":"pub fn encode_one<T: CandidType>(T) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Serialize a single value to a vector of bytes.","sig":null,"attributes":[{"value":"/ Serialize a single value to a vector of bytes.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257257,"byte_end":257307,"line_start":129,"line_end":129,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257308,"byte_end":257311,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257312,"byte_end":257319,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/ # use candid::Decode;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257320,"byte_end":257345,"line_start":132,"line_end":132,"column_start":1,"column_end":26}},{"value":"/ # use candid::encode_one;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257346,"byte_end":257375,"line_start":133,"line_end":133,"column_start":1,"column_end":30}},{"value":"/ let golden = \"hello\";","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257376,"byte_end":257401,"line_start":134,"line_end":134,"column_start":1,"column_end":26}},{"value":"/ let buffer = encode_one(golden).unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257402,"byte_end":257447,"line_start":135,"line_end":135,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257448,"byte_end":257451,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ let (value) = Decode!(&buffer, String).unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257452,"byte_end":257504,"line_start":137,"line_end":137,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(golden, value);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257505,"byte_end":257535,"line_start":138,"line_end":138,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257536,"byte_end":257543,"line_start":139,"line_end":139,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":2163},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257695,"byte_end":257710,"line_start":145,"line_end":145,"column_start":11,"column_end":26},"name":"ArgumentDecoder","qualname":"::utils::ArgumentDecoder","value":"ArgumentDecoder<'a>: Sized","parent":null,"children":[{"krate":0,"index":2165}],"decl_id":null,"docs":" Allow decoding of any sized argument.\n","sig":null,"attributes":[{"value":"/ Allow decoding of any sized argument.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257643,"byte_end":257684,"line_start":144,"line_end":144,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257821,"byte_end":257827,"line_start":147,"line_end":147,"column_start":8,"column_end":14},"name":"decode","qualname":"::utils::ArgumentDecoder::decode","value":"pub fn decode(&mut IDLDeserialize) -> Result<Self>","parent":{"krate":0,"index":2163},"children":[],"decl_id":null,"docs":" Decodes a value of type [Self], modifying the deserializer (values are consumed).\n","sig":null,"attributes":[{"value":"/ Decodes a value of type [Self], modifying the deserializer (values are consumed).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257728,"byte_end":257813,"line_start":146,"line_end":146,"column_start":5,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":2169},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":258082,"byte_end":258097,"line_start":158,"line_end":158,"column_start":11,"column_end":26},"name":"ArgumentEncoder","qualname":"::utils::ArgumentEncoder","value":"ArgumentEncoder","parent":null,"children":[{"krate":0,"index":2170}],"decl_id":null,"docs":" Allow encoding of any serializable value.\n","sig":null,"attributes":[{"value":"/ Allow encoding of any serializable value.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":258026,"byte_end":258071,"line_start":157,"line_end":157,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2170},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":258146,"byte_end":258152,"line_start":160,"line_end":160,"column_start":8,"column_end":14},"name":"encode","qualname":"::utils::ArgumentEncoder::encode","value":"pub fn encode(Self, &mut IDLBuilder) -> Result<()>","parent":{"krate":0,"index":2169},"children":[],"decl_id":null,"docs":" Encode a value of type [Self].\n","sig":null,"attributes":[{"value":"/ Encode a value of type [Self].","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":258104,"byte_end":258138,"line_start":159,"line_end":159,"column_start":5,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":2191},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/pretty.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pretty","qualname":"::pretty","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/pretty.rs","parent":null,"children":[{"krate":0,"index":2192},{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2199},{"krate":0,"index":2201},{"krate":0,"index":2203},{"krate":0,"index":2206},{"krate":0,"index":2210},{"krate":0,"index":2214},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2195},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/pretty.rs","byte_start":261706,"byte_end":261718,"line_start":3,"line_end":3,"column_start":11,"column_end":23},"name":"INDENT_SPACE","qualname":"::pretty::INDENT_SPACE","value":"isize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2196},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/pretty.rs","byte_start":261741,"byte_end":261751,"line_start":4,"line_end":4,"column_start":11,"column_end":21},"name":"LINE_WIDTH","qualname":"::pretty::LINE_WIDTH","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2199},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/pretty.rs","byte_start":262149,"byte_end":262156,"line_start":19,"line_end":19,"column_start":8,"column_end":15},"name":"enclose","qualname":"::pretty::enclose","value":"pub fn enclose<'a>(&'a str, RcDoc, &'a str) -> RcDoc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2201},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/pretty.rs","byte_start":262519,"byte_end":262532,"line_start":33,"line_end":33,"column_start":8,"column_end":21},"name":"enclose_space","qualname":"::pretty::enclose_space","value":"pub fn enclose_space<'a>(&'a str, RcDoc, &'a str) -> RcDoc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2203},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/pretty.rs","byte_start":262913,"byte_end":262926,"line_start":48,"line_end":48,"column_start":8,"column_end":21},"name":"strict_concat","qualname":"::pretty::strict_concat","value":"pub fn strict_concat<'a, D>(D, &'a str) -> RcDoc where D: Iterator<Item =\nRcDoc>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/pretty.rs","byte_start":262886,"byte_end":262905,"line_start":47,"line_end":47,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2206},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/pretty.rs","byte_start":263199,"byte_end":263205,"line_start":56,"line_end":56,"column_start":8,"column_end":14},"name":"concat","qualname":"::pretty::concat","value":"pub fn concat<'a, D>(D, &'a str) -> RcDoc where D: Iterator<Item = RcDoc> +\nClone","parent":null,"children":[],"decl_id":null,"docs":" Append the separator to each docs items. If it is displayed in a single line, omit the last separator.\n","sig":null,"attributes":[{"value":"/ Append the separator to each docs items. If it is displayed in a single line, omit the last separator.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/pretty.rs","byte_start":263085,"byte_end":263191,"line_start":55,"line_end":55,"column_start":1,"column_end":107}}]},{"kind":"Function","id":{"krate":0,"index":2210},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/pretty.rs","byte_start":263475,"byte_end":263480,"line_start":65,"line_end":65,"column_start":8,"column_end":13},"name":"lines","qualname":"::pretty::lines","value":"pub fn lines<'a, D>(D) -> RcDoc where D: Iterator<Item = RcDoc>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2214},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/pretty.rs","byte_start":263628,"byte_end":263631,"line_start":72,"line_end":72,"column_start":8,"column_end":11},"name":"kwd","qualname":"::pretty::kwd","value":"pub fn kwd<U: std::fmt::Display + ?Sized>(&U) -> RcDoc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2216},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/pretty.rs","byte_start":263742,"byte_end":263745,"line_start":76,"line_end":76,"column_start":8,"column_end":11},"name":"str","qualname":"::pretty::str","value":"pub fn str(&str) -> RcDoc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2217},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/pretty.rs","byte_start":263799,"byte_end":263804,"line_start":80,"line_end":80,"column_start":8,"column_end":13},"name":"ident","qualname":"::pretty::ident","value":"pub fn ident(&str) -> RcDoc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2218},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/pretty.rs","byte_start":263848,"byte_end":263859,"line_start":84,"line_end":84,"column_start":8,"column_end":19},"name":"quote_ident","qualname":"::pretty::quote_ident","value":"pub fn quote_ident(&str) -> RcDoc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2219},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13802,"byte_end":13810,"line_start":340,"line_end":340,"column_start":8,"column_end":16},"name":"idl_hash","qualname":"::idl_hash","value":"pub fn idl_hash(&str) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13785,"byte_end":13794,"line_start":339,"line_end":339,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":26244,"byte_end":26250,"line_start":148,"line_end":148,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":26372,"byte_end":26390,"line_start":152,"line_end":152,"column_start":31,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":26581,"byte_end":26587,"line_start":162,"line_end":162,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":27271,"byte_end":27290,"line_start":187,"line_end":187,"column_start":30,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":69834,"byte_end":69839,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":73775,"byte_end":73780,"line_start":128,"line_end":128,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":73921,"byte_end":73926,"line_start":134,"line_end":134,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":74075,"byte_end":74080,"line_start":140,"line_end":140,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":74206,"byte_end":74211,"line_start":146,"line_end":146,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":74338,"byte_end":74343,"line_start":151,"line_end":151,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":81031,"byte_end":81037,"line_start":59,"line_end":59,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":81508,"byte_end":81512,"line_start":82,"line_end":82,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":81920,"byte_end":81927,"line_start":98,"line_end":98,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":82175,"byte_end":82181,"line_start":110,"line_end":110,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":82890,"byte_end":82897,"line_start":143,"line_end":143,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":83170,"byte_end":83175,"line_start":154,"line_end":154,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":86535,"byte_end":86541,"line_start":263,"line_end":263,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":87467,"byte_end":87470,"line_start":298,"line_end":298,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":88461,"byte_end":88464,"line_start":348,"line_end":348,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":88758,"byte_end":88762,"line_start":363,"line_end":363,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":89042,"byte_end":89049,"line_start":378,"line_end":378,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":91203,"byte_end":91213,"line_start":442,"line_end":442,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":92176,"byte_end":92184,"line_start":476,"line_end":476,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":93349,"byte_end":93355,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":93564,"byte_end":93570,"line_start":25,"line_end":25,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":93859,"byte_end":93867,"line_start":37,"line_end":37,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":96088,"byte_end":96101,"line_start":85,"line_end":85,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99454,"byte_end":99458,"line_start":194,"line_end":194,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":101375,"byte_end":101379,"line_start":251,"line_end":251,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":101640,"byte_end":101645,"line_start":264,"line_end":264,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":101865,"byte_end":101870,"line_start":274,"line_end":274,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":102197,"byte_end":102202,"line_start":285,"line_end":285,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":102320,"byte_end":102325,"line_start":291,"line_end":291,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":102716,"byte_end":102724,"line_start":309,"line_end":309,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":102938,"byte_end":102946,"line_start":318,"line_end":318,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":111436,"byte_end":111439,"line_start":15,"line_end":15,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":111545,"byte_end":111548,"line_start":22,"line_end":22,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":111651,"byte_end":111654,"line_start":29,"line_end":29,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":111790,"byte_end":111796,"line_start":37,"line_end":37,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":111891,"byte_end":111898,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":111993,"byte_end":111999,"line_start":51,"line_end":51,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":112087,"byte_end":112090,"line_start":58,"line_end":58,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":112290,"byte_end":112293,"line_start":66,"line_end":66,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":112517,"byte_end":112520,"line_start":74,"line_end":74,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":112680,"byte_end":112683,"line_start":81,"line_end":81,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":113200,"byte_end":113203,"line_start":102,"line_end":102,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":113378,"byte_end":113381,"line_start":109,"line_end":109,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":113554,"byte_end":113557,"line_start":116,"line_end":116,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":113842,"byte_end":113845,"line_start":131,"line_end":131,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":114141,"byte_end":114144,"line_start":146,"line_end":146,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":114326,"byte_end":114336,"line_start":152,"line_end":152,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":115082,"byte_end":115085,"line_start":172,"line_end":172,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":115267,"byte_end":115277,"line_start":178,"line_end":178,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":115848,"byte_end":115851,"line_start":197,"line_end":197,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":116954,"byte_end":116957,"line_start":238,"line_end":238,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":123483,"byte_end":123486,"line_start":451,"line_end":451,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":123594,"byte_end":123597,"line_start":457,"line_end":457,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":123742,"byte_end":123745,"line_start":465,"line_end":465,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":123909,"byte_end":123912,"line_start":473,"line_end":473,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":124040,"byte_end":124043,"line_start":480,"line_end":480,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1003},{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":124207,"byte_end":124210,"line_start":488,"line_end":488,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":124338,"byte_end":124341,"line_start":495,"line_end":495,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":124505,"byte_end":124508,"line_start":503,"line_end":503,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":124636,"byte_end":124639,"line_start":510,"line_end":510,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1013},{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":124803,"byte_end":124806,"line_start":518,"line_end":518,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":124934,"byte_end":124937,"line_start":525,"line_end":525,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":125101,"byte_end":125104,"line_start":533,"line_end":533,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/principal.rs","byte_start":125306,"byte_end":125315,"line_start":5,"line_end":5,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reference.rs","byte_start":126058,"byte_end":126062,"line_start":19,"line_end":19,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reference.rs","byte_start":126442,"byte_end":126449,"line_start":34,"line_end":34,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1086},{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reference.rs","byte_start":126730,"byte_end":126734,"line_start":46,"line_end":46,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reference.rs","byte_start":126918,"byte_end":126929,"line_start":52,"line_end":52,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reference.rs","byte_start":127875,"byte_end":127882,"line_start":74,"line_end":74,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reference.rs","byte_start":128069,"byte_end":128080,"line_start":80,"line_end":80,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reserved.rs","byte_start":129030,"byte_end":129038,"line_start":12,"line_end":12,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reserved.rs","byte_start":129332,"byte_end":129337,"line_start":27,"line_end":27,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reserved.rs","byte_start":129635,"byte_end":129643,"line_start":42,"line_end":42,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reserved.rs","byte_start":129906,"byte_end":129911,"line_start":53,"line_end":53,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reserved.rs","byte_start":130097,"byte_end":130109,"line_start":59,"line_end":59,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11047063,"byte_end":11047077,"line_start":892,"line_end":892,"column_start":50,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4402},{"krate":0,"index":4403},{"krate":0,"index":4404},{"krate":0,"index":4405},{"krate":0,"index":4406},{"krate":0,"index":4407},{"krate":0,"index":4408},{"krate":0,"index":4409},{"krate":0,"index":4410},{"krate":0,"index":4411},{"krate":0,"index":4412},{"krate":0,"index":4413},{"krate":0,"index":4414},{"krate":0,"index":4415},{"krate":0,"index":4416},{"krate":0,"index":4417},{"krate":0,"index":4418},{"krate":0,"index":4419},{"krate":0,"index":4420},{"krate":0,"index":4421},{"krate":0,"index":4422},{"krate":0,"index":4423},{"krate":0,"index":4424}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Inherent","span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11052408,"byte_end":11052417,"line_start":1053,"line_end":1053,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4430},{"krate":0,"index":4431}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11301289,"byte_end":11301303,"line_start":7499,"line_end":7499,"column_start":50,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5059},{"krate":0,"index":5060},{"krate":0,"index":5061},{"krate":0,"index":5062},{"krate":0,"index":5063},{"krate":0,"index":5064},{"krate":0,"index":5065},{"krate":0,"index":5066},{"krate":0,"index":5067},{"krate":0,"index":5068},{"krate":0,"index":5069},{"krate":0,"index":5070},{"krate":0,"index":5071},{"krate":0,"index":5072},{"krate":0,"index":5073},{"krate":0,"index":5074},{"krate":0,"index":5075},{"krate":0,"index":5076},{"krate":0,"index":5077},{"krate":0,"index":5078},{"krate":0,"index":5079},{"krate":0,"index":5080},{"krate":0,"index":5081}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Inherent","span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11306634,"byte_end":11306644,"line_start":7660,"line_end":7660,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5087},{"krate":0,"index":5088}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11546335,"byte_end":11546349,"line_start":13883,"line_end":13883,"column_start":50,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5716},{"krate":0,"index":5717},{"krate":0,"index":5718},{"krate":0,"index":5719},{"krate":0,"index":5720},{"krate":0,"index":5721},{"krate":0,"index":5722},{"krate":0,"index":5723},{"krate":0,"index":5724},{"krate":0,"index":5725},{"krate":0,"index":5726},{"krate":0,"index":5727},{"krate":0,"index":5728},{"krate":0,"index":5729},{"krate":0,"index":5730},{"krate":0,"index":5731},{"krate":0,"index":5732},{"krate":0,"index":5733},{"krate":0,"index":5734},{"krate":0,"index":5735},{"krate":0,"index":5736},{"krate":0,"index":5737},{"krate":0,"index":5738}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11551683,"byte_end":11551696,"line_start":14044,"line_end":14044,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5744},{"krate":0,"index":5745}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11794969,"byte_end":11794983,"line_start":20358,"line_end":20358,"column_start":50,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":6373},{"krate":0,"index":6374},{"krate":0,"index":6375},{"krate":0,"index":6376},{"krate":0,"index":6377},{"krate":0,"index":6378},{"krate":0,"index":6379},{"krate":0,"index":6380},{"krate":0,"index":6381},{"krate":0,"index":6382},{"krate":0,"index":6383},{"krate":0,"index":6384},{"krate":0,"index":6385},{"krate":0,"index":6386},{"krate":0,"index":6387},{"krate":0,"index":6388},{"krate":0,"index":6389},{"krate":0,"index":6390},{"krate":0,"index":6391},{"krate":0,"index":6392},{"krate":0,"index":6393},{"krate":0,"index":6394},{"krate":0,"index":6395}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Inherent","span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11800311,"byte_end":11800321,"line_start":20519,"line_end":20519,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6401},{"krate":0,"index":6402}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12034488,"byte_end":12034502,"line_start":26600,"line_end":26600,"column_start":50,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7030},{"krate":0,"index":7031},{"krate":0,"index":7032},{"krate":0,"index":7033},{"krate":0,"index":7034},{"krate":0,"index":7035},{"krate":0,"index":7036},{"krate":0,"index":7037},{"krate":0,"index":7038},{"krate":0,"index":7039},{"krate":0,"index":7040},{"krate":0,"index":7041},{"krate":0,"index":7042},{"krate":0,"index":7043},{"krate":0,"index":7044},{"krate":0,"index":7045},{"krate":0,"index":7046},{"krate":0,"index":7047},{"krate":0,"index":7048},{"krate":0,"index":7049},{"krate":0,"index":7050},{"krate":0,"index":7051},{"krate":0,"index":7052}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Inherent","span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12039832,"byte_end":12039841,"line_start":26761,"line_end":26761,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7058},{"krate":0,"index":7059}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12274111,"byte_end":12274125,"line_start":32847,"line_end":32847,"column_start":50,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7687},{"krate":0,"index":7688},{"krate":0,"index":7689},{"krate":0,"index":7690},{"krate":0,"index":7691},{"krate":0,"index":7692},{"krate":0,"index":7693},{"krate":0,"index":7694},{"krate":0,"index":7695},{"krate":0,"index":7696},{"krate":0,"index":7697},{"krate":0,"index":7698},{"krate":0,"index":7699},{"krate":0,"index":7700},{"krate":0,"index":7701},{"krate":0,"index":7702},{"krate":0,"index":7703},{"krate":0,"index":7704},{"krate":0,"index":7705},{"krate":0,"index":7706},{"krate":0,"index":7707},{"krate":0,"index":7708},{"krate":0,"index":7709}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Inherent","span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12279457,"byte_end":12279467,"line_start":33008,"line_end":33008,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7715},{"krate":0,"index":7716}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12595947,"byte_end":12595953,"line_start":44047,"line_end":44047,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8497}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":133232,"byte_end":133237,"line_start":110,"line_end":110,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1248}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":133660,"byte_end":133669,"line_start":128,"line_end":128,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":134077,"byte_end":134089,"line_start":146,"line_end":146,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":134362,"byte_end":134374,"line_start":155,"line_end":155,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":134889,"byte_end":134898,"line_start":176,"line_end":176,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141679,"byte_end":141687,"line_start":82,"line_end":82,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":142264,"byte_end":142271,"line_start":117,"line_end":117,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1290},{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":142502,"byte_end":142509,"line_start":125,"line_end":125,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1293},{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":142736,"byte_end":142744,"line_start":133,"line_end":133,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":143225,"byte_end":143232,"line_start":156,"line_end":156,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":143901,"byte_end":143904,"line_start":177,"line_end":177,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":144155,"byte_end":144162,"line_start":186,"line_end":186,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":144388,"byte_end":144395,"line_start":196,"line_end":196,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1310}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":145340,"byte_end":145348,"line_start":217,"line_end":217,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":145692,"byte_end":145701,"line_start":229,"line_end":229,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1315}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148602,"byte_end":148614,"line_start":44,"line_end":44,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1373}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148874,"byte_end":148881,"line_start":61,"line_end":61,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":151732,"byte_end":151739,"line_start":139,"line_end":139,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":151984,"byte_end":151992,"line_start":147,"line_end":147,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":152214,"byte_end":152222,"line_start":155,"line_end":155,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1390},{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":161288,"byte_end":161296,"line_start":349,"line_end":349,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":164348,"byte_end":164356,"line_start":425,"line_end":425,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":164540,"byte_end":164555,"line_start":432,"line_end":432,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":9498},{"krate":0,"index":9500},{"krate":0,"index":9502},{"krate":0,"index":9504},{"krate":0,"index":9506},{"krate":0,"index":9508},{"krate":0,"index":9510},{"krate":0,"index":9512},{"krate":0,"index":9514},{"krate":0,"index":9516},{"krate":0,"index":9518},{"krate":0,"index":1420},{"krate":0,"index":1428},{"krate":0,"index":1430},{"krate":0,"index":1432},{"krate":0,"index":1434},{"krate":0,"index":1436},{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":170691,"byte_end":170698,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1493},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1500},{"krate":0,"index":1502},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1508},{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":175027,"byte_end":175034,"line_start":143,"line_end":143,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/pretty.rs","byte_start":184411,"byte_end":184418,"line_start":12,"line_end":12,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1561}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/pretty.rs","byte_start":184565,"byte_end":184573,"line_start":18,"line_end":18,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/pretty.rs","byte_start":184796,"byte_end":184803,"line_start":28,"line_end":28,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1565}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/pretty.rs","byte_start":186149,"byte_end":186157,"line_start":80,"line_end":80,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1571}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/pretty.rs","byte_start":189108,"byte_end":189116,"line_start":153,"line_end":153,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1574}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192677,"byte_end":192683,"line_start":40,"line_end":40,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192849,"byte_end":192854,"line_start":50,"line_end":50,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1661},{"krate":0,"index":1662}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":193533,"byte_end":193537,"line_start":68,"line_end":68,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1664},{"krate":0,"index":1665}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":193760,"byte_end":193768,"line_start":76,"line_end":76,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1667}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":201876,"byte_end":201885,"line_start":132,"line_end":132,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1753}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":202809,"byte_end":202817,"line_start":163,"line_end":163,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1755}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":205058,"byte_end":205063,"line_start":222,"line_end":222,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":205990,"byte_end":205996,"line_start":248,"line_end":248,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":207132,"byte_end":207146,"line_start":22,"line_end":22,"column_start":11,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1852},{"krate":0,"index":1854},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1863},{"krate":0,"index":1864}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":211225,"byte_end":211237,"line_start":146,"line_end":146,"column_start":11,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1891},{"krate":0,"index":1894},{"krate":0,"index":1897},{"krate":0,"index":1900},{"krate":0,"index":1903},{"krate":0,"index":1906}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":232495,"byte_end":232503,"line_start":726,"line_end":726,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1971}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":232658,"byte_end":232666,"line_start":732,"line_end":732,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1975},{"krate":0,"index":1976}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":233880,"byte_end":233888,"line_start":769,"line_end":769,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1983},{"krate":0,"index":1984},{"krate":0,"index":1989}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":237192,"byte_end":237200,"line_start":848,"line_end":848,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":238437,"byte_end":238445,"line_start":881,"line_end":881,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":2005},{"krate":0,"index":2007}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":239818,"byte_end":239828,"line_start":20,"line_end":20,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2065},{"krate":0,"index":2070},{"krate":0,"index":2075},{"krate":0,"index":2077}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":241890,"byte_end":241905,"line_start":77,"line_end":77,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":245422,"byte_end":245430,"line_start":194,"line_end":194,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2113}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":246029,"byte_end":246042,"line_start":219,"line_end":219,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2130}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12902,"byte_end":12909,"line_start":304,"line_end":304,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":16}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/mod.rs","byte_start":14427,"byte_end":14431,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":39}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12952,"byte_end":12960,"line_start":307,"line_end":307,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":181}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/mod.rs","byte_start":34273,"byte_end":34281,"line_start":4,"line_end":4,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":182}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/mod.rs","byte_start":34291,"byte_end":34297,"line_start":5,"line_end":5,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":204}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/mod.rs","byte_start":34307,"byte_end":34317,"line_start":6,"line_end":6,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":249}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/mod.rs","byte_start":34327,"byte_end":34333,"line_start":7,"line_end":7,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":365}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/bindings/mod.rs","byte_start":34343,"byte_end":34353,"line_start":8,"line_end":8,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":410}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":12971,"byte_end":12976,"line_start":309,"line_end":309,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":461}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13046,"byte_end":13051,"line_start":312,"line_end":312,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":544}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":76220,"byte_end":76228,"line_start":11,"line_end":11,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":698}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":76238,"byte_end":76245,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":783}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":76331,"byte_end":76337,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":848}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":76347,"byte_end":76356,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1022}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":76366,"byte_end":76375,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1044}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":76385,"byte_end":76393,"line_start":19,"line_end":19,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1113}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13224,"byte_end":13230,"line_start":321,"line_end":321,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1234}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/mod.rs","byte_start":130713,"byte_end":130720,"line_start":5,"line_end":5,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1235}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/mod.rs","byte_start":130731,"byte_end":130736,"line_start":7,"line_end":7,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1236}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/mod.rs","byte_start":130746,"byte_end":130751,"line_start":8,"line_end":8,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1276}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/mod.rs","byte_start":130761,"byte_end":130766,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1322}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/mod.rs","byte_start":130777,"byte_end":130783,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1447}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/mod.rs","byte_start":130839,"byte_end":130845,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1535}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/mod.rs","byte_start":130898,"byte_end":130902,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1586}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13383,"byte_end":13396,"line_start":326,"line_end":326,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":1689}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13406,"byte_end":13408,"line_start":327,"line_end":327,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1766}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13418,"byte_end":13421,"line_start":328,"line_end":328,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2009}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13432,"byte_end":13437,"line_start":330,"line_end":330,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2131}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/lib.rs","byte_start":13526,"byte_end":13532,"line_start":332,"line_end":332,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2191}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":26244,"byte_end":26250,"line_start":148,"line_end":148,"column_start":18,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":93},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":26372,"byte_end":26390,"line_start":152,"line_end":152,"column_start":31,"column_end":49},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2220},"to":{"krate":0,"index":86}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":26581,"byte_end":26587,"line_start":162,"line_end":162,"column_start":6,"column_end":12},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":93},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/codegen/rust.rs","byte_start":27271,"byte_end":27290,"line_start":187,"line_end":187,"column_start":30,"column_end":49},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":106},"to":{"krate":0,"index":144}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":69834,"byte_end":69839,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":73775,"byte_end":73780,"line_start":128,"line_end":128,"column_start":21,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2223},"to":{"krate":19,"index":9223}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":73921,"byte_end":73926,"line_start":134,"line_end":134,"column_start":20,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2223},"to":{"krate":19,"index":8610}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":74075,"byte_end":74080,"line_start":140,"line_end":140,"column_start":26,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2223},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":74206,"byte_end":74211,"line_start":146,"line_end":146,"column_start":31,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2223},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/error.rs","byte_start":74338,"byte_end":74343,"line_start":151,"line_end":151,"column_start":28,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2223},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":81031,"byte_end":81037,"line_start":59,"line_end":59,"column_start":21,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":81508,"byte_end":81512,"line_start":82,"line_end":82,"column_start":32,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":1,"index":6843},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":81920,"byte_end":81927,"line_start":98,"line_end":98,"column_start":32,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":1,"index":6736},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":82175,"byte_end":82181,"line_start":110,"line_end":110,"column_start":31,"column_end":37},"kind":{"Impl":{"id":33}},"from":{"krate":2,"index":36703},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":82890,"byte_end":82897,"line_start":143,"line_end":143,"column_start":34,"column_end":41},"kind":{"Impl":{"id":34}},"from":{"krate":47,"index":443},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":83170,"byte_end":83175,"line_start":154,"line_end":154,"column_start":34,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":47,"index":436},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":86535,"byte_end":86541,"line_start":263,"line_end":263,"column_start":27,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":2,"index":36829},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":87467,"byte_end":87470,"line_start":298,"line_end":298,"column_start":24,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":88461,"byte_end":88464,"line_start":348,"line_end":348,"column_start":41,"column_end":44},"kind":{"Impl":{"id":38}},"from":{"krate":5,"index":546},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":88758,"byte_end":88762,"line_start":363,"line_end":363,"column_start":35,"column_end":39},"kind":{"Impl":{"id":39}},"from":{"krate":2,"index":4151},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":89042,"byte_end":89049,"line_start":378,"line_end":378,"column_start":35,"column_end":42},"kind":{"Impl":{"id":40}},"from":{"krate":2,"index":4216},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":91203,"byte_end":91213,"line_start":442,"line_end":442,"column_start":32,"column_end":42},"kind":{"Impl":{"id":41}},"from":{"krate":1,"index":11505},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/impls.rs","byte_start":92176,"byte_end":92184,"line_start":476,"line_end":476,"column_start":32,"column_end":40},"kind":{"Impl":{"id":42}},"from":{"krate":2,"index":39308},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":93349,"byte_end":93355,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":93564,"byte_end":93570,"line_start":25,"line_end":25,"column_start":28,"column_end":34},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2754},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":93859,"byte_end":93867,"line_start":37,"line_end":37,"column_start":6,"column_end":14},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":96088,"byte_end":96101,"line_start":85,"line_end":85,"column_start":6,"column_end":19},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":99454,"byte_end":99458,"line_start":194,"line_end":194,"column_start":6,"column_end":10},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":101375,"byte_end":101379,"line_start":251,"line_end":251,"column_start":23,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2780},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":101640,"byte_end":101645,"line_start":264,"line_end":264,"column_start":6,"column_end":11},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":101865,"byte_end":101870,"line_start":274,"line_end":274,"column_start":28,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2861},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":102197,"byte_end":102202,"line_start":285,"line_end":285,"column_start":20,"column_end":25},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2861},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":102320,"byte_end":102325,"line_start":291,"line_end":291,"column_start":26,"column_end":31},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2861},"to":{"krate":2,"index":9508}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":102716,"byte_end":102724,"line_start":309,"line_end":309,"column_start":23,"column_end":31},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2895},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/internal.rs","byte_start":102938,"byte_end":102946,"line_start":318,"line_end":318,"column_start":6,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":111436,"byte_end":111439,"line_start":15,"line_end":15,"column_start":23,"column_end":26},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3034},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":111545,"byte_end":111548,"line_start":22,"line_end":22,"column_start":24,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3057},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":111651,"byte_end":111654,"line_start":29,"line_end":29,"column_start":20,"column_end":23},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3034},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":111790,"byte_end":111796,"line_start":37,"line_end":37,"column_start":20,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":54,"index":963},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":111891,"byte_end":111898,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"kind":{"Impl":{"id":61}},"from":{"krate":54,"index":1979},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":111993,"byte_end":111999,"line_start":51,"line_end":51,"column_start":20,"column_end":26},"kind":{"Impl":{"id":62}},"from":{"krate":54,"index":963},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":112087,"byte_end":112090,"line_start":58,"line_end":58,"column_start":6,"column_end":9},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":112290,"byte_end":112293,"line_start":66,"line_end":66,"column_start":6,"column_end":9},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":112517,"byte_end":112520,"line_start":74,"line_end":74,"column_start":28,"column_end":31},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3034},"to":{"krate":2,"index":11828}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":112680,"byte_end":112683,"line_start":81,"line_end":81,"column_start":28,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3057},"to":{"krate":2,"index":11828}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":113200,"byte_end":113203,"line_start":102,"line_end":102,"column_start":23,"column_end":26},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3034},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":113378,"byte_end":113381,"line_start":109,"line_end":109,"column_start":23,"column_end":26},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3057},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":113554,"byte_end":113557,"line_start":116,"line_end":116,"column_start":21,"column_end":24},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3034},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":113842,"byte_end":113845,"line_start":131,"line_end":131,"column_start":21,"column_end":24},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3057},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":114141,"byte_end":114144,"line_start":146,"line_end":146,"column_start":32,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3034},"to":{"krate":19,"index":1538}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":114326,"byte_end":114336,"line_start":152,"line_end":152,"column_start":36,"column_end":46},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":935},"to":{"krate":19,"index":1622}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":115082,"byte_end":115085,"line_start":172,"line_end":172,"column_start":32,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3057},"to":{"krate":19,"index":1538}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":115267,"byte_end":115277,"line_start":178,"line_end":178,"column_start":36,"column_end":46},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":947},"to":{"krate":19,"index":1622}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":115848,"byte_end":115851,"line_start":197,"line_end":197,"column_start":6,"column_end":9},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":116954,"byte_end":116957,"line_start":238,"line_end":238,"column_start":6,"column_end":9},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":123483,"byte_end":123486,"line_start":451,"line_end":451,"column_start":20,"column_end":23},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":3057},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":123594,"byte_end":123597,"line_start":457,"line_end":457,"column_start":25,"column_end":28},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":3057},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":123742,"byte_end":123745,"line_start":465,"line_end":465,"column_start":29,"column_end":32},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":3057},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":123909,"byte_end":123912,"line_start":473,"line_end":473,"column_start":35,"column_end":38},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":3057},"to":{"krate":2,"index":3087}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":124040,"byte_end":124043,"line_start":480,"line_end":480,"column_start":29,"column_end":32},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":3057},"to":{"krate":2,"index":3061}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":124207,"byte_end":124210,"line_start":488,"line_end":488,"column_start":35,"column_end":38},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":3057},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":124338,"byte_end":124341,"line_start":495,"line_end":495,"column_start":29,"column_end":32},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":3057},"to":{"krate":2,"index":3066}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":124505,"byte_end":124508,"line_start":503,"line_end":503,"column_start":35,"column_end":38},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":3057},"to":{"krate":2,"index":3095}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":124636,"byte_end":124639,"line_start":510,"line_end":510,"column_start":29,"column_end":32},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":3057},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":124803,"byte_end":124806,"line_start":518,"line_end":518,"column_start":35,"column_end":38},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":3057},"to":{"krate":2,"index":3099}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":124934,"byte_end":124937,"line_start":525,"line_end":525,"column_start":29,"column_end":32},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":3057},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/number.rs","byte_start":125101,"byte_end":125104,"line_start":533,"line_end":533,"column_start":35,"column_end":38},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":3057},"to":{"krate":2,"index":3103}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/principal.rs","byte_start":125306,"byte_end":125315,"line_start":5,"line_end":5,"column_start":21,"column_end":30},"kind":{"Impl":{"id":469}},"from":{"krate":38,"index":390},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reference.rs","byte_start":126058,"byte_end":126062,"line_start":19,"line_end":19,"column_start":21,"column_end":25},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":4030},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reference.rs","byte_start":126442,"byte_end":126449,"line_start":34,"line_end":34,"column_start":21,"column_end":28},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":4041},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reference.rs","byte_start":126730,"byte_end":126734,"line_start":46,"line_end":46,"column_start":32,"column_end":36},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":4030},"to":{"krate":19,"index":1538}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reference.rs","byte_start":126918,"byte_end":126929,"line_start":52,"line_end":52,"column_start":36,"column_end":47},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":1093},"to":{"krate":19,"index":1622}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reference.rs","byte_start":127875,"byte_end":127882,"line_start":74,"line_end":74,"column_start":32,"column_end":39},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":4041},"to":{"krate":19,"index":1538}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reference.rs","byte_start":128069,"byte_end":128080,"line_start":80,"line_end":80,"column_start":36,"column_end":47},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":1105},"to":{"krate":19,"index":1622}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reserved.rs","byte_start":129030,"byte_end":129038,"line_start":12,"line_end":12,"column_start":21,"column_end":29},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":4051},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reserved.rs","byte_start":129332,"byte_end":129337,"line_start":27,"line_end":27,"column_start":21,"column_end":26},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":4060},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reserved.rs","byte_start":129635,"byte_end":129643,"line_start":42,"line_end":42,"column_start":32,"column_end":40},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":4051},"to":{"krate":19,"index":1538}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reserved.rs","byte_start":129906,"byte_end":129911,"line_start":53,"line_end":53,"column_start":32,"column_end":37},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":4060},"to":{"krate":19,"index":1538}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/reserved.rs","byte_start":130097,"byte_end":130109,"line_start":59,"line_end":59,"column_start":36,"column_end":48},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":1162},"to":{"krate":19,"index":1622}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/types/mod.rs","byte_start":77174,"byte_end":77179,"line_start":48,"line_end":48,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":1174}},{"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11047063,"byte_end":11047077,"line_start":892,"line_end":892,"column_start":50,"column_end":64},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":4399},"to":{"krate":29,"index":77}},{"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11052408,"byte_end":11052417,"line_start":1053,"line_end":1053,"column_start":10,"column_end":19},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":4427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11301289,"byte_end":11301303,"line_start":7499,"line_end":7499,"column_start":50,"column_end":64},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":5056},"to":{"krate":29,"index":77}},{"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11306634,"byte_end":11306644,"line_start":7660,"line_end":7660,"column_start":10,"column_end":20},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":5084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11546335,"byte_end":11546349,"line_start":13883,"line_end":13883,"column_start":50,"column_end":64},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":5713},"to":{"krate":29,"index":77}},{"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11551683,"byte_end":11551696,"line_start":14044,"line_end":14044,"column_start":10,"column_end":23},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":5741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11794969,"byte_end":11794983,"line_start":20358,"line_end":20358,"column_start":50,"column_end":64},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":6370},"to":{"krate":29,"index":77}},{"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":11800311,"byte_end":11800321,"line_start":20519,"line_end":20519,"column_start":10,"column_end":20},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":6398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12034488,"byte_end":12034502,"line_start":26600,"line_end":26600,"column_start":50,"column_end":64},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":7027},"to":{"krate":29,"index":77}},{"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12039832,"byte_end":12039841,"line_start":26761,"line_end":26761,"column_start":10,"column_end":19},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":7055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12274111,"byte_end":12274125,"line_start":32847,"line_end":32847,"column_start":50,"column_end":64},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":7684},"to":{"krate":29,"index":77}},{"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12279457,"byte_end":12279467,"line_start":33008,"line_end":33008,"column_start":10,"column_end":20},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":7712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/rust-workplace/cycle_mail/heartbeat/target/rls/debug/build/candid-59f027ec24c54575/out/parser/grammar.rs","byte_start":12595947,"byte_end":12595953,"line_start":44047,"line_end":44047,"column_start":25,"column_end":31},"kind":{"Impl":{"id":493}},"from":{"krate":2,"index":36829},"to":{"krate":0,"index":8492}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":133232,"byte_end":133237,"line_start":110,"line_end":110,"column_start":28,"column_end":33},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":8498},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":133660,"byte_end":133669,"line_start":128,"line_end":128,"column_start":14,"column_end":23},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":1251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":134077,"byte_end":134089,"line_start":146,"line_end":146,"column_start":28,"column_end":40},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":9232},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":134362,"byte_end":134374,"line_start":155,"line_end":155,"column_start":6,"column_end":18},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":9232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/token.rs","byte_start":134889,"byte_end":134898,"line_start":176,"line_end":176,"column_start":27,"column_end":36},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":1251},"to":{"krate":2,"index":7566}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":141679,"byte_end":141687,"line_start":82,"line_end":82,"column_start":6,"column_end":14},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":9359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":142264,"byte_end":142271,"line_start":117,"line_end":117,"column_start":28,"column_end":35},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":9390},"to":{"krate":2,"index":11828}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":142502,"byte_end":142509,"line_start":125,"line_end":125,"column_start":28,"column_end":35},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":9246},"to":{"krate":2,"index":11828}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":142736,"byte_end":142744,"line_start":133,"line_end":133,"column_start":28,"column_end":36},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":9281},"to":{"krate":2,"index":11828}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":143225,"byte_end":143232,"line_start":156,"line_end":156,"column_start":16,"column_end":23},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":9390},"to":{"krate":0,"index":1298}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":143901,"byte_end":143904,"line_start":177,"line_end":177,"column_start":16,"column_end":19},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":9374},"to":{"krate":0,"index":1298}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":144155,"byte_end":144162,"line_start":186,"line_end":186,"column_start":16,"column_end":23},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":9383},"to":{"krate":0,"index":1298}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":144388,"byte_end":144395,"line_start":196,"line_end":196,"column_start":16,"column_end":23},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":9246},"to":{"krate":0,"index":1298}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":145340,"byte_end":145348,"line_start":217,"line_end":217,"column_start":16,"column_end":24},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":9359},"to":{"krate":0,"index":1298}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/types.rs","byte_start":145692,"byte_end":145701,"line_start":229,"line_end":229,"column_start":16,"column_end":25},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":9367},"to":{"krate":0,"index":1298}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148602,"byte_end":148614,"line_start":44,"line_end":44,"column_start":20,"column_end":32},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":9475},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":148874,"byte_end":148881,"line_start":61,"line_end":61,"column_start":6,"column_end":13},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":9490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":151732,"byte_end":151739,"line_start":139,"line_end":139,"column_start":28,"column_end":35},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":9490},"to":{"krate":2,"index":11828}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":151984,"byte_end":151992,"line_start":147,"line_end":147,"column_start":28,"column_end":36},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":9395},"to":{"krate":2,"index":11828}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":152214,"byte_end":152222,"line_start":155,"line_end":155,"column_start":6,"column_end":14},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":9395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":161288,"byte_end":161296,"line_start":349,"line_end":349,"column_start":28,"column_end":36},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":9395},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":164348,"byte_end":164356,"line_start":425,"line_end":425,"column_start":32,"column_end":40},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":9395},"to":{"krate":19,"index":1538}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/value.rs","byte_start":164540,"byte_end":164555,"line_start":432,"line_end":432,"column_start":36,"column_end":51},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":1414},"to":{"krate":19,"index":1622}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":170691,"byte_end":170698,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":9520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/typing.rs","byte_start":175027,"byte_end":175034,"line_start":143,"line_end":143,"column_start":28,"column_end":35},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":9520},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/pretty.rs","byte_start":184411,"byte_end":184418,"line_start":12,"line_end":12,"column_start":23,"column_end":30},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":9490},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/pretty.rs","byte_start":184565,"byte_end":184573,"line_start":18,"line_end":18,"column_start":23,"column_end":31},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":9395},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/pretty.rs","byte_start":184796,"byte_end":184803,"line_start":28,"line_end":28,"column_start":21,"column_end":28},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":9490},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/pretty.rs","byte_start":186149,"byte_end":186157,"line_start":80,"line_end":80,"column_start":21,"column_end":29},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":9395},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/pretty.rs","byte_start":189108,"byte_end":189116,"line_start":153,"line_end":153,"column_start":21,"column_end":29},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":9481},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192677,"byte_end":192683,"line_start":40,"line_end":40,"column_start":6,"column_end":12},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":1621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":192849,"byte_end":192854,"line_start":50,"line_end":50,"column_start":6,"column_end":11},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":1627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":193533,"byte_end":193537,"line_start":68,"line_end":68,"column_start":28,"column_end":32},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":1618},"to":{"krate":2,"index":11828}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/parser/test.rs","byte_start":193760,"byte_end":193768,"line_start":76,"line_end":76,"column_start":6,"column_end":14},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":1634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":201876,"byte_end":201885,"line_start":132,"line_end":132,"column_start":6,"column_end":15},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":9632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":202809,"byte_end":202817,"line_start":163,"line_end":163,"column_start":6,"column_end":14},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":9568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":205058,"byte_end":205063,"line_start":222,"line_end":222,"column_start":6,"column_end":11},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":9549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/binary_parser.rs","byte_start":205990,"byte_end":205996,"line_start":248,"line_end":248,"column_start":6,"column_end":12},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":9545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":207132,"byte_end":207146,"line_start":22,"line_end":22,"column_start":11,"column_end":25},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":1847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":211225,"byte_end":211237,"line_start":146,"line_end":146,"column_start":11,"column_end":23},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":1866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":232495,"byte_end":232503,"line_start":726,"line_end":726,"column_start":15,"column_end":23},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":1963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":232658,"byte_end":232666,"line_start":732,"line_end":732,"column_start":38,"column_end":46},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":1963},"to":{"krate":19,"index":1678}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":233880,"byte_end":233888,"line_start":769,"line_end":769,"column_start":38,"column_end":46},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":1963},"to":{"krate":19,"index":1696}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":237192,"byte_end":237200,"line_start":848,"line_end":848,"column_start":39,"column_end":47},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":1963},"to":{"krate":19,"index":1734}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/de.rs","byte_start":238437,"byte_end":238445,"line_start":881,"line_end":881,"column_start":42,"column_end":50},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":1963},"to":{"krate":19,"index":1742}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":239818,"byte_end":239828,"line_start":20,"line_end":20,"column_start":6,"column_end":16},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":9858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":241890,"byte_end":241905,"line_start":77,"line_end":77,"column_start":6,"column_end":21},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":9863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":245422,"byte_end":245430,"line_start":194,"line_end":194,"column_start":30,"column_end":38},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":2105},"to":{"krate":0,"index":1201}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/ser.rs","byte_start":246029,"byte_end":246042,"line_start":219,"line_end":219,"column_start":6,"column_end":19},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":9877},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/candid-0.7.8/src/utils.rs","byte_start":257716,"byte_end":257721,"line_start":145,"line_end":145,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":2163}}]}