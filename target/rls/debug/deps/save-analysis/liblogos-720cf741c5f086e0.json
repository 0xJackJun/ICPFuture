{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0","program":"/Users/quanrong/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","logos","--edition=2018","/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"export_derive\"","--cfg","feature=\"logos-derive\"","--cfg","feature=\"std\"","-C","metadata=720cf741c5f086e0","-C","extra-filename=-720cf741c5f086e0","--out-dir","/Users/quanrong/rust-workplace/cycle_mail/target/rls/debug/deps","-L","dependency=/Users/quanrong/rust-workplace/cycle_mail/target/rls/debug/deps","--extern","logos_derive=/Users/quanrong/rust-workplace/cycle_mail/target/rls/debug/deps/liblogos_derive-bb1e55c5d7990aed.dylib","--cap-lints","allow","--error-format=json","--sysroot","/Users/quanrong/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/quanrong/rust-workplace/cycle_mail/target/rls/debug/deps/liblogos-720cf741c5f086e0.rmeta"},"prelude":{"crate_id":{"name":"logos","disambiguator":[13228576440786698441,0]},"crate_root":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src","external_crates":[{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7101137524639191865,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","num":2,"id":{"name":"core","disambiguator":[1887987468260230341,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11423829060327785168,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11467597086512816709,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11478090127832647137,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[16011649288231704614,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12732930576792739361,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11329576585081918948,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17189205392791100154,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2953602047458512213,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[4833631622402917298,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[2052285648718182991,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16253613530580249776,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[5745760535571076062,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[7876989589743503273,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[14488000063334320346,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[5084180220498965168,0]}},{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","num":18,"id":{"name":"logos_derive","disambiguator":[17229032027784949011,0]}}],"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":0,"byte_end":10843,"line_start":1,"line_end":343,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":1347},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":6403,"byte_end":6408,"line_start":172,"line_end":172,"column_start":23,"column_end":28},"alias_span":null,"name":"Logos","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":24},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":6496,"byte_end":6501,"line_start":180,"line_end":180,"column_start":24,"column_end":29},"alias_span":null,"name":"Lexer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":23},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":6503,"byte_end":6507,"line_start":180,"line_end":180,"column_start":31,"column_end":35},"alias_span":null,"name":"Span","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":55},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":6509,"byte_end":6520,"line_start":180,"line_end":180,"column_start":37,"column_end":48},"alias_span":null,"name":"SpannedIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":6546,"byte_end":6552,"line_start":181,"line_end":181,"column_start":24,"column_end":30},"alias_span":null,"name":"Source","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":0,"byte_end":10843,"line_start":1,"line_end":343,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":86},{"krate":0,"index":140},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":248}],"decl_id":null,"docs":" <img src=\"https://raw.githubusercontent.com/maciejhirsz/logos/master/logos.svg?sanitize=true\" alt=\"Logos logo\" width=\"250\" align=\"right\">","sig":null,"attributes":[{"value":"/ <img src=\"https://raw.githubusercontent.com/maciejhirsz/logos/master/logos.svg?sanitize=true\" alt=\"Logos logo\" width=\"250\" align=\"right\">","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":0,"byte_end":141,"line_start":1,"line_end":1,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":142,"byte_end":145,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Logos","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":146,"byte_end":157,"line_start":3,"line_end":3,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":158,"byte_end":161,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ _Create ridiculously fast Lexers._","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":162,"byte_end":200,"line_start":5,"line_end":5,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":201,"byte_end":204,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ **Logos** has two goals:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":205,"byte_end":233,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":234,"byte_end":237,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ + To make it easy to create a Lexer, so you can focus on more complex problems.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":238,"byte_end":321,"line_start":9,"line_end":9,"column_start":1,"column_end":84}},{"value":"/ + To make the generated Lexer faster than anything you'd write by hand.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":322,"byte_end":397,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":398,"byte_end":401,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ To achieve those, **Logos**:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":402,"byte_end":434,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":435,"byte_end":438,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ + Combines all token definitions into a single [deterministic state machine](https://en.wikipedia.org/wiki/Deterministic_finite_automaton).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":439,"byte_end":582,"line_start":14,"line_end":14,"column_start":1,"column_end":144}},{"value":"/ + Optimizes branches into [lookup tables](https://en.wikipedia.org/wiki/Lookup_table) or [jump tables](https://en.wikipedia.org/wiki/Branch_table).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":583,"byte_end":734,"line_start":15,"line_end":15,"column_start":1,"column_end":152}},{"value":"/ + Prevents [backtracking](https://en.wikipedia.org/wiki/ReDoS) inside token definitions.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":735,"byte_end":827,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/ + [Unwinds loops](https://en.wikipedia.org/wiki/Loop_unrolling), and batches reads to minimize bounds checking.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":828,"byte_end":943,"line_start":17,"line_end":17,"column_start":1,"column_end":116}},{"value":"/ + Does all of that heavy lifting at compile time.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":944,"byte_end":997,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":998,"byte_end":1001,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1002,"byte_end":1016,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1017,"byte_end":1020,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1021,"byte_end":1032,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/ use logos::Logos;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1033,"byte_end":1054,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1055,"byte_end":1058,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[derive(Logos, Debug, PartialEq)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1059,"byte_end":1097,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/ enum Token {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1098,"byte_end":1114,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/     // Tokens can be literal strings, of any length.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1115,"byte_end":1171,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/     #[token(\"fast\")]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1172,"byte_end":1196,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/     Fast,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1197,"byte_end":1210,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1211,"byte_end":1214,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     #[token(\".\")]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1215,"byte_end":1236,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     Period,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1237,"byte_end":1252,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1253,"byte_end":1256,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     // Or regular expressions.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1257,"byte_end":1291,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/     #[regex(\"[a-zA-Z]+\")]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1292,"byte_end":1321,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/     Text,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1322,"byte_end":1335,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1336,"byte_end":1339,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     // Logos requires one token variant to handle errors,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1340,"byte_end":1401,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/     // it can be named anything you wish.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1402,"byte_end":1447,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/     #[error]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1448,"byte_end":1464,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/     // We can also use this variant to define whitespace,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1465,"byte_end":1526,"line_start":41,"line_end":41,"column_start":1,"column_end":62}},{"value":"/     // or any other matches we wish to skip.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1527,"byte_end":1575,"line_start":42,"line_end":42,"column_start":1,"column_end":49}},{"value":"/     #[regex(r\"[ \\t\\n\\f]+\", logos::skip)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1576,"byte_end":1620,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"/     Error,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1621,"byte_end":1635,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1636,"byte_end":1641,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1642,"byte_end":1645,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1646,"byte_end":1661,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"/     let mut lex = Token::lexer(\"Create ridiculously fast Lexers.\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1662,"byte_end":1733,"line_start":48,"line_end":48,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1734,"byte_end":1737,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(lex.next(), Some(Token::Text));","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1738,"byte_end":1788,"line_start":50,"line_end":50,"column_start":1,"column_end":51}},{"value":"/     assert_eq!(lex.span(), 0..6);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1789,"byte_end":1826,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/     assert_eq!(lex.slice(), \"Create\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1827,"byte_end":1869,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1870,"byte_end":1873,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(lex.next(), Some(Token::Text));","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1874,"byte_end":1924,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/     assert_eq!(lex.span(), 7..19);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1925,"byte_end":1963,"line_start":55,"line_end":55,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(lex.slice(), \"ridiculously\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":1964,"byte_end":2012,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2013,"byte_end":2016,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(lex.next(), Some(Token::Fast));","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2017,"byte_end":2067,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/     assert_eq!(lex.span(), 20..24);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2068,"byte_end":2107,"line_start":59,"line_end":59,"column_start":1,"column_end":40}},{"value":"/     assert_eq!(lex.slice(), \"fast\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2108,"byte_end":2148,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2149,"byte_end":2152,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(lex.next(), Some(Token::Text));","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2153,"byte_end":2203,"line_start":62,"line_end":62,"column_start":1,"column_end":51}},{"value":"/     assert_eq!(lex.slice(), \"Lexers\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2204,"byte_end":2246,"line_start":63,"line_end":63,"column_start":1,"column_end":43}},{"value":"/     assert_eq!(lex.span(), 25..31);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2247,"byte_end":2286,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2287,"byte_end":2290,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(lex.next(), Some(Token::Period));","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2291,"byte_end":2343,"line_start":66,"line_end":66,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(lex.span(), 31..32);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2344,"byte_end":2383,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/     assert_eq!(lex.slice(), \".\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2384,"byte_end":2421,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2422,"byte_end":2425,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(lex.next(), None);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2426,"byte_end":2463,"line_start":70,"line_end":70,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2464,"byte_end":2469,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2470,"byte_end":2477,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2478,"byte_end":2481,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ### Callbacks","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2482,"byte_end":2499,"line_start":74,"line_end":74,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2500,"byte_end":2503,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ **Logos** can also call arbitrary functions whenever a pattern is matched,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2504,"byte_end":2582,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/ which can be used to put data into a variant:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2583,"byte_end":2632,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2633,"byte_end":2636,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2637,"byte_end":2648,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ use logos::{Logos, Lexer};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2649,"byte_end":2679,"line_start":80,"line_end":80,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2680,"byte_end":2683,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ // Note: callbacks can return `Option` or `Result`","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2684,"byte_end":2738,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/ fn kilo(lex: &mut Lexer<Token>) -> Option<u64> {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2739,"byte_end":2791,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/     let slice = lex.slice();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2792,"byte_end":2824,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/     let n: u64 = slice[..slice.len() - 1].parse().ok()?; // skip 'k'","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2825,"byte_end":2897,"line_start":85,"line_end":85,"column_start":1,"column_end":73}},{"value":"/     Some(n * 1_000)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2898,"byte_end":2921,"line_start":86,"line_end":86,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2922,"byte_end":2927,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2928,"byte_end":2931,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ fn mega(lex: &mut Lexer<Token>) -> Option<u64> {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2932,"byte_end":2984,"line_start":89,"line_end":89,"column_start":1,"column_end":53}},{"value":"/     let slice = lex.slice();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":2985,"byte_end":3017,"line_start":90,"line_end":90,"column_start":1,"column_end":33}},{"value":"/     let n: u64 = slice[..slice.len() - 1].parse().ok()?; // skip 'm'","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3018,"byte_end":3090,"line_start":91,"line_end":91,"column_start":1,"column_end":73}},{"value":"/     Some(n * 1_000_000)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3091,"byte_end":3118,"line_start":92,"line_end":92,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3119,"byte_end":3124,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3125,"byte_end":3128,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ #[derive(Logos, Debug, PartialEq)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3129,"byte_end":3167,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ enum Token {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3168,"byte_end":3184,"line_start":96,"line_end":96,"column_start":1,"column_end":17}},{"value":"/     #[regex(r\"[ \\t\\n\\f]+\", logos::skip)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3185,"byte_end":3229,"line_start":97,"line_end":97,"column_start":1,"column_end":45}},{"value":"/     #[error]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3230,"byte_end":3246,"line_start":98,"line_end":98,"column_start":1,"column_end":17}},{"value":"/     Error,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3247,"byte_end":3261,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3262,"byte_end":3265,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/     // Callbacks can use closure syntax, or refer","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3266,"byte_end":3319,"line_start":101,"line_end":101,"column_start":1,"column_end":54}},{"value":"/     // to a function defined elsewhere.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3320,"byte_end":3363,"line_start":102,"line_end":102,"column_start":1,"column_end":44}},{"value":"/     //","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3364,"byte_end":3374,"line_start":103,"line_end":103,"column_start":1,"column_end":11}},{"value":"/     // Each pattern can have it's own callback.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3375,"byte_end":3426,"line_start":104,"line_end":104,"column_start":1,"column_end":52}},{"value":"/     #[regex(\"[0-9]+\", |lex| lex.slice().parse())]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3427,"byte_end":3480,"line_start":105,"line_end":105,"column_start":1,"column_end":54}},{"value":"/     #[regex(\"[0-9]+k\", kilo)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3481,"byte_end":3514,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/     #[regex(\"[0-9]+m\", mega)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3515,"byte_end":3548,"line_start":107,"line_end":107,"column_start":1,"column_end":34}},{"value":"/     Number(u64),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3549,"byte_end":3569,"line_start":108,"line_end":108,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3570,"byte_end":3575,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3576,"byte_end":3579,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3580,"byte_end":3595,"line_start":111,"line_end":111,"column_start":1,"column_end":16}},{"value":"/     let mut lex = Token::lexer(\"5 42k 75m\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3596,"byte_end":3644,"line_start":112,"line_end":112,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3645,"byte_end":3648,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(lex.next(), Some(Token::Number(5)));","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3649,"byte_end":3704,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/     assert_eq!(lex.slice(), \"5\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3705,"byte_end":3742,"line_start":115,"line_end":115,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3743,"byte_end":3746,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(lex.next(), Some(Token::Number(42_000)));","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3747,"byte_end":3807,"line_start":117,"line_end":117,"column_start":1,"column_end":61}},{"value":"/     assert_eq!(lex.slice(), \"42k\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3808,"byte_end":3847,"line_start":118,"line_end":118,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3848,"byte_end":3851,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(lex.next(), Some(Token::Number(75_000_000)));","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3852,"byte_end":3916,"line_start":120,"line_end":120,"column_start":1,"column_end":65}},{"value":"/     assert_eq!(lex.slice(), \"75m\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3917,"byte_end":3956,"line_start":121,"line_end":121,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3957,"byte_end":3960,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(lex.next(), None);","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3961,"byte_end":3998,"line_start":123,"line_end":123,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":3999,"byte_end":4004,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":4005,"byte_end":4012,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":4013,"byte_end":4016,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ Logos can handle callbacks with following return types:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":4017,"byte_end":4076,"line_start":127,"line_end":127,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":4077,"byte_end":4080,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ | Return type                       | Produces                                           |","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":4081,"byte_end":4175,"line_start":129,"line_end":129,"column_start":1,"column_end":95}},{"value":"/ |-----------------------------------|----------------------------------------------------|","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":4176,"byte_end":4270,"line_start":130,"line_end":130,"column_start":1,"column_end":95}},{"value":"/ | `()`                              | `Token::Unit`                                      |","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":4271,"byte_end":4365,"line_start":131,"line_end":131,"column_start":1,"column_end":95}},{"value":"/ | `bool`                            | `Token::Unit` **or** `<Token as Logos>::ERROR`     |","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":4366,"byte_end":4460,"line_start":132,"line_end":132,"column_start":1,"column_end":95}},{"value":"/ | `Result<(), _>`                   | `Token::Unit` **or** `<Token as Logos>::ERROR`     |","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":4461,"byte_end":4555,"line_start":133,"line_end":133,"column_start":1,"column_end":95}},{"value":"/ | `T`                               | `Token::Value(T)`                                  |","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":4556,"byte_end":4650,"line_start":134,"line_end":134,"column_start":1,"column_end":95}},{"value":"/ | `Option<T>`                       | `Token::Value(T)` **or** `<Token as Logos>::ERROR` |","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":4651,"byte_end":4745,"line_start":135,"line_end":135,"column_start":1,"column_end":95}},{"value":"/ | `Result<T, _>`                    | `Token::Value(T)` **or** `<Token as Logos>::ERROR` |","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":4746,"byte_end":4840,"line_start":136,"line_end":136,"column_start":1,"column_end":95}},{"value":"/ | [`Skip`](./struct.Skip.html)      | _skips matched input_                              |","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":4841,"byte_end":4935,"line_start":137,"line_end":137,"column_start":1,"column_end":95}},{"value":"/ | [`Filter<T>`](./enum.Filter.html) | `Token::Value(T)` **or** _skips matched input_     |","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":4936,"byte_end":5030,"line_start":138,"line_end":138,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5031,"byte_end":5034,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ Callbacks can be also used to do perform more specialized lexing in place","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5035,"byte_end":5112,"line_start":140,"line_end":140,"column_start":1,"column_end":78}},{"value":"/ where regular expressions are too limiting. For specifics look at","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5113,"byte_end":5182,"line_start":141,"line_end":141,"column_start":1,"column_end":70}},{"value":"/ [`Lexer::remainder`](./struct.Lexer.html#method.remainder) and","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5183,"byte_end":5249,"line_start":142,"line_end":142,"column_start":1,"column_end":67}},{"value":"/ [`Lexer::bump`](./struct.Lexer.html#method.bump).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5250,"byte_end":5303,"line_start":143,"line_end":143,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5304,"byte_end":5307,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ## Token disambiguation","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5308,"byte_end":5335,"line_start":145,"line_end":145,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5336,"byte_end":5339,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ Rule of thumb is:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5340,"byte_end":5361,"line_start":147,"line_end":147,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5362,"byte_end":5365,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ + Longer beats shorter.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5366,"byte_end":5393,"line_start":149,"line_end":149,"column_start":1,"column_end":28}},{"value":"/ + Specific beats generic.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5394,"byte_end":5423,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5424,"byte_end":5427,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ If any two definitions could match the same input, like `fast` and `[a-zA-Z]+`","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5428,"byte_end":5510,"line_start":152,"line_end":152,"column_start":1,"column_end":83}},{"value":"/ in the example above, it's the longer and more specific definition of `Token::Fast`","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5511,"byte_end":5598,"line_start":153,"line_end":153,"column_start":1,"column_end":88}},{"value":"/ that will be the result.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5599,"byte_end":5627,"line_start":154,"line_end":154,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5628,"byte_end":5631,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ This is done by comparing numeric priority attached to each definition. Every consecutive,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5632,"byte_end":5726,"line_start":156,"line_end":156,"column_start":1,"column_end":95}},{"value":"/ non-repeating single byte adds 2 to the priority, while every range or regex class adds 1.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5727,"byte_end":5821,"line_start":157,"line_end":157,"column_start":1,"column_end":95}},{"value":"/ Loops or optional blocks are ignored, while alternations count the shortest alternative:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5822,"byte_end":5914,"line_start":158,"line_end":158,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5915,"byte_end":5918,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ + `[a-zA-Z]+` has a priority of 1 (lowest possible), because at minimum it can match a single byte to a class.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":5919,"byte_end":6033,"line_start":160,"line_end":160,"column_start":1,"column_end":115}},{"value":"/ + `foobar` has a priority of 12.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":6034,"byte_end":6070,"line_start":161,"line_end":161,"column_start":1,"column_end":37}},{"value":"/ + `(foo|hello)(bar)?` has a priority of 6, `foo` being it's shortest possible match.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":6071,"byte_end":6159,"line_start":162,"line_end":162,"column_start":1,"column_end":89}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":6204,"byte_end":6226,"line_start":165,"line_end":165,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":23},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":11004,"byte_end":11008,"line_start":8,"line_end":8,"column_start":10,"column_end":14},"name":"Span","qualname":"::lexer::Span","value":"core::ops::Range<usize>","parent":null,"children":[],"decl_id":null,"docs":" Byte range in the source.\n","sig":null,"attributes":[{"value":"/ Byte range in the source.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":10965,"byte_end":10994,"line_start":7,"line_end":7,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":24},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":11200,"byte_end":11205,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"Lexer","qualname":"::lexer::Lexer","value":"Lexer { extras }","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"decl_id":null,"docs":" `Lexer` is the main struct of the crate that allows you to read through a\n `Source` and produce tokens for enums implementing the `Logos` trait.\n","sig":null,"attributes":[{"value":"/ `Lexer` is the main struct of the crate that allows you to read through a","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":11037,"byte_end":11114,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ `Source` and produce tokens for enums implementing the `Logos` trait.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":11115,"byte_end":11188,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":31},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":11415,"byte_end":11421,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"name":"extras","qualname":"::lexer::Lexer::extras","value":"<Token as Logos<'source>>::Extras","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" Extras associated with the `Token`.\n","sig":null,"attributes":[{"value":"/ Extras associated with the `Token`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":11367,"byte_end":11406,"line_start":18,"line_end":18,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":11731,"byte_end":11734,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<Lexer>::new","value":"pub fn new(&'source Token::Source) -> Self where Token::Extras: Default","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Lexer`.","sig":null,"attributes":[{"value":"/ Create a new `Lexer`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":11506,"byte_end":11531,"line_start":23,"line_end":23,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":11536,"byte_end":11539,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Due to type inference, it might be more ergonomic to construct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":11544,"byte_end":11610,"line_start":25,"line_end":25,"column_start":5,"column_end":71}},{"value":"/ it by calling [`Token::lexer`](./trait.Logos.html#method.lexer) on any `Token` with derived `Logos`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":11615,"byte_end":11719,"line_start":26,"line_end":26,"column_start":5,"column_end":109}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":12164,"byte_end":12175,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"with_extras","qualname":"<Lexer>::with_extras","value":"pub fn with_extras(&'source Token::Source, Token::Extras) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Lexer` with the provided `Extras`.","sig":null,"attributes":[{"value":"/ Create a new `Lexer` with the provided `Extras`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":11888,"byte_end":11940,"line_start":34,"line_end":34,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":11945,"byte_end":11948,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Due to type inference, it might be more ergonomic to construct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":11953,"byte_end":12019,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ it by calling [`Token::lexer_with_extras`](./trait.Logos.html#method.lexer_with_extras) on any `Token` with derived `Logos`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":12024,"byte_end":12152,"line_start":37,"line_end":37,"column_start":5,"column_end":133}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":12493,"byte_end":12499,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"source","qualname":"<Lexer>::source","value":"pub fn source(&Self) -> &'source Token::Source","parent":null,"children":[],"decl_id":null,"docs":" Source from which this Lexer is reading tokens.\n","sig":null,"attributes":[{"value":"/ Source from which this Lexer is reading tokens.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":12416,"byte_end":12467,"line_start":48,"line_end":48,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":12472,"byte_end":12481,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13604,"byte_end":13611,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"spanned","qualname":"<Lexer>::spanned","value":"pub fn spanned(Self) -> SpannedIter","parent":null,"children":[],"decl_id":null,"docs":" Wrap the `Lexer` in an [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html)\n that produces tuples of `(Token, `[`Span`](./type.Span.html)`)`.","sig":null,"attributes":[{"value":"/ Wrap the `Lexer` in an [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":12566,"byte_end":12661,"line_start":54,"line_end":54,"column_start":5,"column_end":100}},{"value":"/ that produces tuples of `(Token, `[`Span`](./type.Span.html)`)`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":12666,"byte_end":12734,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":12739,"byte_end":12742,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":12747,"byte_end":12760,"line_start":57,"line_end":57,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":12765,"byte_end":12768,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":12773,"byte_end":12780,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ use logos::Logos;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":12785,"byte_end":12806,"line_start":60,"line_end":60,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":12811,"byte_end":12814,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ #[derive(Logos, Debug, PartialEq)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":12819,"byte_end":12857,"line_start":62,"line_end":62,"column_start":5,"column_end":43}},{"value":"/ enum Example {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":12862,"byte_end":12880,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/     #[regex(r\"[ \\n\\t\\f]+\", logos::skip)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":12885,"byte_end":12929,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/     #[error]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":12934,"byte_end":12950,"line_start":65,"line_end":65,"column_start":5,"column_end":21}},{"value":"/     Error,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":12955,"byte_end":12969,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":12974,"byte_end":12977,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/     #[regex(\"-?[0-9]+\", |lex| lex.slice().parse())]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":12982,"byte_end":13037,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/     Integer(i64),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13042,"byte_end":13063,"line_start":69,"line_end":69,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13068,"byte_end":13071,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/     #[regex(\"-?[0-9]+\\\\.[0-9]+\", |lex| lex.slice().parse())]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13076,"byte_end":13140,"line_start":71,"line_end":71,"column_start":5,"column_end":69}},{"value":"/     Float(f64),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13145,"byte_end":13164,"line_start":72,"line_end":72,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13169,"byte_end":13174,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13179,"byte_end":13182,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let tokens: Vec<_> = Example::lexer(\"42 3.14 -5 f\").spanned().collect();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13187,"byte_end":13263,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13268,"byte_end":13271,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13276,"byte_end":13291,"line_start":77,"line_end":77,"column_start":5,"column_end":20}},{"value":"/     tokens,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13296,"byte_end":13311,"line_start":78,"line_end":78,"column_start":5,"column_end":20}},{"value":"/     &[","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13316,"byte_end":13326,"line_start":79,"line_end":79,"column_start":5,"column_end":15}},{"value":"/         (Example::Integer(42), 0..2),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13331,"byte_end":13372,"line_start":80,"line_end":80,"column_start":5,"column_end":46}},{"value":"/         (Example::Float(3.14), 3..7),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13377,"byte_end":13418,"line_start":81,"line_end":81,"column_start":5,"column_end":46}},{"value":"/         (Example::Integer(-5), 8..10),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13423,"byte_end":13465,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/         (Example::Error, 11..12), // 'f' is not a recognized token","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13470,"byte_end":13540,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/     ],","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13545,"byte_end":13555,"line_start":84,"line_end":84,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13560,"byte_end":13566,"line_start":85,"line_end":85,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13571,"byte_end":13578,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13583,"byte_end":13592,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13810,"byte_end":13815,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"range","qualname":"<Lexer>::range","value":"pub fn range(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13698,"byte_end":13707,"line_start":92,"line_end":92,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"0.11.0\", note = \"please use `span` instead\")","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13731,"byte_end":13798,"line_start":94,"line_end":94,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13942,"byte_end":13946,"line_start":101,"line_end":101,"column_start":12,"column_end":16},"name":"span","qualname":"<Lexer>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Get the range for the current token in `Source`.\n","sig":null,"attributes":[{"value":"/ Get the range for the current token in `Source`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13864,"byte_end":13916,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":13921,"byte_end":13930,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":14086,"byte_end":14091,"line_start":107,"line_end":107,"column_start":12,"column_end":17},"name":"slice","qualname":"<Lexer>::slice","value":"pub fn slice(&Self) -> &'source <Token::Source as Source>::Slice","parent":null,"children":[],"decl_id":null,"docs":" Get a string slice of the current token.\n","sig":null,"attributes":[{"value":"/ Get a string slice of the current token.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":14016,"byte_end":14060,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":14065,"byte_end":14074,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":14317,"byte_end":14326,"line_start":113,"line_end":113,"column_start":12,"column_end":21},"name":"remainder","qualname":"<Lexer>::remainder","value":"pub fn remainder(&Self) -> &'source <Token::Source as Source>::Slice","parent":null,"children":[],"decl_id":null,"docs":" Get a slice of remaining source, starting at the end of current token.\n","sig":null,"attributes":[{"value":"/ Get a slice of remaining source, starting at the end of current token.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":14217,"byte_end":14291,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":14296,"byte_end":14305,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":14742,"byte_end":14747,"line_start":124,"line_end":124,"column_start":12,"column_end":17},"name":"morph","qualname":"<Lexer>::morph","value":"pub fn morph<Token2>(Self) -> Lexer where Token2: Logos<Source =\nToken::Source>, Token::Extras: Into<Token2::Extras>","parent":null,"children":[],"decl_id":null,"docs":" Turn this lexer into a lexer for a new token type.","sig":null,"attributes":[{"value":"/ Turn this lexer into a lexer for a new token type.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":14511,"byte_end":14565,"line_start":120,"line_end":120,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":14570,"byte_end":14573,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ The new lexer continues to point at the same span as the current lexer,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":14578,"byte_end":14653,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ and the current token becomes the error token of the new token type.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":14658,"byte_end":14730,"line_start":123,"line_end":123,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":15425,"byte_end":15429,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"bump","qualname":"<Lexer>::bump","value":"pub fn bump(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Bumps the end of currently lexed token by `n` bytes.","sig":null,"attributes":[{"value":"/ Bumps the end of currently lexed token by `n` bytes.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":15141,"byte_end":15197,"line_start":138,"line_end":138,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":15202,"byte_end":15205,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":15210,"byte_end":15222,"line_start":140,"line_end":140,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":15227,"byte_end":15230,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Panics if adding `n` to current offset would place the `Lexer` beyond the last byte,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":15235,"byte_end":15323,"line_start":142,"line_end":142,"column_start":5,"column_end":93}},{"value":"/ or in the middle of an UTF-8 code point (does not apply when lexing raw `&[u8]`).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":15328,"byte_end":15413,"line_start":143,"line_end":143,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":16591,"byte_end":16602,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"SpannedIter","qualname":"::lexer::SpannedIter","value":"SpannedIter {  }","parent":null,"children":[{"krate":0,"index":58}],"decl_id":null,"docs":" Iterator that pairs tokens with their position in the source.","sig":null,"attributes":[{"value":"/ Iterator that pairs tokens with their position in the source.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":16424,"byte_end":16489,"line_start":188,"line_end":188,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":16490,"byte_end":16493,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ Look at [`Lexer::spanned`](./struct.Lexer.html#method.spanned) for documentation.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":16494,"byte_end":16579,"line_start":190,"line_end":190,"column_start":1,"column_end":86}}]},{"kind":"Mod","id":{"krate":0,"index":86},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"source","qualname":"::source","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":106},{"krate":0,"index":119},{"krate":0,"index":131},{"krate":0,"index":135},{"krate":0,"index":139},{"krate":0,"index":251},{"krate":0,"index":257},{"krate":0,"index":263},{"krate":0,"index":269},{"krate":0,"index":275},{"krate":0,"index":281},{"krate":0,"index":287},{"krate":0,"index":293},{"krate":0,"index":299},{"krate":0,"index":305},{"krate":0,"index":311},{"krate":0,"index":317},{"krate":0,"index":323},{"krate":0,"index":329},{"krate":0,"index":335},{"krate":0,"index":341},{"krate":0,"index":347},{"krate":0,"index":353},{"krate":0,"index":359},{"krate":0,"index":365},{"krate":0,"index":371},{"krate":0,"index":377},{"krate":0,"index":383},{"krate":0,"index":389},{"krate":0,"index":395},{"krate":0,"index":401},{"krate":0,"index":407},{"krate":0,"index":413},{"krate":0,"index":419},{"krate":0,"index":425},{"krate":0,"index":431},{"krate":0,"index":437}],"decl_id":null,"docs":" This module contains a bunch of traits necessary for processing byte strings.","sig":null,"attributes":[{"value":"/ This module contains a bunch of traits necessary for processing byte strings.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":19558,"byte_end":19639,"line_start":1,"line_end":1,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":19640,"byte_end":19643,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Most notable are:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":19644,"byte_end":19665,"line_start":3,"line_end":3,"column_start":1,"column_end":22}},{"value":"/ * `Source` - implemented by default for `&str` and `&[u8]`, used by the `Lexer`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":19666,"byte_end":19750,"line_start":4,"line_end":4,"column_start":1,"column_end":85}},{"value":"/ * `Slice` - slices of `Source`, returned by `Lexer::slice`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":19751,"byte_end":19814,"line_start":5,"line_end":5,"column_start":1,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":93},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20095,"byte_end":20101,"line_start":15,"line_end":15,"column_start":11,"column_end":17},"name":"Source","qualname":"::source::Source","value":"Source","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":" Trait for types the `Lexer` can read from.","sig":null,"attributes":[{"value":"/ Trait for types the `Lexer` can read from.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":19859,"byte_end":19905,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":19906,"byte_end":19909,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Most notably this is implemented for `&str`. It is unlikely you will","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":19910,"byte_end":19982,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ ever want to use this Trait yourself, unless implementing a new `Source`","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":19983,"byte_end":20059,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ the `Lexer` can use.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20060,"byte_end":20084,"line_start":14,"line_end":14,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":94},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20162,"byte_end":20167,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Slice","qualname":"::source::Source::Slice","value":"type Slice: ?Sized + PartialEq + Eq + Debug;","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" A type this `Source` can be sliced into.\n","sig":null,"attributes":[{"value":"/ A type this `Source` can be sliced into.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20108,"byte_end":20152,"line_start":16,"line_end":16,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20239,"byte_end":20242,"line_start":20,"line_end":20,"column_start":8,"column_end":11},"name":"len","qualname":"::source::Source::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Length of the source\n","sig":null,"attributes":[{"value":"/ Length of the source","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20207,"byte_end":20231,"line_start":19,"line_end":19,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20984,"byte_end":20988,"line_start":39,"line_end":39,"column_start":8,"column_end":12},"name":"read","qualname":"::source::Source::read","value":"pub fn read<'a, Chunk>(&'a Self, usize) -> Option<Chunk> where\nChunk: self::Chunk","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Read a chunk of bytes into an array. Returns `None` when reading\n out of bounds would occur.","sig":null,"attributes":[{"value":"/ Read a chunk of bytes into an array. Returns `None` when reading","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20265,"byte_end":20333,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/ out of bounds would occur.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20338,"byte_end":20368,"line_start":23,"line_end":23,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20373,"byte_end":20376,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ This is very useful for matching fixed-size byte arrays, and tends","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20381,"byte_end":20451,"line_start":25,"line_end":25,"column_start":5,"column_end":75}},{"value":"/ to be very fast at it too, since the compiler knows the byte lengths.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20456,"byte_end":20529,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20534,"byte_end":20537,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20542,"byte_end":20553,"line_start":28,"line_end":28,"column_start":5,"column_end":16}},{"value":"/ use logos::Source;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20558,"byte_end":20580,"line_start":29,"line_end":29,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20585,"byte_end":20588,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ let foo = \"foo\";","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20593,"byte_end":20613,"line_start":31,"line_end":31,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20618,"byte_end":20621,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(foo.read(0), Some(b\"foo\"));     // Option<&[u8; 3]>","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20626,"byte_end":20692,"line_start":33,"line_end":33,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(foo.read(0), Some(b\"fo\"));      // Option<&[u8; 2]>","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20697,"byte_end":20763,"line_start":34,"line_end":34,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(foo.read(2), Some(b'o'));       // Option<u8>","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20768,"byte_end":20828,"line_start":35,"line_end":35,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(foo.read::<&[u8; 4]>(0), None); // Out of bounds","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20833,"byte_end":20896,"line_start":36,"line_end":36,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(foo.read::<&[u8; 2]>(2), None); // Out of bounds","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20901,"byte_end":20964,"line_start":37,"line_end":37,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":20969,"byte_end":20976,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21172,"byte_end":21186,"line_start":44,"line_end":44,"column_start":15,"column_end":29},"name":"read_unchecked","qualname":"::source::Source::read_unchecked","value":"pub unsafe fn read_unchecked<'a, Chunk>(&'a Self, usize) -> Chunk where\nChunk: self::Chunk","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Read a chunk of bytes into an array without doing bounds checks.\n","sig":null,"attributes":[{"value":"/ Read a chunk of bytes into an array without doing bounds checks.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21089,"byte_end":21157,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21611,"byte_end":21616,"line_start":57,"line_end":57,"column_start":8,"column_end":13},"name":"slice","qualname":"::source::Source::slice","value":"pub fn slice(&Self, Range<usize>) -> Option<&Self::Slice>","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Get a slice of the source at given range. This is analogous to\n `slice::get(range)`.","sig":null,"attributes":[{"value":"/ Get a slice of the source at given range. This is analogous to","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21279,"byte_end":21345,"line_start":48,"line_end":48,"column_start":5,"column_end":71}},{"value":"/ `slice::get(range)`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21350,"byte_end":21374,"line_start":49,"line_end":49,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21379,"byte_end":21382,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21387,"byte_end":21398,"line_start":51,"line_end":51,"column_start":5,"column_end":16}},{"value":"/ use logos::Source;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21403,"byte_end":21425,"line_start":52,"line_end":52,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21430,"byte_end":21433,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let foo = \"It was the year when they finally immanentized the Eschaton.\";","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21438,"byte_end":21515,"line_start":54,"line_end":54,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(<str as Source>::slice(&foo, 51..59), Some(\"Eschaton\"));","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21520,"byte_end":21591,"line_start":55,"line_end":55,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21596,"byte_end":21603,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":22153,"byte_end":22168,"line_start":73,"line_end":73,"column_start":15,"column_end":30},"name":"slice_unchecked","qualname":"::source::Source::slice_unchecked","value":"pub unsafe fn slice_unchecked(&Self, Range<usize>) -> &Self::Slice","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Get a slice of the source at given range. This is analogous to\n `slice::get_unchecked(range)`.","sig":null,"attributes":[{"value":"/ Get a slice of the source at given range. This is analogous to","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21675,"byte_end":21741,"line_start":59,"line_end":59,"column_start":5,"column_end":71}},{"value":"/ `slice::get_unchecked(range)`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21746,"byte_end":21780,"line_start":60,"line_end":60,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21785,"byte_end":21788,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ **Using this method with range out of bounds is undefined behavior!**","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21793,"byte_end":21866,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21871,"byte_end":21874,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21879,"byte_end":21890,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/ use logos::Source;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21895,"byte_end":21917,"line_start":65,"line_end":65,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21922,"byte_end":21925,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ let foo = \"It was the year when they finally immanentized the Eschaton.\";","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":21930,"byte_end":22007,"line_start":67,"line_end":67,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":22012,"byte_end":22015,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":22020,"byte_end":22032,"line_start":69,"line_end":69,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(<str as Source>::slice_unchecked(&foo, 51..59), \"Eschaton\");","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":22037,"byte_end":22116,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":22121,"byte_end":22126,"line_start":71,"line_end":71,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":22131,"byte_end":22138,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":22453,"byte_end":22466,"line_start":80,"line_end":80,"column_start":8,"column_end":21},"name":"find_boundary","qualname":"::source::Source::find_boundary","value":"pub fn find_boundary(&Self, usize) -> usize","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" For `&str` sources attempts to find the closest `char` boundary at which source\n can be sliced, starting from `index`.","sig":null,"attributes":[{"value":"/ For `&str` sources attempts to find the closest `char` boundary at which source","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":22219,"byte_end":22302,"line_start":75,"line_end":75,"column_start":5,"column_end":88}},{"value":"/ can be sliced, starting from `index`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":22307,"byte_end":22348,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":22353,"byte_end":22356,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ For binary sources (`&[u8]`) this should just return `index` back.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":22361,"byte_end":22431,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":22436,"byte_end":22445,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":22737,"byte_end":22748,"line_start":88,"line_end":88,"column_start":8,"column_end":19},"name":"is_boundary","qualname":"::source::Source::is_boundary","value":"pub fn is_boundary(&Self, usize) -> bool","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Check if `index` is valid for this `Source`, that is:","sig":null,"attributes":[{"value":"/ Check if `index` is valid for this `Source`, that is:","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":22524,"byte_end":22581,"line_start":84,"line_end":84,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":22586,"byte_end":22589,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ + It's not larger than the byte length of the `Source`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":22594,"byte_end":22653,"line_start":86,"line_end":86,"column_start":5,"column_end":64}},{"value":"/ + (`str` only) It doesn't land in the middle of a UTF-8 code point.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":22658,"byte_end":22729,"line_start":87,"line_end":87,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":131},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":25410,"byte_end":25415,"line_start":205,"line_end":205,"column_start":11,"column_end":16},"name":"Chunk","qualname":"::source::Chunk","value":"Chunk<'source>: Sized + Copy + PartialEq + Eq","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"decl_id":null,"docs":" A fixed, statically sized chunk of data that can be read from the `Source`.","sig":null,"attributes":[{"value":"/ A fixed, statically sized chunk of data that can be read from the `Source`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":25232,"byte_end":25311,"line_start":202,"line_end":202,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":25312,"byte_end":25315,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ This is implemented for `u8`, as well as byte arrays `&[u8; 1]` to `&[u8; 16]`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":25316,"byte_end":25399,"line_start":204,"line_end":204,"column_start":1,"column_end":84}}]},{"kind":"Const","id":{"krate":0,"index":133},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":25519,"byte_end":25523,"line_start":207,"line_end":207,"column_start":11,"column_end":15},"name":"SIZE","qualname":"::source::Chunk::SIZE","value":"usize","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":" Size of the chunk being accessed in bytes.\n","sig":null,"attributes":[{"value":"/ Size of the chunk being accessed in bytes.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":25462,"byte_end":25508,"line_start":206,"line_end":206,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":25595,"byte_end":25603,"line_start":210,"line_end":210,"column_start":15,"column_end":23},"name":"from_ptr","qualname":"::source::Chunk::from_ptr","value":"pub unsafe fn from_ptr(*const u8) -> Self","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":" Create a chunk from a raw byte pointer.\n","sig":null,"attributes":[{"value":"/ Create a chunk from a raw byte pointer.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":25537,"byte_end":25580,"line_start":209,"line_end":209,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":140},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"internal","qualname":"::internal","value":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":177},{"krate":0,"index":183},{"krate":0,"index":189},{"krate":0,"index":194},{"krate":0,"index":200},{"krate":0,"index":207},{"krate":0,"index":212}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":157},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":26532,"byte_end":26545,"line_start":10,"line_end":10,"column_start":11,"column_end":24},"name":"LexerInternal","qualname":"::internal::LexerInternal","value":"LexerInternal<'source>","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"decl_id":null,"docs":" Trait used by the functions contained in the `Lexicon`.","sig":null,"attributes":[{"value":"/ Trait used by the functions contained in the `Lexicon`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":26314,"byte_end":26373,"line_start":4,"line_end":4,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":26374,"byte_end":26377,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # WARNING!","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":26378,"byte_end":26392,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":26393,"byte_end":26396,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ **This trait, and it's methods, are not meant to be used outside of the","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":26397,"byte_end":26472,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ code produced by `#[derive(Logos)]` macro.**","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":26473,"byte_end":26521,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":159},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":26566,"byte_end":26571,"line_start":11,"line_end":11,"column_start":10,"column_end":15},"name":"Token","qualname":"::internal::LexerInternal::Token","value":"type Token;","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":26623,"byte_end":26627,"line_start":14,"line_end":14,"column_start":8,"column_end":12},"name":"read","qualname":"::internal::LexerInternal::read","value":"pub fn read<T: Chunk>(&Self) -> Option<T>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Read a chunk at current position.\n","sig":null,"attributes":[{"value":"/ Read a chunk at current position.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":26578,"byte_end":26615,"line_start":13,"line_end":13,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":26733,"byte_end":26740,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"read_at","qualname":"::internal::LexerInternal::read_at","value":"pub fn read_at<T: Chunk>(&Self, usize) -> Option<T>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Read a chunk at current position, offset by `n`.\n","sig":null,"attributes":[{"value":"/ Read a chunk at current position, offset by `n`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":26673,"byte_end":26725,"line_start":16,"line_end":16,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":26873,"byte_end":26887,"line_start":20,"line_end":20,"column_start":15,"column_end":29},"name":"read_unchecked","qualname":"::internal::LexerInternal::read_unchecked","value":"pub unsafe fn read_unchecked<T: Chunk>(&Self, usize) -> T","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Unchecked read a chunk at current position, offset by `n`.\n","sig":null,"attributes":[{"value":"/ Unchecked read a chunk at current position, offset by `n`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":26796,"byte_end":26858,"line_start":19,"line_end":19,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":26995,"byte_end":26999,"line_start":23,"line_end":23,"column_start":8,"column_end":12},"name":"test","qualname":"::internal::LexerInternal::test","value":"pub fn test<T: Chunk, F: FnOnce(T) -> bool>(&Self, F) -> bool","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Test a chunk at current position with a closure.\n","sig":null,"attributes":[{"value":"/ Test a chunk at current position with a closure.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":26935,"byte_end":26987,"line_start":22,"line_end":22,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":27145,"byte_end":27152,"line_start":26,"line_end":26,"column_start":8,"column_end":15},"name":"test_at","qualname":"::internal::LexerInternal::test_at","value":"pub fn test_at<T: Chunk, F: FnOnce(T) -> bool>(&Self, usize, F) -> bool","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Test a chunk at current position offset by `n` with a closure.\n","sig":null,"attributes":[{"value":"/ Test a chunk at current position offset by `n` with a closure.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":27071,"byte_end":27137,"line_start":25,"line_end":25,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":27274,"byte_end":27288,"line_start":29,"line_end":29,"column_start":8,"column_end":22},"name":"bump_unchecked","qualname":"::internal::LexerInternal::bump_unchecked","value":"pub fn bump_unchecked(&mut Self, usize)","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Bump the position by `size`.\n","sig":null,"attributes":[{"value":"/ Bump the position by `size`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":27234,"byte_end":27266,"line_start":28,"line_end":28,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":27366,"byte_end":27372,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"trivia","qualname":"::internal::LexerInternal::trivia","value":"pub fn trivia(&mut Self)","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Reset `token_start` to `token_end`.\n","sig":null,"attributes":[{"value":"/ Reset `token_start` to `token_end`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":27319,"byte_end":27358,"line_start":31,"line_end":31,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":27525,"byte_end":27530,"line_start":36,"line_end":36,"column_start":8,"column_end":13},"name":"error","qualname":"::internal::LexerInternal::error","value":"pub fn error(&mut Self)","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Set the current token to appropriate `#[error]` variant.\n Guarantee that `token_end` is at char boundary for `&str`.\n","sig":null,"attributes":[{"value":"/ Set the current token to appropriate `#[error]` variant.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":27390,"byte_end":27450,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"/ Guarantee that `token_end` is at char boundary for `&str`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":27455,"byte_end":27517,"line_start":35,"line_end":35,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":27551,"byte_end":27554,"line_start":38,"line_end":38,"column_start":8,"column_end":11},"name":"end","qualname":"::internal::LexerInternal::end","value":"pub fn end(&mut Self)","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":27575,"byte_end":27578,"line_start":40,"line_end":40,"column_start":8,"column_end":11},"name":"set","qualname":"::internal::LexerInternal::set","value":"pub fn set(&mut Self, Self::Token)","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":177},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":27624,"byte_end":27638,"line_start":43,"line_end":43,"column_start":11,"column_end":25},"name":"CallbackResult","qualname":"::internal::CallbackResult","value":"CallbackResult<'s, P, T: Logos>","parent":null,"children":[{"krate":0,"index":181}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":27669,"byte_end":27678,"line_start":44,"line_end":44,"column_start":8,"column_end":17},"name":"construct","qualname":"::internal::CallbackResult::construct","value":"pub fn construct<Constructor>(Self, Constructor, &mut Lexer) where\nConstructor: Fn(P) -> T","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":231},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":6727,"byte_end":6732,"line_start":185,"line_end":185,"column_start":11,"column_end":16},"name":"Logos","qualname":"::Logos","value":"Logos<'source>: Sized","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238}],"decl_id":null,"docs":" Trait implemented for an enum representing all tokens. You should never have\n to implement it manually, use the `#[derive(Logos)]` attribute on your enum.\n","sig":null,"attributes":[{"value":"/ Trait implemented for an enum representing all tokens. You should never have","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":6555,"byte_end":6635,"line_start":183,"line_end":183,"column_start":1,"column_end":81}},{"value":"/ to implement it manually, use the `#[derive(Logos)]` attribute on your enum.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":6636,"byte_end":6716,"line_start":184,"line_end":184,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":233},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":6910,"byte_end":6916,"line_start":188,"line_end":188,"column_start":10,"column_end":16},"name":"Extras","qualname":"::Logos::Extras","value":"type Extras;","parent":{"krate":0,"index":231},"children":[],"decl_id":null,"docs":" Associated type `Extras` for the particular lexer. This can be set using\n `#[logos(extras = MyExtras)]` and accessed inside callbacks.\n","sig":null,"attributes":[{"value":"/ Associated type `Extras` for the particular lexer. This can be set using","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":6755,"byte_end":6831,"line_start":186,"line_end":186,"column_start":5,"column_end":81}},{"value":"/ `#[logos(extras = MyExtras)]` and accessed inside callbacks.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":6836,"byte_end":6900,"line_start":187,"line_end":187,"column_start":5,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":234},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":7164,"byte_end":7170,"line_start":193,"line_end":193,"column_start":10,"column_end":16},"name":"Source","qualname":"::Logos::Source","value":"type Source: Source + ?Sized + 'source;","parent":{"krate":0,"index":231},"children":[],"decl_id":null,"docs":" Source type this token can be lexed from. This will default to `str`,\n unless one of the defined patterns explicitly uses non-unicode byte values\n or byte slices, in which case that implementation will use `[u8]`.\n","sig":null,"attributes":[{"value":"/ Source type this token can be lexed from. This will default to `str`,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":6923,"byte_end":6996,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ unless one of the defined patterns explicitly uses non-unicode byte values","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":7001,"byte_end":7079,"line_start":191,"line_end":191,"column_start":5,"column_end":83}},{"value":"/ or byte slices, in which case that implementation will use `[u8]`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":7084,"byte_end":7154,"line_start":192,"line_end":192,"column_start":5,"column_end":75}}]},{"kind":"Const","id":{"krate":0,"index":235},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":7270,"byte_end":7275,"line_start":196,"line_end":196,"column_start":11,"column_end":16},"name":"ERROR","qualname":"::Logos::ERROR","value":"Self","parent":{"krate":0,"index":231},"children":[],"decl_id":null,"docs":" Helper `const` of the variant marked as `#[error]`.\n","sig":null,"attributes":[{"value":"/ Helper `const` of the variant marked as `#[error]`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":7204,"byte_end":7259,"line_start":195,"line_end":195,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":7429,"byte_end":7432,"line_start":200,"line_end":200,"column_start":8,"column_end":11},"name":"lex","qualname":"::Logos::lex","value":"pub fn lex(&mut Lexer)","parent":{"krate":0,"index":231},"children":[],"decl_id":null,"docs":" The heart of Logos. Called by the `Lexer`. The implementation for this function\n is generated by the `logos-derive` crate.\n","sig":null,"attributes":[{"value":"/ The heart of Logos. Called by the `Lexer`. The implementation for this function","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":7288,"byte_end":7371,"line_start":198,"line_end":198,"column_start":5,"column_end":88}},{"value":"/ is generated by the `logos-derive` crate.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":7376,"byte_end":7421,"line_start":199,"line_end":199,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":7579,"byte_end":7584,"line_start":204,"line_end":204,"column_start":8,"column_end":13},"name":"lexer","qualname":"::Logos::lexer","value":"pub fn lexer(&'source Self::Source) -> Lexer where Self::Extras: Default","parent":{"krate":0,"index":231},"children":[],"decl_id":null,"docs":" Create a new instance of a `Lexer` that will produce tokens implementing\n this `Logos`.\n","sig":null,"attributes":[{"value":"/ Create a new instance of a `Lexer` that will produce tokens implementing","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":7473,"byte_end":7549,"line_start":202,"line_end":202,"column_start":5,"column_end":81}},{"value":"/ this `Logos`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":7554,"byte_end":7571,"line_start":203,"line_end":203,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":7858,"byte_end":7875,"line_start":213,"line_end":213,"column_start":8,"column_end":25},"name":"lexer_with_extras","qualname":"::Logos::lexer_with_extras","value":"pub fn lexer_with_extras(&'source Self::Source, Self::Extras) -> Lexer","parent":{"krate":0,"index":231},"children":[],"decl_id":null,"docs":" Create a new instance of a `Lexer` with the provided `Extras` that will\n produce tokens implementing this `Logos`.\n","sig":null,"attributes":[{"value":"/ Create a new instance of a `Lexer` with the provided `Extras` that will","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":7725,"byte_end":7800,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ produce tokens implementing this `Logos`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":7805,"byte_end":7850,"line_start":212,"line_end":212,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":239},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8767,"byte_end":8771,"line_start":251,"line_end":251,"column_start":12,"column_end":16},"name":"Skip","qualname":"::Skip","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type that can be returned from a callback, informing the `Lexer`, to skip\n current token match. See also [`logos::skip`](./fn.skip.html).","sig":null,"attributes":[{"value":"/ Type that can be returned from a callback, informing the `Lexer`, to skip","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8030,"byte_end":8107,"line_start":221,"line_end":221,"column_start":1,"column_end":78}},{"value":"/ current token match. See also [`logos::skip`](./fn.skip.html).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8108,"byte_end":8174,"line_start":222,"line_end":222,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8175,"byte_end":8178,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8179,"byte_end":8192,"line_start":224,"line_end":224,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8193,"byte_end":8196,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8197,"byte_end":8208,"line_start":226,"line_end":226,"column_start":1,"column_end":12}},{"value":"/ use logos::{Logos, Skip};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8209,"byte_end":8238,"line_start":227,"line_end":227,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8239,"byte_end":8242,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ #[derive(Logos, Debug, PartialEq)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8243,"byte_end":8281,"line_start":229,"line_end":229,"column_start":1,"column_end":39}},{"value":"/ enum Token<'a> {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8282,"byte_end":8302,"line_start":230,"line_end":230,"column_start":1,"column_end":21}},{"value":"/     // We will treat \"abc\" as if it was whitespace.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8303,"byte_end":8358,"line_start":231,"line_end":231,"column_start":1,"column_end":56}},{"value":"/     // This is identical to using `logos::skip`.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8359,"byte_end":8411,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/     #[regex(\" |abc\", |_| Skip)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8412,"byte_end":8447,"line_start":233,"line_end":233,"column_start":1,"column_end":36}},{"value":"/     #[error]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8448,"byte_end":8464,"line_start":234,"line_end":234,"column_start":1,"column_end":17}},{"value":"/     Error,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8465,"byte_end":8479,"line_start":235,"line_end":235,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8480,"byte_end":8483,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/     #[regex(\"[a-zA-Z]+\")]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8484,"byte_end":8513,"line_start":237,"line_end":237,"column_start":1,"column_end":30}},{"value":"/     Text(&'a str),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8514,"byte_end":8536,"line_start":238,"line_end":238,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8537,"byte_end":8542,"line_start":239,"line_end":239,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8543,"byte_end":8546,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ let tokens: Vec<_> = Token::lexer(\"Hello abc world\").collect();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8547,"byte_end":8614,"line_start":241,"line_end":241,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8615,"byte_end":8618,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8619,"byte_end":8634,"line_start":243,"line_end":243,"column_start":1,"column_end":16}},{"value":"/     tokens,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8635,"byte_end":8650,"line_start":244,"line_end":244,"column_start":1,"column_end":16}},{"value":"/     &[","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8651,"byte_end":8661,"line_start":245,"line_end":245,"column_start":1,"column_end":11}},{"value":"/         Token::Text(\"Hello\"),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8662,"byte_end":8695,"line_start":246,"line_end":246,"column_start":1,"column_end":34}},{"value":"/         Token::Text(\"world\"),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8696,"byte_end":8729,"line_start":247,"line_end":247,"column_start":1,"column_end":34}},{"value":"/     ],","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8730,"byte_end":8740,"line_start":248,"line_end":248,"column_start":1,"column_end":11}},{"value":"/ );","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8741,"byte_end":8747,"line_start":249,"line_end":249,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8748,"byte_end":8755,"line_start":250,"line_end":250,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":243},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9851,"byte_end":9855,"line_start":295,"line_end":295,"column_start":5,"column_end":9},"name":"Emit","qualname":"::Filter::Emit","value":"Filter::Emit(T)","parent":{"krate":0,"index":241},"children":[],"decl_id":null,"docs":" Emit a token with a given value `T`. Use `()` for unit variants without fields.\n","sig":null,"attributes":[{"value":"/ Emit a token with a given value `T`. Use `()` for unit variants without fields.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9763,"byte_end":9846,"line_start":294,"line_end":294,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":246},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9932,"byte_end":9936,"line_start":297,"line_end":297,"column_start":5,"column_end":9},"name":"Skip","qualname":"::Filter::Skip","value":"Filter::Skip","parent":{"krate":0,"index":241},"children":[],"decl_id":null,"docs":" Skip current match, analog to [`Skip`](./struct.Skip.html).\n","sig":null,"attributes":[{"value":"/ Skip current match, analog to [`Skip`](./struct.Skip.html).","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9864,"byte_end":9927,"line_start":296,"line_end":296,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":241},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9747,"byte_end":9753,"line_start":293,"line_end":293,"column_start":10,"column_end":16},"name":"Filter","qualname":"::Filter","value":"pub enum Filter<T> { Emit(T), Skip, }","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":246}],"decl_id":null,"docs":" Type that can be returned from a callback, either producing a field\n for a token, or skipping it.","sig":null,"attributes":[{"value":"/ Type that can be returned from a callback, either producing a field","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8774,"byte_end":8845,"line_start":253,"line_end":253,"column_start":1,"column_end":72}},{"value":"/ for a token, or skipping it.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8846,"byte_end":8878,"line_start":254,"line_end":254,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8879,"byte_end":8882,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8883,"byte_end":8896,"line_start":256,"line_end":256,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8897,"byte_end":8900,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8901,"byte_end":8912,"line_start":258,"line_end":258,"column_start":1,"column_end":12}},{"value":"/ use logos::{Logos, Filter};","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8913,"byte_end":8944,"line_start":259,"line_end":259,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8945,"byte_end":8948,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ #[derive(Logos, Debug, PartialEq)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8949,"byte_end":8987,"line_start":261,"line_end":261,"column_start":1,"column_end":39}},{"value":"/ enum Token {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":8988,"byte_end":9004,"line_start":262,"line_end":262,"column_start":1,"column_end":17}},{"value":"/     #[regex(r\"[ \\n\\f\\t]+\", logos::skip)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9005,"byte_end":9049,"line_start":263,"line_end":263,"column_start":1,"column_end":45}},{"value":"/     #[error]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9050,"byte_end":9066,"line_start":264,"line_end":264,"column_start":1,"column_end":17}},{"value":"/     Error,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9067,"byte_end":9081,"line_start":265,"line_end":265,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9082,"byte_end":9085,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     #[regex(\"[0-9]+\", |lex| {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9086,"byte_end":9119,"line_start":267,"line_end":267,"column_start":1,"column_end":34}},{"value":"/         let n: u64 = lex.slice().parse().unwrap();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9120,"byte_end":9174,"line_start":268,"line_end":268,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9175,"byte_end":9178,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/         // Only emit a token if `n` is an even number","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9179,"byte_end":9236,"line_start":270,"line_end":270,"column_start":1,"column_end":58}},{"value":"/         match n % 2 {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9237,"byte_end":9262,"line_start":271,"line_end":271,"column_start":1,"column_end":26}},{"value":"/             0 => Filter::Emit(n),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9263,"byte_end":9300,"line_start":272,"line_end":272,"column_start":1,"column_end":38}},{"value":"/             _ => Filter::Skip,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9301,"byte_end":9335,"line_start":273,"line_end":273,"column_start":1,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9336,"byte_end":9349,"line_start":274,"line_end":274,"column_start":1,"column_end":14}},{"value":"/     })]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9350,"byte_end":9361,"line_start":275,"line_end":275,"column_start":1,"column_end":12}},{"value":"/     EvenNumber(u64)","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9362,"byte_end":9385,"line_start":276,"line_end":276,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9386,"byte_end":9391,"line_start":277,"line_end":277,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9392,"byte_end":9395,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ let tokens: Vec<_> = Token::lexer(\"20 11 42 23 100 8002\").collect();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9396,"byte_end":9468,"line_start":279,"line_end":279,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9469,"byte_end":9472,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9473,"byte_end":9488,"line_start":281,"line_end":281,"column_start":1,"column_end":16}},{"value":"/     tokens,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9489,"byte_end":9504,"line_start":282,"line_end":282,"column_start":1,"column_end":16}},{"value":"/     &[","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9505,"byte_end":9515,"line_start":283,"line_end":283,"column_start":1,"column_end":11}},{"value":"/         Token::EvenNumber(20),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9516,"byte_end":9550,"line_start":284,"line_end":284,"column_start":1,"column_end":35}},{"value":"/         // skipping 11","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9551,"byte_end":9577,"line_start":285,"line_end":285,"column_start":1,"column_end":27}},{"value":"/         Token::EvenNumber(42),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9578,"byte_end":9612,"line_start":286,"line_end":286,"column_start":1,"column_end":35}},{"value":"/         // skipping 23","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9613,"byte_end":9639,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/         Token::EvenNumber(100),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9640,"byte_end":9675,"line_start":288,"line_end":288,"column_start":1,"column_end":36}},{"value":"/         Token::EvenNumber(8002),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9676,"byte_end":9712,"line_start":289,"line_end":289,"column_start":1,"column_end":37}},{"value":"/     ]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9713,"byte_end":9722,"line_start":290,"line_end":290,"column_start":1,"column_end":10}},{"value":"/ );","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9723,"byte_end":9729,"line_start":291,"line_end":291,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9730,"byte_end":9737,"line_start":292,"line_end":292,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":248},"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10555,"byte_end":10559,"line_start":329,"line_end":329,"column_start":8,"column_end":12},"name":"skip","qualname":"::skip","value":"pub fn skip<'source, Token: Logos>(&mut Lexer) -> Skip","parent":null,"children":[],"decl_id":null,"docs":" Predefined callback that will inform the `Lexer` to skip a definition.","sig":null,"attributes":[{"value":"/ Predefined callback that will inform the `Lexer` to skip a definition.","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":9941,"byte_end":10015,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10016,"byte_end":10019,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10020,"byte_end":10033,"line_start":302,"line_end":302,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10034,"byte_end":10037,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10038,"byte_end":10049,"line_start":304,"line_end":304,"column_start":1,"column_end":12}},{"value":"/ use logos::Logos;","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10050,"byte_end":10071,"line_start":305,"line_end":305,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10072,"byte_end":10075,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ #[derive(Logos, Debug, PartialEq)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10076,"byte_end":10114,"line_start":307,"line_end":307,"column_start":1,"column_end":39}},{"value":"/ enum Token<'a> {","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10115,"byte_end":10135,"line_start":308,"line_end":308,"column_start":1,"column_end":21}},{"value":"/     // We will treat \"abc\" as if it was whitespace","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10136,"byte_end":10190,"line_start":309,"line_end":309,"column_start":1,"column_end":55}},{"value":"/     #[regex(\" |abc\", logos::skip)]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10191,"byte_end":10229,"line_start":310,"line_end":310,"column_start":1,"column_end":39}},{"value":"/     #[error]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10230,"byte_end":10246,"line_start":311,"line_end":311,"column_start":1,"column_end":17}},{"value":"/     Error,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10247,"byte_end":10261,"line_start":312,"line_end":312,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10262,"byte_end":10265,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/     #[regex(\"[a-zA-Z]+\")]","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10266,"byte_end":10295,"line_start":314,"line_end":314,"column_start":1,"column_end":30}},{"value":"/     Text(&'a str),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10296,"byte_end":10318,"line_start":315,"line_end":315,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10319,"byte_end":10324,"line_start":316,"line_end":316,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10325,"byte_end":10328,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ let tokens: Vec<_> = Token::lexer(\"Hello abc world\").collect();","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10329,"byte_end":10396,"line_start":318,"line_end":318,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10397,"byte_end":10400,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10401,"byte_end":10416,"line_start":320,"line_end":320,"column_start":1,"column_end":16}},{"value":"/     tokens,","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10417,"byte_end":10432,"line_start":321,"line_end":321,"column_start":1,"column_end":16}},{"value":"/     &[","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10433,"byte_end":10443,"line_start":322,"line_end":322,"column_start":1,"column_end":11}},{"value":"/         Token::Text(\"Hello\"),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10444,"byte_end":10477,"line_start":323,"line_end":323,"column_start":1,"column_end":34}},{"value":"/         Token::Text(\"world\"),","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10478,"byte_end":10511,"line_start":324,"line_end":324,"column_start":1,"column_end":34}},{"value":"/     ],","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10512,"byte_end":10522,"line_start":325,"line_end":325,"column_start":1,"column_end":11}},{"value":"/ );","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10523,"byte_end":10529,"line_start":326,"line_end":326,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10530,"byte_end":10537,"line_start":327,"line_end":327,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":10538,"byte_end":10547,"line_start":328,"line_end":328,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":11478,"byte_end":11483,"line_start":22,"line_end":22,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":15637,"byte_end":15642,"line_start":154,"line_end":154,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":15927,"byte_end":15932,"line_start":168,"line_end":168,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":16708,"byte_end":16719,"line_start":195,"line_end":195,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":17132,"byte_end":17137,"line_start":211,"line_end":211,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":27839,"byte_end":27840,"line_start":49,"line_end":49,"column_start":56,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":28387,"byte_end":28393,"line_start":72,"line_end":72,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":28725,"byte_end":28731,"line_start":85,"line_end":85,"column_start":59,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":29061,"byte_end":29065,"line_start":98,"line_end":98,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":29315,"byte_end":29321,"line_start":109,"line_end":109,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":6430,"byte_end":6436,"line_start":175,"line_end":175,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":86}},{"kind":"Mod","span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":6462,"byte_end":6470,"line_start":178,"line_end":178,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":140}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":11478,"byte_end":11483,"line_start":22,"line_end":22,"column_start":38,"column_end":43},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":24},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":15637,"byte_end":15642,"line_start":154,"line_end":154,"column_start":32,"column_end":37},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":15927,"byte_end":15932,"line_start":168,"line_end":168,"column_start":35,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":7566}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":16708,"byte_end":16719,"line_start":195,"line_end":195,"column_start":35,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":7566}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lexer.rs","byte_start":17132,"byte_end":17137,"line_start":211,"line_end":211,"column_start":49,"column_end":54},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":24},"to":{"krate":0,"index":157}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":25426,"byte_end":25431,"line_start":205,"line_end":205,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":131}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":25434,"byte_end":25438,"line_start":205,"line_end":205,"column_start":35,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2999},"to":{"krate":0,"index":131}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":25441,"byte_end":25450,"line_start":205,"line_end":205,"column_start":42,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":2640},"to":{"krate":0,"index":131}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/source.rs","byte_start":25453,"byte_end":25455,"line_start":205,"line_end":205,"column_start":54,"column_end":56},"kind":"SuperTrait","from":{"krate":2,"index":2645},"to":{"krate":0,"index":131}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":27839,"byte_end":27840,"line_start":49,"line_end":49,"column_start":56,"column_end":57},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":185},"to":{"krate":0,"index":177}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":28387,"byte_end":28393,"line_start":72,"line_end":72,"column_start":56,"column_end":62},"kind":{"Impl":{"id":9}},"from":{"krate":2,"index":36703},"to":{"krate":0,"index":177}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":28725,"byte_end":28731,"line_start":85,"line_end":85,"column_start":59,"column_end":65},"kind":{"Impl":{"id":10}},"from":{"krate":2,"index":36829},"to":{"krate":0,"index":177}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":29061,"byte_end":29065,"line_start":98,"line_end":98,"column_start":54,"column_end":58},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":239},"to":{"krate":0,"index":177}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/internal.rs","byte_start":29315,"byte_end":29321,"line_start":109,"line_end":109,"column_start":56,"column_end":62},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":241},"to":{"krate":0,"index":177}},{"span":{"file_name":"/Users/quanrong/.cargo/registry/src/github.com-1ecc6299db9ec823/logos-0.12.0/src/lib.rs","byte_start":6743,"byte_end":6748,"line_start":185,"line_end":185,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":231}}]}